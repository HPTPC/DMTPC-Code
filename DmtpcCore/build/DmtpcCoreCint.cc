//
// File generated by rootcint at Sat Jun 17 00:26:26 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME builddIDmtpcCoreCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DmtpcCoreCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace dmtpc {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpc_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc", 0 /*version*/, "./include/WritableEvent.hh", 8,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpc_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpc_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace dmtpc {
namespace core {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLcore_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::core", 0 /*version*/, "./include/WritableEvent.hh", 10,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLcore_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLcore_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void dmtpccLcLcorecLcLCameraConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLCameraConfig(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLCameraConfig(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLCameraConfig(void *p);
   static void deleteArray_dmtpccLcLcorecLcLCameraConfig(void *p);
   static void destruct_dmtpccLcLcorecLcLCameraConfig(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::CameraConfig*)
   {
      ::dmtpc::core::CameraConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::CameraConfig >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::CameraConfig", ::dmtpc::core::CameraConfig::Class_Version(), "./include/CameraConfig.hh", 12,
                  typeid(::dmtpc::core::CameraConfig), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::CameraConfig::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::CameraConfig) );
      instance.SetNew(&new_dmtpccLcLcorecLcLCameraConfig);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLCameraConfig);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLCameraConfig);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLCameraConfig);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLCameraConfig);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::CameraConfig*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::CameraConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::CameraConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLCameraInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLCameraInfo(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLCameraInfo(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLCameraInfo(void *p);
   static void deleteArray_dmtpccLcLcorecLcLCameraInfo(void *p);
   static void destruct_dmtpccLcLcorecLcLCameraInfo(void *p);
   static void streamer_dmtpccLcLcorecLcLCameraInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::CameraInfo*)
   {
      ::dmtpc::core::CameraInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::CameraInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::CameraInfo", ::dmtpc::core::CameraInfo::Class_Version(), "./include/CameraInfo.hh", 12,
                  typeid(::dmtpc::core::CameraInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::CameraInfo::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::core::CameraInfo) );
      instance.SetNew(&new_dmtpccLcLcorecLcLCameraInfo);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLCameraInfo);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLCameraInfo);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLCameraInfo);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLCameraInfo);
      instance.SetStreamerFunc(&streamer_dmtpccLcLcorecLcLCameraInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::CameraInfo*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::CameraInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::CameraInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace dmtpc {
namespace core {
namespace common {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLcorecLcLcommon_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::core::common", 0 /*version*/, "./include/CommonTools.hh", 15,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLcorecLcLcommon_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLcorecLcLcommon_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}
}

namespace ROOTDict {
   void dmtpccLcLcorecLcLConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLcorecLcLConfig_Dictionary();
   static void *new_dmtpccLcLcorecLcLConfig(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLConfig(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLConfig(void *p);
   static void deleteArray_dmtpccLcLcorecLcLConfig(void *p);
   static void destruct_dmtpccLcLcorecLcLConfig(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::Config*)
   {
      ::dmtpc::core::Config *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::core::Config),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::Config", "./include/Config.hh", 17,
                  typeid(::dmtpc::core::Config), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLcorecLcLConfig_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::core::Config) );
      instance.SetNew(&new_dmtpccLcLcorecLcLConfig);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLConfig);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLConfig);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLConfig);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLConfig);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::Config*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::Config*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::Config*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLcorecLcLConfig_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Config*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLDatasetHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLDatasetHeader(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLDatasetHeader(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLDatasetHeader(void *p);
   static void deleteArray_dmtpccLcLcorecLcLDatasetHeader(void *p);
   static void destruct_dmtpccLcLcorecLcLDatasetHeader(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::DatasetHeader*)
   {
      ::dmtpc::core::DatasetHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::DatasetHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::DatasetHeader", ::dmtpc::core::DatasetHeader::Class_Version(), "./include/DatasetHeader.hh", 16,
                  typeid(::dmtpc::core::DatasetHeader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::DatasetHeader::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::DatasetHeader) );
      instance.SetNew(&new_dmtpccLcLcorecLcLDatasetHeader);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLDatasetHeader);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLDatasetHeader);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLDatasetHeader);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLDatasetHeader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::DatasetHeader*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::DatasetHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::DatasetHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLEvent(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLEvent(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLEvent(void *p);
   static void deleteArray_dmtpccLcLcorecLcLEvent(void *p);
   static void destruct_dmtpccLcLcorecLcLEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::Event*)
   {
      ::dmtpc::core::Event *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::Event >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::Event", ::dmtpc::core::Event::Class_Version(), "./include/Event.hh", 26,
                  typeid(::dmtpc::core::Event), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::Event::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::Event) );
      instance.SetNew(&new_dmtpccLcLcorecLcLEvent);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLEvent);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLEvent);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLEvent);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::Event*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::Event*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::Event*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLImage_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLImage(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLImage(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLImage(void *p);
   static void deleteArray_dmtpccLcLcorecLcLImage(void *p);
   static void destruct_dmtpccLcLcorecLcLImage(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::Image*)
   {
      ::dmtpc::core::Image *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::Image >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::Image", ::dmtpc::core::Image::Class_Version(), "./include/Image.hh", 17,
                  typeid(::dmtpc::core::Image), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::Image::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::Image) );
      instance.SetNew(&new_dmtpccLcLcorecLcLImage);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLImage);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLImage);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLImage);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLImage);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::Image*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::Image*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::Image*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLDataset_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLcorecLcLDataset_Dictionary();
   static void *new_dmtpccLcLcorecLcLDataset(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLDataset(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLDataset(void *p);
   static void deleteArray_dmtpccLcLcorecLcLDataset(void *p);
   static void destruct_dmtpccLcLcorecLcLDataset(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::Dataset*)
   {
      ::dmtpc::core::Dataset *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::core::Dataset),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::Dataset", "./include/Dataset.hh", 20,
                  typeid(::dmtpc::core::Dataset), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLcorecLcLDataset_Dictionary, isa_proxy, 1,
                  sizeof(::dmtpc::core::Dataset) );
      instance.SetNew(&new_dmtpccLcLcorecLcLDataset);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLDataset);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLDataset);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLDataset);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLDataset);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::Dataset*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::Dataset*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::Dataset*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLcorecLcLDataset_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Dataset*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLDetectorConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLDetectorConfig(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLDetectorConfig(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLDetectorConfig(void *p);
   static void deleteArray_dmtpccLcLcorecLcLDetectorConfig(void *p);
   static void destruct_dmtpccLcLcorecLcLDetectorConfig(void *p);
   static void streamer_dmtpccLcLcorecLcLDetectorConfig(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::DetectorConfig*)
   {
      ::dmtpc::core::DetectorConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::DetectorConfig >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::DetectorConfig", ::dmtpc::core::DetectorConfig::Class_Version(), "./include/DetectorConfig.hh", 32,
                  typeid(::dmtpc::core::DetectorConfig), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::DetectorConfig::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::core::DetectorConfig) );
      instance.SetNew(&new_dmtpccLcLcorecLcLDetectorConfig);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLDetectorConfig);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLDetectorConfig);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLDetectorConfig);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLDetectorConfig);
      instance.SetStreamerFunc(&streamer_dmtpccLcLcorecLcLDetectorConfig);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::DetectorConfig*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::DetectorConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::DetectorConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLWaveform_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLWaveform(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLWaveform(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLWaveform(void *p);
   static void deleteArray_dmtpccLcLcorecLcLWaveform(void *p);
   static void destruct_dmtpccLcLcorecLcLWaveform(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::Waveform*)
   {
      ::dmtpc::core::Waveform *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::Waveform >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::Waveform", ::dmtpc::core::Waveform::Class_Version(), "./include/Waveform.hh", 14,
                  typeid(::dmtpc::core::Waveform), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::Waveform::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::Waveform) );
      instance.SetNew(&new_dmtpccLcLcorecLcLWaveform);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLWaveform);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLWaveform);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLWaveform);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLWaveform);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::Waveform*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::Waveform*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::Waveform*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLScopeInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLScopeInfo(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLScopeInfo(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLScopeInfo(void *p);
   static void deleteArray_dmtpccLcLcorecLcLScopeInfo(void *p);
   static void destruct_dmtpccLcLcorecLcLScopeInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::ScopeInfo*)
   {
      ::dmtpc::core::ScopeInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::ScopeInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::ScopeInfo", ::dmtpc::core::ScopeInfo::Class_Version(), "./include/ScopeInfo.hh", 44,
                  typeid(::dmtpc::core::ScopeInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::ScopeInfo::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::ScopeInfo) );
      instance.SetNew(&new_dmtpccLcLcorecLcLScopeInfo);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLScopeInfo);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLScopeInfo);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLScopeInfo);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLScopeInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::ScopeInfo*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::ScopeInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::ScopeInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLLocation_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLLocation(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLLocation(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLLocation(void *p);
   static void deleteArray_dmtpccLcLcorecLcLLocation(void *p);
   static void destruct_dmtpccLcLcorecLcLLocation(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::Location*)
   {
      ::dmtpc::core::Location *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::Location >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::Location", ::dmtpc::core::Location::Class_Version(), "./include/Location.hh", 12,
                  typeid(::dmtpc::core::Location), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::Location::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::Location) );
      instance.SetNew(&new_dmtpccLcLcorecLcLLocation);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLLocation);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLLocation);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLLocation);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLLocation);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::Location*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::Location*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::Location*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLTriggerInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLTriggerInfo(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLTriggerInfo(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLTriggerInfo(void *p);
   static void deleteArray_dmtpccLcLcorecLcLTriggerInfo(void *p);
   static void destruct_dmtpccLcLcorecLcLTriggerInfo(void *p);
   static void streamer_dmtpccLcLcorecLcLTriggerInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::TriggerInfo*)
   {
      ::dmtpc::core::TriggerInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::TriggerInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::TriggerInfo", ::dmtpc::core::TriggerInfo::Class_Version(), "./include/TriggerInfo.hh", 13,
                  typeid(::dmtpc::core::TriggerInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::TriggerInfo::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::core::TriggerInfo) );
      instance.SetNew(&new_dmtpccLcLcorecLcLTriggerInfo);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLTriggerInfo);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLTriggerInfo);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLTriggerInfo);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLTriggerInfo);
      instance.SetStreamerFunc(&streamer_dmtpccLcLcorecLcLTriggerInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::TriggerInfo*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::TriggerInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::TriggerInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLRunConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLRunConfig(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLRunConfig(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLRunConfig(void *p);
   static void deleteArray_dmtpccLcLcorecLcLRunConfig(void *p);
   static void destruct_dmtpccLcLcorecLcLRunConfig(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::RunConfig*)
   {
      ::dmtpc::core::RunConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::RunConfig >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::RunConfig", ::dmtpc::core::RunConfig::Class_Version(), "./include/RunConfig.hh", 13,
                  typeid(::dmtpc::core::RunConfig), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::RunConfig::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::RunConfig) );
      instance.SetNew(&new_dmtpccLcLcorecLcLRunConfig);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLRunConfig);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLRunConfig);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLRunConfig);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLRunConfig);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::RunConfig*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::RunConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::RunConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLScopeChannelConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLScopeChannelConfig(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLScopeChannelConfig(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLScopeChannelConfig(void *p);
   static void deleteArray_dmtpccLcLcorecLcLScopeChannelConfig(void *p);
   static void destruct_dmtpccLcLcorecLcLScopeChannelConfig(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::ScopeChannelConfig*)
   {
      ::dmtpc::core::ScopeChannelConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::ScopeChannelConfig >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::ScopeChannelConfig", ::dmtpc::core::ScopeChannelConfig::Class_Version(), "./include/ScopeConfig.hh", 17,
                  typeid(::dmtpc::core::ScopeChannelConfig), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::ScopeChannelConfig::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::ScopeChannelConfig) );
      instance.SetNew(&new_dmtpccLcLcorecLcLScopeChannelConfig);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLScopeChannelConfig);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLScopeChannelConfig);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLScopeChannelConfig);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLScopeChannelConfig);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::ScopeChannelConfig*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::ScopeChannelConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLScopeConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLScopeConfig(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLScopeConfig(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLScopeConfig(void *p);
   static void deleteArray_dmtpccLcLcorecLcLScopeConfig(void *p);
   static void destruct_dmtpccLcLcorecLcLScopeConfig(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::ScopeConfig*)
   {
      ::dmtpc::core::ScopeConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::ScopeConfig >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::ScopeConfig", ::dmtpc::core::ScopeConfig::Class_Version(), "./include/ScopeConfig.hh", 47,
                  typeid(::dmtpc::core::ScopeConfig), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::ScopeConfig::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::ScopeConfig) );
      instance.SetNew(&new_dmtpccLcLcorecLcLScopeConfig);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLScopeConfig);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLScopeConfig);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLScopeConfig);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLScopeConfig);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::ScopeConfig*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::ScopeConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::ScopeConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLScopeChannelInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLScopeChannelInfo(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLScopeChannelInfo(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLScopeChannelInfo(void *p);
   static void deleteArray_dmtpccLcLcorecLcLScopeChannelInfo(void *p);
   static void destruct_dmtpccLcLcorecLcLScopeChannelInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::ScopeChannelInfo*)
   {
      ::dmtpc::core::ScopeChannelInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::ScopeChannelInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::ScopeChannelInfo", ::dmtpc::core::ScopeChannelInfo::Class_Version(), "./include/ScopeInfo.hh", 16,
                  typeid(::dmtpc::core::ScopeChannelInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::ScopeChannelInfo::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::ScopeChannelInfo) );
      instance.SetNew(&new_dmtpccLcLcorecLcLScopeChannelInfo);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLScopeChannelInfo);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLScopeChannelInfo);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLScopeChannelInfo);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLScopeChannelInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::ScopeChannelInfo*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::ScopeChannelInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLScopeTraceInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLScopeTraceInfo(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLScopeTraceInfo(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLScopeTraceInfo(void *p);
   static void deleteArray_dmtpccLcLcorecLcLScopeTraceInfo(void *p);
   static void destruct_dmtpccLcLcorecLcLScopeTraceInfo(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::ScopeTraceInfo*)
   {
      ::dmtpc::core::ScopeTraceInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::ScopeTraceInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::ScopeTraceInfo", ::dmtpc::core::ScopeTraceInfo::Class_Version(), "./include/ScopeInfo.hh", 33,
                  typeid(::dmtpc::core::ScopeTraceInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::ScopeTraceInfo::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::ScopeTraceInfo) );
      instance.SetNew(&new_dmtpccLcLcorecLcLScopeTraceInfo);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLScopeTraceInfo);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLScopeTraceInfo);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLScopeTraceInfo);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLScopeTraceInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::ScopeTraceInfo*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::ScopeTraceInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::ScopeTraceInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLWritableDataset_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLcorecLcLWritableDataset_Dictionary();
   static void delete_dmtpccLcLcorecLcLWritableDataset(void *p);
   static void deleteArray_dmtpccLcLcorecLcLWritableDataset(void *p);
   static void destruct_dmtpccLcLcorecLcLWritableDataset(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::WritableDataset*)
   {
      ::dmtpc::core::WritableDataset *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::core::WritableDataset),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::WritableDataset", "./include/WritableDataset.hh", 13,
                  typeid(::dmtpc::core::WritableDataset), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLcorecLcLWritableDataset_Dictionary, isa_proxy, 1,
                  sizeof(::dmtpc::core::WritableDataset) );
      instance.SetDelete(&delete_dmtpccLcLcorecLcLWritableDataset);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLWritableDataset);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLWritableDataset);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::WritableDataset*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::WritableDataset*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::WritableDataset*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLcorecLcLWritableDataset_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::WritableDataset*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLcorecLcLWritableEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLcorecLcLWritableEvent(void *p = 0);
   static void *newArray_dmtpccLcLcorecLcLWritableEvent(Long_t size, void *p);
   static void delete_dmtpccLcLcorecLcLWritableEvent(void *p);
   static void deleteArray_dmtpccLcLcorecLcLWritableEvent(void *p);
   static void destruct_dmtpccLcLcorecLcLWritableEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::core::WritableEvent*)
   {
      ::dmtpc::core::WritableEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::core::WritableEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::core::WritableEvent", ::dmtpc::core::WritableEvent::Class_Version(), "./include/WritableEvent.hh", 13,
                  typeid(::dmtpc::core::WritableEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::core::WritableEvent::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::core::WritableEvent) );
      instance.SetNew(&new_dmtpccLcLcorecLcLWritableEvent);
      instance.SetNewArray(&newArray_dmtpccLcLcorecLcLWritableEvent);
      instance.SetDelete(&delete_dmtpccLcLcorecLcLWritableEvent);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLcorecLcLWritableEvent);
      instance.SetDestructor(&destruct_dmtpccLcLcorecLcLWritableEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::core::WritableEvent*)
   {
      return GenerateInitInstanceLocal((::dmtpc::core::WritableEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::core::WritableEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr CameraConfig::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CameraConfig::Class_Name()
{
   return "dmtpc::core::CameraConfig";
}

//______________________________________________________________________________
const char *CameraConfig::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::CameraConfig*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CameraConfig::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::CameraConfig*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CameraConfig::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::CameraConfig*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CameraConfig::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::CameraConfig*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr CameraInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CameraInfo::Class_Name()
{
   return "dmtpc::core::CameraInfo";
}

//______________________________________________________________________________
const char *CameraInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::CameraInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CameraInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::CameraInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CameraInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::CameraInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CameraInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::CameraInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr DatasetHeader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DatasetHeader::Class_Name()
{
   return "dmtpc::core::DatasetHeader";
}

//______________________________________________________________________________
const char *DatasetHeader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::DatasetHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DatasetHeader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::DatasetHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DatasetHeader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::DatasetHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DatasetHeader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::DatasetHeader*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr Event::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Event::Class_Name()
{
   return "dmtpc::core::Event";
}

//______________________________________________________________________________
const char *Event::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Event*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Event::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Event*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Event::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Event*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Event::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Event*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr Image::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Image::Class_Name()
{
   return "dmtpc::core::Image";
}

//______________________________________________________________________________
const char *Image::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Image*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Image::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Image*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Image::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Image*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Image::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Image*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr DetectorConfig::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DetectorConfig::Class_Name()
{
   return "dmtpc::core::DetectorConfig";
}

//______________________________________________________________________________
const char *DetectorConfig::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::DetectorConfig*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DetectorConfig::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::DetectorConfig*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DetectorConfig::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::DetectorConfig*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DetectorConfig::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::DetectorConfig*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr Waveform::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Waveform::Class_Name()
{
   return "dmtpc::core::Waveform";
}

//______________________________________________________________________________
const char *Waveform::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Waveform*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Waveform::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Waveform*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Waveform::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Waveform*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Waveform::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Waveform*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr ScopeInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScopeInfo::Class_Name()
{
   return "dmtpc::core::ScopeInfo";
}

//______________________________________________________________________________
const char *ScopeInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScopeInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScopeInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScopeInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr Location::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Location::Class_Name()
{
   return "dmtpc::core::Location";
}

//______________________________________________________________________________
const char *Location::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Location*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Location::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Location*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Location::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Location*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Location::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::Location*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr TriggerInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *TriggerInfo::Class_Name()
{
   return "dmtpc::core::TriggerInfo";
}

//______________________________________________________________________________
const char *TriggerInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::TriggerInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TriggerInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::TriggerInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TriggerInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::TriggerInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TriggerInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::TriggerInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr RunConfig::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RunConfig::Class_Name()
{
   return "dmtpc::core::RunConfig";
}

//______________________________________________________________________________
const char *RunConfig::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::RunConfig*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RunConfig::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::RunConfig*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RunConfig::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::RunConfig*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RunConfig::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::RunConfig*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr ScopeChannelConfig::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScopeChannelConfig::Class_Name()
{
   return "dmtpc::core::ScopeChannelConfig";
}

//______________________________________________________________________________
const char *ScopeChannelConfig::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelConfig*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScopeChannelConfig::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelConfig*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScopeChannelConfig::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelConfig*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScopeChannelConfig::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelConfig*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr ScopeConfig::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScopeConfig::Class_Name()
{
   return "dmtpc::core::ScopeConfig";
}

//______________________________________________________________________________
const char *ScopeConfig::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeConfig*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScopeConfig::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeConfig*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScopeConfig::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeConfig*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScopeConfig::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeConfig*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr ScopeChannelInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScopeChannelInfo::Class_Name()
{
   return "dmtpc::core::ScopeChannelInfo";
}

//______________________________________________________________________________
const char *ScopeChannelInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScopeChannelInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScopeChannelInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScopeChannelInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeChannelInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr ScopeTraceInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ScopeTraceInfo::Class_Name()
{
   return "dmtpc::core::ScopeTraceInfo";
}

//______________________________________________________________________________
const char *ScopeTraceInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeTraceInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ScopeTraceInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeTraceInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ScopeTraceInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeTraceInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ScopeTraceInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::ScopeTraceInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
atomic_TClass_ptr WritableEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WritableEvent::Class_Name()
{
   return "dmtpc::core::WritableEvent";
}

//______________________________________________________________________________
const char *WritableEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::WritableEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WritableEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::WritableEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WritableEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::WritableEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WritableEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::core::WritableEvent*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLConfig(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::Config : new ::dmtpc::core::Config;
   }
   static void *newArray_dmtpccLcLcorecLcLConfig(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::Config[nElements] : new ::dmtpc::core::Config[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLConfig(void *p) {
      delete ((::dmtpc::core::Config*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLConfig(void *p) {
      delete [] ((::dmtpc::core::Config*)p);
   }
   static void destruct_dmtpccLcLcorecLcLConfig(void *p) {
      typedef ::dmtpc::core::Config current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::Config

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void Waveform::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::Waveform.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::Waveform::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::Waveform::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void Waveform::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::Waveform.
      TClass *R__cl = ::dmtpc::core::Waveform::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*data", &data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*physical_data", &physical_data);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trace_info", &trace_info);
      R__insp.InspectMember(trace_info, "trace_info.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vmin", &vmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vmax", &vmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbits", &nbits);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLWaveform(void *p) {
      return  p ? new(p) ::dmtpc::core::Waveform : new ::dmtpc::core::Waveform;
   }
   static void *newArray_dmtpccLcLcorecLcLWaveform(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::Waveform[nElements] : new ::dmtpc::core::Waveform[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLWaveform(void *p) {
      delete ((::dmtpc::core::Waveform*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLWaveform(void *p) {
      delete [] ((::dmtpc::core::Waveform*)p);
   }
   static void destruct_dmtpccLcLcorecLcLWaveform(void *p) {
      typedef ::dmtpc::core::Waveform current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::Waveform

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLDataset(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::Dataset : new ::dmtpc::core::Dataset;
   }
   static void *newArray_dmtpccLcLcorecLcLDataset(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::Dataset[nElements] : new ::dmtpc::core::Dataset[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLDataset(void *p) {
      delete ((::dmtpc::core::Dataset*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLDataset(void *p) {
      delete [] ((::dmtpc::core::Dataset*)p);
   }
   static void destruct_dmtpccLcLcorecLcLDataset(void *p) {
      typedef ::dmtpc::core::Dataset current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::Dataset

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLWritableDataset(void *p) {
      delete ((::dmtpc::core::WritableDataset*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLWritableDataset(void *p) {
      delete [] ((::dmtpc::core::WritableDataset*)p);
   }
   static void destruct_dmtpccLcLcorecLcLWritableDataset(void *p) {
      typedef ::dmtpc::core::WritableDataset current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::WritableDataset

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void DatasetHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::DatasetHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::DatasetHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::DatasetHeader::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void DatasetHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::DatasetHeader.
      TClass *R__cl = ::dmtpc::core::DatasetHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ncameras", &ncameras);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*starttime", &starttime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*endtime", &endtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "config", &config);
      R__insp.InspectMember(config, "config.");
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLDatasetHeader(void *p) {
      return  p ? new(p) ::dmtpc::core::DatasetHeader : new ::dmtpc::core::DatasetHeader;
   }
   static void *newArray_dmtpccLcLcorecLcLDatasetHeader(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::DatasetHeader[nElements] : new ::dmtpc::core::DatasetHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLDatasetHeader(void *p) {
      delete ((::dmtpc::core::DatasetHeader*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLDatasetHeader(void *p) {
      delete [] ((::dmtpc::core::DatasetHeader*)p);
   }
   static void destruct_dmtpccLcLcorecLcLDatasetHeader(void *p) {
      typedef ::dmtpc::core::DatasetHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::DatasetHeader

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void Location::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::Location.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::Location::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::Location::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void Location::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::Location.
      TClass *R__cl = ::dmtpc::core::Location::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "longitude", &longitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "latitude", &latitude);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "north_angle", &north_angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "horizon_angle", &horizon_angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "elevation", &elevation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "description", &description);
      R__insp.InspectMember(description, "description.");
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLLocation(void *p) {
      return  p ? new(p) ::dmtpc::core::Location : new ::dmtpc::core::Location;
   }
   static void *newArray_dmtpccLcLcorecLcLLocation(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::Location[nElements] : new ::dmtpc::core::Location[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLLocation(void *p) {
      delete ((::dmtpc::core::Location*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLLocation(void *p) {
      delete [] ((::dmtpc::core::Location*)p);
   }
   static void destruct_dmtpccLcLcorecLcLLocation(void *p) {
      typedef ::dmtpc::core::Location current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::Location

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void DetectorConfig::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::DetectorConfig.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::core::DetectorConfig thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<double> &R__stl =  values;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TString> &R__stl =  desc;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      {
         vector<type> &R__stl =  types;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dmtpc::core::DetectorConfig::type R__t;
            Int_t readtemp;
            R__b >> readtemp;
            R__t = static_cast<dmtpc::core::DetectorConfig::type>(readtemp);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<double> &R__stl =  values;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<TString> &R__stl =  desc;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)(*R__k)).Streamer(R__b);
            }
         }
      }
      {
         vector<type> &R__stl =  types;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<type>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            {  void *ptr_enum = (void*)&(*R__k);
               R__b >> *reinterpret_cast<Int_t*>(ptr_enum); }
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void DetectorConfig::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::DetectorConfig.
      TClass *R__cl = ::dmtpc::core::DetectorConfig::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "values", (void*)&values);
      R__insp.InspectMember("vector<double>", (void*)&values, "values.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "desc", (void*)&desc);
      R__insp.InspectMember("vector<TString>", (void*)&desc, "desc.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "types", (void*)&types);
      R__insp.InspectMember("vector<type>", (void*)&types, "types.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLDetectorConfig(void *p) {
      return  p ? new(p) ::dmtpc::core::DetectorConfig : new ::dmtpc::core::DetectorConfig;
   }
   static void *newArray_dmtpccLcLcorecLcLDetectorConfig(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::DetectorConfig[nElements] : new ::dmtpc::core::DetectorConfig[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLDetectorConfig(void *p) {
      delete ((::dmtpc::core::DetectorConfig*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLDetectorConfig(void *p) {
      delete [] ((::dmtpc::core::DetectorConfig*)p);
   }
   static void destruct_dmtpccLcLcorecLcLDetectorConfig(void *p) {
      typedef ::dmtpc::core::DetectorConfig current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLcorecLcLDetectorConfig(TBuffer &buf, void *obj) {
      ((::dmtpc::core::DetectorConfig*)obj)->::dmtpc::core::DetectorConfig::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::core::DetectorConfig

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void TriggerInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::TriggerInfo.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::core::TriggerInfo thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      void *ptr__why = (void*)&_why;
      R__b >> *reinterpret_cast<Int_t*>(ptr__why);
      {
         list<TString> &R__stl =  passed;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << (Int_t)_why;
      {
         list<TString> &R__stl =  passed;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            list<TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void TriggerInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::TriggerInfo.
      TClass *R__cl = ::dmtpc::core::TriggerInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_why", &_why);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "passed", (void*)&passed);
      R__insp.InspectMember("list<TString>", (void*)&passed, "passed.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLTriggerInfo(void *p) {
      return  p ? new(p) ::dmtpc::core::TriggerInfo : new ::dmtpc::core::TriggerInfo;
   }
   static void *newArray_dmtpccLcLcorecLcLTriggerInfo(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::TriggerInfo[nElements] : new ::dmtpc::core::TriggerInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLTriggerInfo(void *p) {
      delete ((::dmtpc::core::TriggerInfo*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLTriggerInfo(void *p) {
      delete [] ((::dmtpc::core::TriggerInfo*)p);
   }
   static void destruct_dmtpccLcLcorecLcLTriggerInfo(void *p) {
      typedef ::dmtpc::core::TriggerInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLcorecLcLTriggerInfo(TBuffer &buf, void *obj) {
      ((::dmtpc::core::TriggerInfo*)obj)->::dmtpc::core::TriggerInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::core::TriggerInfo

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void ScopeInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::ScopeInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::ScopeInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::ScopeInfo::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void ScopeInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::ScopeInfo.
      TClass *R__cl = ::dmtpc::core::ScopeInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel_info", (void*)&channel_info);
      R__insp.InspectMember("vector<ScopeChannelInfo>", (void*)&channel_info, "channel_info.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scope_number", &scope_number);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLScopeInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::ScopeInfo : new ::dmtpc::core::ScopeInfo;
   }
   static void *newArray_dmtpccLcLcorecLcLScopeInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::ScopeInfo[nElements] : new ::dmtpc::core::ScopeInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLScopeInfo(void *p) {
      delete ((::dmtpc::core::ScopeInfo*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLScopeInfo(void *p) {
      delete [] ((::dmtpc::core::ScopeInfo*)p);
   }
   static void destruct_dmtpccLcLcorecLcLScopeInfo(void *p) {
      typedef ::dmtpc::core::ScopeInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::ScopeInfo

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void ScopeChannelInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::ScopeChannelInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::ScopeChannelInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::ScopeChannelInfo::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void ScopeChannelInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::ScopeChannelInfo.
      TClass *R__cl = ::dmtpc::core::ScopeChannelInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name[16]", name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vmin", &vmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vmax", &vmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbits", &nbits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbytes_raw", &nbytes_raw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sample_rate", &sample_rate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nsamples", &nsamples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nsamples_pretrigger", &nsamples_pretrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scope", &scope);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLScopeChannelInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::ScopeChannelInfo : new ::dmtpc::core::ScopeChannelInfo;
   }
   static void *newArray_dmtpccLcLcorecLcLScopeChannelInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::ScopeChannelInfo[nElements] : new ::dmtpc::core::ScopeChannelInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLScopeChannelInfo(void *p) {
      delete ((::dmtpc::core::ScopeChannelInfo*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLScopeChannelInfo(void *p) {
      delete [] ((::dmtpc::core::ScopeChannelInfo*)p);
   }
   static void destruct_dmtpccLcLcorecLcLScopeChannelInfo(void *p) {
      typedef ::dmtpc::core::ScopeChannelInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::ScopeChannelInfo

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void ScopeTraceInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::ScopeTraceInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::ScopeTraceInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::ScopeTraceInfo::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void ScopeTraceInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::ScopeTraceInfo.
      TClass *R__cl = ::dmtpc::core::ScopeTraceInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "secs", &secs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nsecs", &nsecs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel", &channel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scope", &scope);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLScopeTraceInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::ScopeTraceInfo : new ::dmtpc::core::ScopeTraceInfo;
   }
   static void *newArray_dmtpccLcLcorecLcLScopeTraceInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::ScopeTraceInfo[nElements] : new ::dmtpc::core::ScopeTraceInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLScopeTraceInfo(void *p) {
      delete ((::dmtpc::core::ScopeTraceInfo*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLScopeTraceInfo(void *p) {
      delete [] ((::dmtpc::core::ScopeTraceInfo*)p);
   }
   static void destruct_dmtpccLcLcorecLcLScopeTraceInfo(void *p) {
      typedef ::dmtpc::core::ScopeTraceInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::ScopeTraceInfo

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void CameraInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::CameraInfo.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::core::CameraInfo thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> nx;
      R__b >> ny;
      R__b >> camIndex;
      R__b >> xbin;
      R__b >> ybin;
      R__b >> ul_x;
      R__b >> ul_y;
      R__b >> lr_x;
      R__b >> lr_y;
      R__b >> nflushes;
      R__b >> ccdTemp;
      R__b >> ccdTempSet;
      R__b >> exposureTime;
      R__b >> readoutSpeedVertical;
      R__b >> readoutSpeedHorizontal;
      R__b >> dark;
      R__b >> shutterUsed;
      serialNumber.Streamer(R__b);
      model.Streamer(R__b);
      R__b >> nbytes;
      R__b >> overscanColumns;
      R__b >> overscanRows;
      R__b >> digitizeOverscan;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << nx;
      R__b << ny;
      R__b << camIndex;
      R__b << xbin;
      R__b << ybin;
      R__b << ul_x;
      R__b << ul_y;
      R__b << lr_x;
      R__b << lr_y;
      R__b << nflushes;
      R__b << ccdTemp;
      R__b << ccdTempSet;
      R__b << exposureTime;
      R__b << readoutSpeedVertical;
      R__b << readoutSpeedHorizontal;
      R__b << dark;
      R__b << shutterUsed;
      serialNumber.Streamer(R__b);
      model.Streamer(R__b);
      R__b << nbytes;
      R__b << overscanColumns;
      R__b << overscanRows;
      R__b << digitizeOverscan;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void CameraInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::CameraInfo.
      TClass *R__cl = ::dmtpc::core::CameraInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nx", &nx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ny", &ny);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camIndex", &camIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xbin", &xbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ybin", &ybin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ul_x", &ul_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ul_y", &ul_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lr_x", &lr_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lr_y", &lr_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nflushes", &nflushes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccdTemp", &ccdTemp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccdTempSet", &ccdTempSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "exposureTime", &exposureTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "readoutSpeedVertical", &readoutSpeedVertical);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "readoutSpeedHorizontal", &readoutSpeedHorizontal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dark", &dark);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "shutterUsed", &shutterUsed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "serialNumber", &serialNumber);
      R__insp.InspectMember(serialNumber, "serialNumber.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "model", &model);
      R__insp.InspectMember(model, "model.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbytes", &nbytes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "overscanColumns", &overscanColumns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "overscanRows", &overscanRows);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "digitizeOverscan", &digitizeOverscan);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLCameraInfo(void *p) {
      return  p ? new(p) ::dmtpc::core::CameraInfo : new ::dmtpc::core::CameraInfo;
   }
   static void *newArray_dmtpccLcLcorecLcLCameraInfo(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::CameraInfo[nElements] : new ::dmtpc::core::CameraInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLCameraInfo(void *p) {
      delete ((::dmtpc::core::CameraInfo*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLCameraInfo(void *p) {
      delete [] ((::dmtpc::core::CameraInfo*)p);
   }
   static void destruct_dmtpccLcLcorecLcLCameraInfo(void *p) {
      typedef ::dmtpc::core::CameraInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLcorecLcLCameraInfo(TBuffer &buf, void *obj) {
      ((::dmtpc::core::CameraInfo*)obj)->::dmtpc::core::CameraInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::core::CameraInfo

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void CameraConfig::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::CameraConfig.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::CameraConfig::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::CameraConfig::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void CameraConfig::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::CameraConfig.
      TClass *R__cl = ::dmtpc::core::CameraConfig::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xbin", &xbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ybin", &ybin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "exposureTime", &exposureTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nflushes", &nflushes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccdTempSet", &ccdTempSet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cameraType", &cameraType);
      R__insp.InspectMember(cameraType, "cameraType.");
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLCameraConfig(void *p) {
      return  p ? new(p) ::dmtpc::core::CameraConfig : new ::dmtpc::core::CameraConfig;
   }
   static void *newArray_dmtpccLcLcorecLcLCameraConfig(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::CameraConfig[nElements] : new ::dmtpc::core::CameraConfig[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLCameraConfig(void *p) {
      delete ((::dmtpc::core::CameraConfig*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLCameraConfig(void *p) {
      delete [] ((::dmtpc::core::CameraConfig*)p);
   }
   static void destruct_dmtpccLcLcorecLcLCameraConfig(void *p) {
      typedef ::dmtpc::core::CameraConfig current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::CameraConfig

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void ScopeConfig::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::ScopeConfig.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::ScopeConfig::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::ScopeConfig::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void ScopeConfig::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::ScopeConfig.
      TClass *R__cl = ::dmtpc::core::ScopeConfig::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scope_id", &scope_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "record_length", &record_length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "post_trigger", &post_trigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "num_events_BLT", &num_events_BLT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "link_num", &link_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "conet_node", &conet_node);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "connection_type", &connection_type);
      R__insp.InspectMember(connection_type, "connection_type.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scopeChannelConfigs", (void*)&scopeChannelConfigs);
      R__insp.InspectMember("vector<ScopeChannelConfig>", (void*)&scopeChannelConfigs, "scopeChannelConfigs.", false);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLScopeConfig(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::ScopeConfig : new ::dmtpc::core::ScopeConfig;
   }
   static void *newArray_dmtpccLcLcorecLcLScopeConfig(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::core::ScopeConfig[nElements] : new ::dmtpc::core::ScopeConfig[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLScopeConfig(void *p) {
      delete ((::dmtpc::core::ScopeConfig*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLScopeConfig(void *p) {
      delete [] ((::dmtpc::core::ScopeConfig*)p);
   }
   static void destruct_dmtpccLcLcorecLcLScopeConfig(void *p) {
      typedef ::dmtpc::core::ScopeConfig current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::ScopeConfig

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void ScopeChannelConfig::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::ScopeChannelConfig.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::ScopeChannelConfig::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::ScopeChannelConfig::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void ScopeChannelConfig::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::ScopeChannelConfig.
      TClass *R__cl = ::dmtpc::core::ScopeChannelConfig::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulse_polarity_falling", &pulse_polarity_falling);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger_polarity_falling", &trigger_polarity_falling);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vmin", &vmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vmax", &vmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dc_offset", &dc_offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger_threshold", &trigger_threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel_id", &channel_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scope", &scope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "input_type", &input_type);
      R__insp.InspectMember(input_type, "input_type.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", &name);
      R__insp.InspectMember(name, "name.");
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLScopeChannelConfig(void *p) {
      return  p ? new(p) ::dmtpc::core::ScopeChannelConfig : new ::dmtpc::core::ScopeChannelConfig;
   }
   static void *newArray_dmtpccLcLcorecLcLScopeChannelConfig(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::ScopeChannelConfig[nElements] : new ::dmtpc::core::ScopeChannelConfig[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLScopeChannelConfig(void *p) {
      delete ((::dmtpc::core::ScopeChannelConfig*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLScopeChannelConfig(void *p) {
      delete [] ((::dmtpc::core::ScopeChannelConfig*)p);
   }
   static void destruct_dmtpccLcLcorecLcLScopeChannelConfig(void *p) {
      typedef ::dmtpc::core::ScopeChannelConfig current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::ScopeChannelConfig

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void RunConfig::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::RunConfig.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::RunConfig::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::RunConfig::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void RunConfig::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::RunConfig.
      TClass *R__cl = ::dmtpc::core::RunConfig::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccd_threaded_readout", &ccd_threaded_readout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccd_external_trigger", &ccd_external_trigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccd_dark_shutter_open", &ccd_dark_shutter_open);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_num", &run_num);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccd_buffer_size", &ccd_buffer_size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scope_buffer_size", &scope_buffer_size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scope_wait_timeout", &scope_wait_timeout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger_pretrigger", &trigger_pretrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trigger_posttrigger", &trigger_posttrigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "compression_algo", &compression_algo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "compression_level", &compression_level);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ccd_light_shutter_mode", &ccd_light_shutter_mode);
      R__insp.InspectMember(ccd_light_shutter_mode, "ccd_light_shutter_mode.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "out_dir", &out_dir);
      R__insp.InspectMember(out_dir, "out_dir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "run_tag", &run_tag);
      R__insp.InspectMember(run_tag, "run_tag.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "output_filename", &output_filename);
      R__insp.InspectMember(output_filename, "output_filename.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "db_config", &db_config);
      R__insp.InspectMember(db_config, "db_config.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "location", &location);
      R__insp.InspectMember(location, "location.");
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLRunConfig(void *p) {
      return  p ? new(p) ::dmtpc::core::RunConfig : new ::dmtpc::core::RunConfig;
   }
   static void *newArray_dmtpccLcLcorecLcLRunConfig(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::RunConfig[nElements] : new ::dmtpc::core::RunConfig[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLRunConfig(void *p) {
      delete ((::dmtpc::core::RunConfig*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLRunConfig(void *p) {
      delete [] ((::dmtpc::core::RunConfig*)p);
   }
   static void destruct_dmtpccLcLcorecLcLRunConfig(void *p) {
      typedef ::dmtpc::core::RunConfig current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::RunConfig

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void Image::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::Image.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::Image::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::Image::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void Image::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::Image.
      TClass *R__cl = ::dmtpc::core::Image::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hist", &hist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*visible", &visible);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*overscan", &overscan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*info", &info);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "size", &size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*buf", &buf);
      TNamed::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLImage(void *p) {
      return  p ? new(p) ::dmtpc::core::Image : new ::dmtpc::core::Image;
   }
   static void *newArray_dmtpccLcLcorecLcLImage(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::Image[nElements] : new ::dmtpc::core::Image[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLImage(void *p) {
      delete ((::dmtpc::core::Image*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLImage(void *p) {
      delete [] ((::dmtpc::core::Image*)p);
   }
   static void destruct_dmtpccLcLcorecLcLImage(void *p) {
      typedef ::dmtpc::core::Image current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::Image

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void Event::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::Event.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::Event::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::Event::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void Event::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::Event.
      TClass *R__cl = ::dmtpc::core::Event::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ccdData", (void*)&_ccdData);
      R__insp.InspectMember("vector<Image*>", (void*)&_ccdData, "_ccdData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scopeData", (void*)&scopeData);
      R__insp.InspectMember("vector<Waveform*>", (void*)&scopeData, "scopeData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "scopeConfigs", (void*)&scopeConfigs);
      R__insp.InspectMember("vector<ScopeInfo*>", (void*)&scopeConfigs, "scopeConfigs.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*detectorConfig", &detectorConfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*location", &location);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trigger", &trigger);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*timestamp", &timestamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runNumber", &runNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventNumber", &eventNumber);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLEvent(void *p) {
      return  p ? new(p) ::dmtpc::core::Event : new ::dmtpc::core::Event;
   }
   static void *newArray_dmtpccLcLcorecLcLEvent(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::Event[nElements] : new ::dmtpc::core::Event[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLEvent(void *p) {
      delete ((::dmtpc::core::Event*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLEvent(void *p) {
      delete [] ((::dmtpc::core::Event*)p);
   }
   static void destruct_dmtpccLcLcorecLcLEvent(void *p) {
      typedef ::dmtpc::core::Event current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::Event

      namespace dmtpc {
         namespace core {
//______________________________________________________________________________
void WritableEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::core::WritableEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::core::WritableEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::core::WritableEvent::Class(),this);
   }
}

} // namespace dmtpc::core
} // namespace dmtpc::core
//______________________________________________________________________________
      namespace dmtpc {
         namespace core {
void WritableEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::core::WritableEvent.
      TClass *R__cl = ::dmtpc::core::WritableEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::core::Event baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace dmtpc::core
} // namespace dmtpc::core
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLcorecLcLWritableEvent(void *p) {
      return  p ? new(p) ::dmtpc::core::WritableEvent : new ::dmtpc::core::WritableEvent;
   }
   static void *newArray_dmtpccLcLcorecLcLWritableEvent(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::core::WritableEvent[nElements] : new ::dmtpc::core::WritableEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLcorecLcLWritableEvent(void *p) {
      delete ((::dmtpc::core::WritableEvent*)p);
   }
   static void deleteArray_dmtpccLcLcorecLcLWritableEvent(void *p) {
      delete [] ((::dmtpc::core::WritableEvent*)p);
   }
   static void destruct_dmtpccLcLcorecLcLWritableEvent(void *p) {
      typedef ::dmtpc::core::WritableEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::core::WritableEvent

namespace ROOTDict {
   void listlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void listlETStringgR_Dictionary();
   static void *new_listlETStringgR(void *p = 0);
   static void *newArray_listlETStringgR(Long_t size, void *p);
   static void delete_listlETStringgR(void *p);
   static void deleteArray_listlETStringgR(void *p);
   static void destruct_listlETStringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const list<TString>*)
   {
      list<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(list<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("list<TString>", -2, "prec_stl/list", 44,
                  typeid(list<TString>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &listlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(list<TString>) );
      instance.SetNew(&new_listlETStringgR);
      instance.SetNewArray(&newArray_listlETStringgR);
      instance.SetDelete(&delete_listlETStringgR);
      instance.SetDeleteArray(&deleteArray_listlETStringgR);
      instance.SetDestructor(&destruct_listlETStringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< list<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const list<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void listlETStringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const list<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_listlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) list<TString> : new list<TString>;
   }
   static void *newArray_listlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) list<TString>[nElements] : new list<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_listlETStringgR(void *p) {
      delete ((list<TString>*)p);
   }
   static void deleteArray_listlETStringgR(void *p) {
      delete [] ((list<TString>*)p);
   }
   static void destruct_listlETStringgR(void *p) {
      typedef list<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class list<TString>

namespace ROOTDict {
   void vectorlETStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETStringgR_Dictionary();
   static void *new_vectorlETStringgR(void *p = 0);
   static void *newArray_vectorlETStringgR(Long_t size, void *p);
   static void delete_vectorlETStringgR(void *p);
   static void deleteArray_vectorlETStringgR(void *p);
   static void destruct_vectorlETStringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<TString>*)
   {
      vector<TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TString>", -2, "prec_stl/vector", 49,
                  typeid(vector<TString>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlETStringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TString>) );
      instance.SetNew(&new_vectorlETStringgR);
      instance.SetNewArray(&newArray_vectorlETStringgR);
      instance.SetDelete(&delete_vectorlETStringgR);
      instance.SetDeleteArray(&deleteArray_vectorlETStringgR);
      instance.SetDestructor(&destruct_vectorlETStringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETStringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<TString>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlETStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString> : new vector<TString>;
   }
   static void *newArray_vectorlETStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TString>[nElements] : new vector<TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETStringgR(void *p) {
      delete ((vector<TString>*)p);
   }
   static void deleteArray_vectorlETStringgR(void *p) {
      delete [] ((vector<TString>*)p);
   }
   static void destruct_vectorlETStringgR(void *p) {
      typedef vector<TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<TString>

namespace ROOTDict {
   void vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR_Dictionary();
   static void *new_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(void *p);
   static void deleteArray_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(void *p);
   static void destruct_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::core::DetectorConfig::type>*)
   {
      vector<dmtpc::core::DetectorConfig::type> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::core::DetectorConfig::type>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::core::DetectorConfig::type>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::core::DetectorConfig::type>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::core::DetectorConfig::type>) );
      instance.SetNew(&new_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::core::DetectorConfig::type> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::core::DetectorConfig::type>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::core::DetectorConfig::type>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::DetectorConfig::type> : new vector<dmtpc::core::DetectorConfig::type>;
   }
   static void *newArray_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::DetectorConfig::type>[nElements] : new vector<dmtpc::core::DetectorConfig::type>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(void *p) {
      delete ((vector<dmtpc::core::DetectorConfig::type>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(void *p) {
      delete [] ((vector<dmtpc::core::DetectorConfig::type>*)p);
   }
   static void destruct_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegR(void *p) {
      typedef vector<dmtpc::core::DetectorConfig::type> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::core::DetectorConfig::type>

namespace ROOTDict {
   void vectorlEdmtpccLcLcorecLcLImagemUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLcorecLcLImagemUgR_Dictionary();
   static void *new_vectorlEdmtpccLcLcorecLcLImagemUgR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLcorecLcLImagemUgR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLcorecLcLImagemUgR(void *p);
   static void deleteArray_vectorlEdmtpccLcLcorecLcLImagemUgR(void *p);
   static void destruct_vectorlEdmtpccLcLcorecLcLImagemUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::core::Image*>*)
   {
      vector<dmtpc::core::Image*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::core::Image*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::core::Image*>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::core::Image*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLcorecLcLImagemUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::core::Image*>) );
      instance.SetNew(&new_vectorlEdmtpccLcLcorecLcLImagemUgR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLcorecLcLImagemUgR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLcorecLcLImagemUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLcorecLcLImagemUgR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLcorecLcLImagemUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::core::Image*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::core::Image*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLcorecLcLImagemUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::core::Image*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLcorecLcLImagemUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::Image*> : new vector<dmtpc::core::Image*>;
   }
   static void *newArray_vectorlEdmtpccLcLcorecLcLImagemUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::Image*>[nElements] : new vector<dmtpc::core::Image*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLcorecLcLImagemUgR(void *p) {
      delete ((vector<dmtpc::core::Image*>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLcorecLcLImagemUgR(void *p) {
      delete [] ((vector<dmtpc::core::Image*>*)p);
   }
   static void destruct_vectorlEdmtpccLcLcorecLcLImagemUgR(void *p) {
      typedef vector<dmtpc::core::Image*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::core::Image*>

namespace ROOTDict {
   void vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR_Dictionary();
   static void *new_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(void *p);
   static void deleteArray_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(void *p);
   static void destruct_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::core::ScopeChannelConfig>*)
   {
      vector<dmtpc::core::ScopeChannelConfig> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::core::ScopeChannelConfig>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::core::ScopeChannelConfig>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::core::ScopeChannelConfig>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::core::ScopeChannelConfig>) );
      instance.SetNew(&new_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::core::ScopeChannelConfig> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::core::ScopeChannelConfig>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::core::ScopeChannelConfig>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::ScopeChannelConfig> : new vector<dmtpc::core::ScopeChannelConfig>;
   }
   static void *newArray_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::ScopeChannelConfig>[nElements] : new vector<dmtpc::core::ScopeChannelConfig>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(void *p) {
      delete ((vector<dmtpc::core::ScopeChannelConfig>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(void *p) {
      delete [] ((vector<dmtpc::core::ScopeChannelConfig>*)p);
   }
   static void destruct_vectorlEdmtpccLcLcorecLcLScopeChannelConfiggR(void *p) {
      typedef vector<dmtpc::core::ScopeChannelConfig> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::core::ScopeChannelConfig>

namespace ROOTDict {
   void vectorlEdmtpccLcLcorecLcLScopeChannelInfogR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLcorecLcLScopeChannelInfogR_Dictionary();
   static void *new_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(void *p);
   static void deleteArray_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(void *p);
   static void destruct_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::core::ScopeChannelInfo>*)
   {
      vector<dmtpc::core::ScopeChannelInfo> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::core::ScopeChannelInfo>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::core::ScopeChannelInfo>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::core::ScopeChannelInfo>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLcorecLcLScopeChannelInfogR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::core::ScopeChannelInfo>) );
      instance.SetNew(&new_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::core::ScopeChannelInfo> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::core::ScopeChannelInfo>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLcorecLcLScopeChannelInfogR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::core::ScopeChannelInfo>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::ScopeChannelInfo> : new vector<dmtpc::core::ScopeChannelInfo>;
   }
   static void *newArray_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::ScopeChannelInfo>[nElements] : new vector<dmtpc::core::ScopeChannelInfo>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(void *p) {
      delete ((vector<dmtpc::core::ScopeChannelInfo>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(void *p) {
      delete [] ((vector<dmtpc::core::ScopeChannelInfo>*)p);
   }
   static void destruct_vectorlEdmtpccLcLcorecLcLScopeChannelInfogR(void *p) {
      typedef vector<dmtpc::core::ScopeChannelInfo> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::core::ScopeChannelInfo>

namespace ROOTDict {
   void vectorlEdmtpccLcLcorecLcLScopeInfomUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLcorecLcLScopeInfomUgR_Dictionary();
   static void *new_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(void *p);
   static void deleteArray_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(void *p);
   static void destruct_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::core::ScopeInfo*>*)
   {
      vector<dmtpc::core::ScopeInfo*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::core::ScopeInfo*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::core::ScopeInfo*>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::core::ScopeInfo*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLcorecLcLScopeInfomUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::core::ScopeInfo*>) );
      instance.SetNew(&new_vectorlEdmtpccLcLcorecLcLScopeInfomUgR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLcorecLcLScopeInfomUgR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLcorecLcLScopeInfomUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLcorecLcLScopeInfomUgR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLcorecLcLScopeInfomUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::core::ScopeInfo*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::core::ScopeInfo*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLcorecLcLScopeInfomUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::core::ScopeInfo*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::ScopeInfo*> : new vector<dmtpc::core::ScopeInfo*>;
   }
   static void *newArray_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::ScopeInfo*>[nElements] : new vector<dmtpc::core::ScopeInfo*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(void *p) {
      delete ((vector<dmtpc::core::ScopeInfo*>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(void *p) {
      delete [] ((vector<dmtpc::core::ScopeInfo*>*)p);
   }
   static void destruct_vectorlEdmtpccLcLcorecLcLScopeInfomUgR(void *p) {
      typedef vector<dmtpc::core::ScopeInfo*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::core::ScopeInfo*>

namespace ROOTDict {
   void vectorlEdmtpccLcLcorecLcLWaveformmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLcorecLcLWaveformmUgR_Dictionary();
   static void *new_vectorlEdmtpccLcLcorecLcLWaveformmUgR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLcorecLcLWaveformmUgR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLcorecLcLWaveformmUgR(void *p);
   static void deleteArray_vectorlEdmtpccLcLcorecLcLWaveformmUgR(void *p);
   static void destruct_vectorlEdmtpccLcLcorecLcLWaveformmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::core::Waveform*>*)
   {
      vector<dmtpc::core::Waveform*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::core::Waveform*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::core::Waveform*>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::core::Waveform*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLcorecLcLWaveformmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::core::Waveform*>) );
      instance.SetNew(&new_vectorlEdmtpccLcLcorecLcLWaveformmUgR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLcorecLcLWaveformmUgR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLcorecLcLWaveformmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLcorecLcLWaveformmUgR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLcorecLcLWaveformmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::core::Waveform*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::core::Waveform*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLcorecLcLWaveformmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::core::Waveform*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLcorecLcLWaveformmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::Waveform*> : new vector<dmtpc::core::Waveform*>;
   }
   static void *newArray_vectorlEdmtpccLcLcorecLcLWaveformmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::core::Waveform*>[nElements] : new vector<dmtpc::core::Waveform*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLcorecLcLWaveformmUgR(void *p) {
      delete ((vector<dmtpc::core::Waveform*>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLcorecLcLWaveformmUgR(void *p) {
      delete [] ((vector<dmtpc::core::Waveform*>*)p);
   }
   static void destruct_vectorlEdmtpccLcLcorecLcLWaveformmUgR(void *p) {
      typedef vector<dmtpc::core::Waveform*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::core::Waveform*>

namespace ROOTDict {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<double>

/********************************************************
* build/DmtpcCoreCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDmtpcCoreCint();

extern "C" void G__set_cpp_environmentDmtpcCoreCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/CameraConfig.hh");
  G__add_compiledheader("include/CameraInfo.hh");
  G__add_compiledheader("include/CommonTools.hh");
  G__add_compiledheader("include/Config.hh");
  G__add_compiledheader("include/DatasetHeader.hh");
  G__add_compiledheader("include/Dataset.hh");
  G__add_compiledheader("include/DetectorConfig.hh");
  G__add_compiledheader("include/Event.hh");
  G__add_compiledheader("include/Image.hh");
  G__add_compiledheader("include/Iterators.hh");
  G__add_compiledheader("include/Location.hh");
  G__add_compiledheader("include/RunConfig.hh");
  G__add_compiledheader("include/ScopeConfig.hh");
  G__add_compiledheader("include/ScopeInfo.hh");
  G__add_compiledheader("include/TriggerInfo.hh");
  G__add_compiledheader("include/Waveform.hh");
  G__add_compiledheader("include/WritableDataset.hh");
  G__add_compiledheader("include/WritableEvent.hh");
  G__cpp_reset_tagtableDmtpcCoreCint();
}
#include <new>
extern "C" int G__cpp_dllrevDmtpcCoreCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* dmtpc */

/* dmtpc::core */

/* dmtpc::core::CameraConfig */
static int G__DmtpcCoreCint_202_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::CameraConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::CameraConfig[n];
     } else {
       p = new((void*) gvp) dmtpc::core::CameraConfig[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::CameraConfig;
     } else {
       p = new((void*) gvp) dmtpc::core::CameraConfig;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::CameraConfig*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((dmtpc::core::CameraConfig*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((dmtpc::core::CameraConfig*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::CameraConfig::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::CameraConfig::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::CameraConfig::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::CameraConfig::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::CameraConfig*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::CameraConfig::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::CameraConfig::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::CameraConfig::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_202_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::CameraConfig::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_202_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::CameraConfig* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::CameraConfig(*(dmtpc::core::CameraConfig*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::CameraConfig G__TdmtpccLcLcorecLcLCameraConfig;
static int G__DmtpcCoreCint_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::CameraConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::CameraConfig*) (soff+(sizeof(dmtpc::core::CameraConfig)*i)))->~G__TdmtpccLcLcorecLcLCameraConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::CameraConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::CameraConfig*) (soff))->~G__TdmtpccLcLcorecLcLCameraConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::CameraConfig* dest = (dmtpc::core::CameraConfig*) G__getstructoffset();
   *dest = *(dmtpc::core::CameraConfig*) libp->para[0].ref;
   const dmtpc::core::CameraConfig& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::CameraInfo */
static int G__DmtpcCoreCint_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::CameraInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::CameraInfo[n];
     } else {
       p = new((void*) gvp) dmtpc::core::CameraInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::CameraInfo;
     } else {
       p = new((void*) gvp) dmtpc::core::CameraInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::CameraInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::CameraInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::CameraInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::CameraInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_203_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::CameraInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_203_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::CameraInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::CameraInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::CameraInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::CameraInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::CameraInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::CameraInfo(*(dmtpc::core::CameraInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::CameraInfo G__TdmtpccLcLcorecLcLCameraInfo;
static int G__DmtpcCoreCint_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::CameraInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::CameraInfo*) (soff+(sizeof(dmtpc::core::CameraInfo)*i)))->~G__TdmtpccLcLcorecLcLCameraInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::CameraInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::CameraInfo*) (soff))->~G__TdmtpccLcLcorecLcLCameraInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::CameraInfo* dest = (dmtpc::core::CameraInfo*) G__getstructoffset();
   *dest = *(dmtpc::core::CameraInfo*) libp->para[0].ref;
   const dmtpc::core::CameraInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::common */
static int G__DmtpcCoreCint_205_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::common::addFilesToChain((TChain*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::Config */
static int G__DmtpcCoreCint_206_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::Config*) G__getstructoffset())->parseFile((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::Config*) G__getstructoffset())->parseStream(*(istream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::Config*) G__getstructoffset())->parseString((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setInt((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setBool((const char*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setUInt((const char*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setDouble((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setString((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setEnum((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setEnum((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setIntList((const char*) G__int(libp->para[0]), (vector<int>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setBoolList((const char*) G__int(libp->para[0]), (vector<bool>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setUIntList((const char*) G__int(libp->para[0]), (vector<unsigned>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setDoubleList((const char*) G__int(libp->para[0]), (vector<double>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setStringList((const char*) G__int(libp->para[0]), (vector<const char*>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setEnumList((const char*) G__int(libp->para[0]), (vector<int>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setEnumList((const char*) G__int(libp->para[0]), (vector<const char*>*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setIntMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setStringMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::core::Config*) G__getstructoffset())->setDoubleMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getInt((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getUInt((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::core::Config*) G__getstructoffset())->getDouble((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getString((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getEnum((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getEnumName((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getBool((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getIntList((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getUIntList((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getDoubleList((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getStringList((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getStringList((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getEnumList((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getBoolList((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getIntMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getIntMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) ((const dmtpc::core::Config*) G__getstructoffset())->getDoubleMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (double) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) ((const dmtpc::core::Config*) G__getstructoffset())->getDoubleMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 67, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getStringMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 67, (long) ((const dmtpc::core::Config*) G__getstructoffset())->getStringMap((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::core::Config*) G__getstructoffset())->writeOutConfig((char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_206_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const dmtpc::core::Config*) G__getstructoffset())->print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((const dmtpc::core::Config*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__DmtpcCoreCint_206_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Config *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Config[n];
     } else {
       p = new((void*) gvp) dmtpc::core::Config[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Config;
     } else {
       p = new((void*) gvp) dmtpc::core::Config;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_206_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::Config* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::Config(*(dmtpc::core::Config*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::Config G__TdmtpccLcLcorecLcLConfig;
static int G__DmtpcCoreCint_206_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::Config*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::Config*) (soff+(sizeof(dmtpc::core::Config)*i)))->~G__TdmtpccLcLcorecLcLConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::Config*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::Config*) (soff))->~G__TdmtpccLcLcorecLcLConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_206_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Config* dest = (dmtpc::core::Config*) G__getstructoffset();
   *dest = *(dmtpc::core::Config*) libp->para[0].ref;
   const dmtpc::core::Config& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::DatasetHeader */
static int G__DmtpcCoreCint_222_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::DatasetHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::DatasetHeader[n];
     } else {
       p = new((void*) gvp) dmtpc::core::DatasetHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::DatasetHeader;
     } else {
       p = new((void*) gvp) dmtpc::core::DatasetHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_222_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::DatasetHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_222_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::DatasetHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_222_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::DatasetHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_222_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::DatasetHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_222_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::DatasetHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_222_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::DatasetHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_222_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::DatasetHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_222_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::DatasetHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_222_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::DatasetHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_222_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::DatasetHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::DatasetHeader(*(dmtpc::core::DatasetHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::DatasetHeader G__TdmtpccLcLcorecLcLDatasetHeader;
static int G__DmtpcCoreCint_222_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::DatasetHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::DatasetHeader*) (soff+(sizeof(dmtpc::core::DatasetHeader)*i)))->~G__TdmtpccLcLcorecLcLDatasetHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::DatasetHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::DatasetHeader*) (soff))->~G__TdmtpccLcLcorecLcLDatasetHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_222_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::DatasetHeader* dest = (dmtpc::core::DatasetHeader*) G__getstructoffset();
   *dest = *(dmtpc::core::DatasetHeader*) libp->para[0].ref;
   const dmtpc::core::DatasetHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::Event */
static int G__DmtpcCoreCint_536_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Event[n];
     } else {
       p = new((void*) gvp) dmtpc::core::Event[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Event;
     } else {
       p = new((void*) gvp) dmtpc::core::Event;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Event* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Event(*(dmtpc::core::Event*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::core::Event(*(dmtpc::core::Event*) libp->para[0].ref, (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Event(*(dmtpc::core::Event*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) dmtpc::core::Event(*(dmtpc::core::Event*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->ccdConfig((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->getImage((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->getVisible((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->getOverscan((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::core::Event*) G__getstructoffset())->nccd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->ccdData((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->visible((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->overscan((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->getTrace((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->getTrace((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::core::Event*) G__getstructoffset())->nscopes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->getScopeConfig((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::core::Event*) G__getstructoffset())->nScopeData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::core::Event*) G__getstructoffset())->run());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::core::Event*) G__getstructoffset())->ev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Event*) G__getstructoffset())->getTimestamp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::Event::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Event::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::Event::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::Event::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::Event*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Event::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::Event::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Event::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_536_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::Event::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::Event G__TdmtpccLcLcorecLcLEvent;
static int G__DmtpcCoreCint_536_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::Event*) (soff+(sizeof(dmtpc::core::Event)*i)))->~G__TdmtpccLcLcorecLcLEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::Event*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::Event*) (soff))->~G__TdmtpccLcLcorecLcLEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_536_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Event* dest = (dmtpc::core::Event*) G__getstructoffset();
   *dest = *(dmtpc::core::Event*) libp->para[0].ref;
   const dmtpc::core::Event& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::Image */
static int G__DmtpcCoreCint_537_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Image* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Image[n];
     } else {
       p = new((void*) gvp) dmtpc::core::Image[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Image;
     } else {
       p = new((void*) gvp) dmtpc::core::Image;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Image* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::core::Image(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (dmtpc::core::CameraInfo*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) dmtpc::core::Image(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (dmtpc::core::CameraInfo*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::Image*) G__getstructoffset())->operator ::TH2*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TH2* pobj;
         TH2 xobj = ((dmtpc::core::Image*) G__getstructoffset())->operator ::TH2();
         pobj = new TH2(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((dmtpc::core::Image*) G__getstructoffset())->DrawVisible((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((dmtpc::core::Image*) G__getstructoffset())->DrawVisible();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((dmtpc::core::Image*) G__getstructoffset())->DrawOverscan((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((dmtpc::core::Image*) G__getstructoffset())->DrawOverscan();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Image*) G__getstructoffset())->getHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Image*) G__getstructoffset())->getVisible());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Image*) G__getstructoffset())->getOverscan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Image*) G__getstructoffset())->makeEmptyTH2D());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Image*) G__getstructoffset())->getInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) dmtpc::core::Image::makeImage((TH2*) G__int(libp->para[0]), (uint8_t) G__int(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) dmtpc::core::Image::makeImage((TH2*) G__int(libp->para[0]), (uint8_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) dmtpc::core::Image::makeImage((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::Image::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Image::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::Image::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::Image::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::Image*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Image::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::Image::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Image::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_537_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::Image::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_537_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::Image* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::Image(*(dmtpc::core::Image*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::Image G__TdmtpccLcLcorecLcLImage;
static int G__DmtpcCoreCint_537_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::Image*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::Image*) (soff+(sizeof(dmtpc::core::Image)*i)))->~G__TdmtpccLcLcorecLcLImage();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::Image*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::Image*) (soff))->~G__TdmtpccLcLcorecLcLImage();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::Dataset */
static int G__DmtpcCoreCint_538_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Dataset::getBiasTreeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Dataset::getDataTreeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Dataset* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Dataset((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::core::Dataset((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::core::Dataset[n];
       } else {
         p = new((void*) gvp) dmtpc::core::Dataset[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::core::Dataset;
       } else {
         p = new((void*) gvp) dmtpc::core::Dataset;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->open((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->getEvent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->getBiasRaw((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::core::Dataset*) G__getstructoffset())->nevents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::core::Dataset*) G__getstructoffset())->nbias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Dataset*) G__getstructoffset())->getHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Dataset*) G__getstructoffset())->event());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->biasRaw((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->biasOS((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->biasAvg((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->biasOSAvg((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->getBiasTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->getEventTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_538_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::Dataset*) G__getstructoffset())->getFile());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_538_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::Dataset* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::Dataset(*(dmtpc::core::Dataset*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::Dataset G__TdmtpccLcLcorecLcLDataset;
static int G__DmtpcCoreCint_538_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::Dataset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::Dataset*) (soff+(sizeof(dmtpc::core::Dataset)*i)))->~G__TdmtpccLcLcorecLcLDataset();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::Dataset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::Dataset*) (soff))->~G__TdmtpccLcLcorecLcLDataset();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_538_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Dataset* dest = (dmtpc::core::Dataset*) G__getstructoffset();
   *dest = *(dmtpc::core::Dataset*) libp->para[0].ref;
   const dmtpc::core::Dataset& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::DetectorConfig */
static int G__DmtpcCoreCint_547_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::DetectorConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::DetectorConfig[n];
     } else {
       p = new((void*) gvp) dmtpc::core::DetectorConfig[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::DetectorConfig;
     } else {
       p = new((void*) gvp) dmtpc::core::DetectorConfig;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::DetectorConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::core::DetectorConfig(
(int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const char**) G__int(libp->para[2]), (dmtpc::core::DetectorConfig::type*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) dmtpc::core::DetectorConfig(
(int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (const char**) G__int(libp->para[2]), (dmtpc::core::DetectorConfig::type*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::core::DetectorConfig*) G__getstructoffset())->get((const char*) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (dmtpc::core::DetectorConfig::type*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::core::DetectorConfig*) G__getstructoffset())->getValue((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::core::DetectorConfig*) G__getstructoffset())->list((vector<const char*>*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::DetectorConfig::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::DetectorConfig::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::DetectorConfig::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::DetectorConfig::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::DetectorConfig*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::DetectorConfig::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::DetectorConfig::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::DetectorConfig::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_547_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::DetectorConfig::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_547_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::DetectorConfig* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::DetectorConfig(*(dmtpc::core::DetectorConfig*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::DetectorConfig G__TdmtpccLcLcorecLcLDetectorConfig;
static int G__DmtpcCoreCint_547_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::DetectorConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::DetectorConfig*) (soff+(sizeof(dmtpc::core::DetectorConfig)*i)))->~G__TdmtpccLcLcorecLcLDetectorConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::DetectorConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::DetectorConfig*) (soff))->~G__TdmtpccLcLcorecLcLDetectorConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_547_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::DetectorConfig* dest = (dmtpc::core::DetectorConfig*) G__getstructoffset();
   *dest = *(dmtpc::core::DetectorConfig*) libp->para[0].ref;
   const dmtpc::core::DetectorConfig& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::Waveform */
static int G__DmtpcCoreCint_587_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Waveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Waveform[n];
     } else {
       p = new((void*) gvp) dmtpc::core::Waveform[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Waveform;
     } else {
       p = new((void*) gvp) dmtpc::core::Waveform;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Waveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 6
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::core::Waveform(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (dmtpc::core::ScopeChannelInfo*) G__int(libp->para[3])
, (uint32_t) G__int(libp->para[4]), (uint32_t) G__int(libp->para[5]));
   } else {
     p = new((void*) gvp) dmtpc::core::Waveform(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (void*) G__int(libp->para[2]), (dmtpc::core::ScopeChannelInfo*) G__int(libp->para[3])
, (uint32_t) G__int(libp->para[4]), (uint32_t) G__int(libp->para[5]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::core::Waveform*) G__getstructoffset())->GetBinContent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::core::Waveform*) G__getstructoffset())->GetPhysicalBinContent((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::Waveform*) G__getstructoffset())->operator ::TH1*());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TH1* pobj;
         TH1 xobj = ((dmtpc::core::Waveform*) G__getstructoffset())->operator ::TH1();
         pobj = new TH1(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const dmtpc::core::Waveform*) G__getstructoffset())->Draw((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const dmtpc::core::Waveform*) G__getstructoffset())->Draw();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Waveform*) G__getstructoffset())->getPhysical());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Waveform*) G__getstructoffset())->getRaw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::core::Waveform*) G__getstructoffset())->destroyPhysical();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((const dmtpc::core::Waveform*) G__getstructoffset())->getType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::Waveform*) G__getstructoffset())->getInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::Waveform::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Waveform::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::Waveform::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::Waveform::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::Waveform*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Waveform::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::Waveform::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Waveform::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_587_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::Waveform::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_587_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::Waveform* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::Waveform(*(dmtpc::core::Waveform*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::Waveform G__TdmtpccLcLcorecLcLWaveform;
static int G__DmtpcCoreCint_587_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::Waveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::Waveform*) (soff+(sizeof(dmtpc::core::Waveform)*i)))->~G__TdmtpccLcLcorecLcLWaveform();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::Waveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::Waveform*) (soff))->~G__TdmtpccLcLcorecLcLWaveform();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_587_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Waveform* dest = (dmtpc::core::Waveform*) G__getstructoffset();
   *dest = *(dmtpc::core::Waveform*) libp->para[0].ref;
   const dmtpc::core::Waveform& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::ScopeInfo */
static int G__DmtpcCoreCint_588_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::ScopeInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::ScopeInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::ScopeInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::ScopeInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_588_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__DmtpcCoreCint_588_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeInfo *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeInfo[n];
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeInfo;
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_588_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::ScopeInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::ScopeInfo(*(dmtpc::core::ScopeInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::ScopeInfo G__TdmtpccLcLcorecLcLScopeInfo;
static int G__DmtpcCoreCint_588_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::ScopeInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::ScopeInfo*) (soff+(sizeof(dmtpc::core::ScopeInfo)*i)))->~G__TdmtpccLcLcorecLcLScopeInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::ScopeInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::ScopeInfo*) (soff))->~G__TdmtpccLcLcorecLcLScopeInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_588_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeInfo* dest = (dmtpc::core::ScopeInfo*) G__getstructoffset();
   *dest = *(dmtpc::core::ScopeInfo*) libp->para[0].ref;
   const dmtpc::core::ScopeInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::Location */
static int G__DmtpcCoreCint_589_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Location* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Location[n];
     } else {
       p = new((void*) gvp) dmtpc::core::Location[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Location;
     } else {
       p = new((void*) gvp) dmtpc::core::Location;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Location* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (const char*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) dmtpc::core::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (const char*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) dmtpc::core::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) dmtpc::core::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) dmtpc::core::Location(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::core::Location*) G__getstructoffset())->getNorthAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::core::Location*) G__getstructoffset())->getHorizonAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::core::Location*) G__getstructoffset())->getLatitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::core::Location*) G__getstructoffset())->getLongitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::core::Location*) G__getstructoffset())->getElevation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((dmtpc::core::Location*) G__getstructoffset())->getDescription());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::Location::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Location::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::Location::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::Location::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::Location*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Location::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::Location::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::Location::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_589_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::Location::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_589_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::Location* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::Location(*(dmtpc::core::Location*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::Location G__TdmtpccLcLcorecLcLLocation;
static int G__DmtpcCoreCint_589_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::Location*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::Location*) (soff+(sizeof(dmtpc::core::Location)*i)))->~G__TdmtpccLcLcorecLcLLocation();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::Location*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::Location*) (soff))->~G__TdmtpccLcLcorecLcLLocation();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_589_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::Location* dest = (dmtpc::core::Location*) G__getstructoffset();
   *dest = *(dmtpc::core::Location*) libp->para[0].ref;
   const dmtpc::core::Location& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::TriggerInfo */
static int G__DmtpcCoreCint_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::TriggerInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::TriggerInfo(
(dmtpc::core::TriggerInfo::reason) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char**) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) dmtpc::core::TriggerInfo(
(dmtpc::core::TriggerInfo::reason) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char**) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::TriggerInfo((dmtpc::core::TriggerInfo::reason) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::core::TriggerInfo((dmtpc::core::TriggerInfo::reason) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::TriggerInfo((dmtpc::core::TriggerInfo::reason) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::core::TriggerInfo((dmtpc::core::TriggerInfo::reason) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::core::TriggerInfo[n];
       } else {
         p = new((void*) gvp) dmtpc::core::TriggerInfo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::core::TriggerInfo;
       } else {
         p = new((void*) gvp) dmtpc::core::TriggerInfo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::core::TriggerInfo*) G__getstructoffset())->why());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::TriggerInfo*) G__getstructoffset())->triggersPassed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::TriggerInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::TriggerInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::TriggerInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::TriggerInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::TriggerInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::TriggerInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::TriggerInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::TriggerInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_590_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::TriggerInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_590_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::TriggerInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::TriggerInfo(*(dmtpc::core::TriggerInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::TriggerInfo G__TdmtpccLcLcorecLcLTriggerInfo;
static int G__DmtpcCoreCint_590_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::TriggerInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::TriggerInfo*) (soff+(sizeof(dmtpc::core::TriggerInfo)*i)))->~G__TdmtpccLcLcorecLcLTriggerInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::TriggerInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::TriggerInfo*) (soff))->~G__TdmtpccLcLcorecLcLTriggerInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_590_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::TriggerInfo* dest = (dmtpc::core::TriggerInfo*) G__getstructoffset();
   *dest = *(dmtpc::core::TriggerInfo*) libp->para[0].ref;
   const dmtpc::core::TriggerInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::RunConfig */
static int G__DmtpcCoreCint_604_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::RunConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::RunConfig[n];
     } else {
       p = new((void*) gvp) dmtpc::core::RunConfig[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::RunConfig;
     } else {
       p = new((void*) gvp) dmtpc::core::RunConfig;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::RunConfig*) G__getstructoffset())->getLocation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::RunConfig*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((const dmtpc::core::RunConfig*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((const dmtpc::core::RunConfig*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::RunConfig::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::RunConfig::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::RunConfig::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::RunConfig::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::RunConfig*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::RunConfig::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::RunConfig::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::RunConfig::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_604_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::RunConfig::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_604_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::RunConfig* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::RunConfig(*(dmtpc::core::RunConfig*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::RunConfig G__TdmtpccLcLcorecLcLRunConfig;
static int G__DmtpcCoreCint_604_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::RunConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::RunConfig*) (soff+(sizeof(dmtpc::core::RunConfig)*i)))->~G__TdmtpccLcLcorecLcLRunConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::RunConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::RunConfig*) (soff))->~G__TdmtpccLcLcorecLcLRunConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_604_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::RunConfig* dest = (dmtpc::core::RunConfig*) G__getstructoffset();
   *dest = *(dmtpc::core::RunConfig*) libp->para[0].ref;
   const dmtpc::core::RunConfig& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::ScopeChannelConfig */
static int G__DmtpcCoreCint_605_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeChannelConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeChannelConfig[n];
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeChannelConfig[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeChannelConfig;
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeChannelConfig;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeChannelConfig*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((dmtpc::core::ScopeChannelConfig*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((dmtpc::core::ScopeChannelConfig*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::ScopeChannelConfig::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeChannelConfig::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::ScopeChannelConfig::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::ScopeChannelConfig::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeChannelConfig*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeChannelConfig::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeChannelConfig::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeChannelConfig::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_605_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeChannelConfig::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_605_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::ScopeChannelConfig* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::ScopeChannelConfig(*(dmtpc::core::ScopeChannelConfig*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::ScopeChannelConfig G__TdmtpccLcLcorecLcLScopeChannelConfig;
static int G__DmtpcCoreCint_605_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::ScopeChannelConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::ScopeChannelConfig*) (soff+(sizeof(dmtpc::core::ScopeChannelConfig)*i)))->~G__TdmtpccLcLcorecLcLScopeChannelConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::ScopeChannelConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::ScopeChannelConfig*) (soff))->~G__TdmtpccLcLcorecLcLScopeChannelConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_605_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeChannelConfig* dest = (dmtpc::core::ScopeChannelConfig*) G__getstructoffset();
   *dest = *(dmtpc::core::ScopeChannelConfig*) libp->para[0].ref;
   const dmtpc::core::ScopeChannelConfig& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::ScopeConfig */
static int G__DmtpcCoreCint_606_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeConfig[n];
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeConfig[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeConfig;
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeConfig;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeConfig*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((dmtpc::core::ScopeConfig*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((dmtpc::core::ScopeConfig*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::ScopeConfig::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeConfig::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::ScopeConfig::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::ScopeConfig::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::ScopeConfig*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeConfig*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeConfig*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeConfig*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeConfig::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeConfig::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeConfig::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_606_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeConfig::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_606_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::ScopeConfig* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::ScopeConfig(*(dmtpc::core::ScopeConfig*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::ScopeConfig G__TdmtpccLcLcorecLcLScopeConfig;
static int G__DmtpcCoreCint_606_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::ScopeConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::ScopeConfig*) (soff+(sizeof(dmtpc::core::ScopeConfig)*i)))->~G__TdmtpccLcLcorecLcLScopeConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::ScopeConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::ScopeConfig*) (soff))->~G__TdmtpccLcLcorecLcLScopeConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_606_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeConfig* dest = (dmtpc::core::ScopeConfig*) G__getstructoffset();
   *dest = *(dmtpc::core::ScopeConfig*) libp->para[0].ref;
   const dmtpc::core::ScopeConfig& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::ScopeChannelInfo */
static int G__DmtpcCoreCint_611_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::ScopeChannelInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeChannelInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::ScopeChannelInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::ScopeChannelInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::ScopeChannelInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeChannelInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeChannelInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeChannelInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeChannelInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeChannelInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeChannelInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_611_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeChannelInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__DmtpcCoreCint_611_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeChannelInfo *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeChannelInfo[n];
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeChannelInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeChannelInfo;
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeChannelInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_611_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::ScopeChannelInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::ScopeChannelInfo(*(dmtpc::core::ScopeChannelInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::ScopeChannelInfo G__TdmtpccLcLcorecLcLScopeChannelInfo;
static int G__DmtpcCoreCint_611_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::ScopeChannelInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::ScopeChannelInfo*) (soff+(sizeof(dmtpc::core::ScopeChannelInfo)*i)))->~G__TdmtpccLcLcorecLcLScopeChannelInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::ScopeChannelInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::ScopeChannelInfo*) (soff))->~G__TdmtpccLcLcorecLcLScopeChannelInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_611_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeChannelInfo* dest = (dmtpc::core::ScopeChannelInfo*) G__getstructoffset();
   *dest = *(dmtpc::core::ScopeChannelInfo*) libp->para[0].ref;
   const dmtpc::core::ScopeChannelInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::ScopeTraceInfo */
static int G__DmtpcCoreCint_612_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::ScopeTraceInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeTraceInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::ScopeTraceInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::ScopeTraceInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::core::ScopeTraceInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeTraceInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeTraceInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::ScopeTraceInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeTraceInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeTraceInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::ScopeTraceInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_612_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::ScopeTraceInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__DmtpcCoreCint_612_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeTraceInfo *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeTraceInfo[n];
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeTraceInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::ScopeTraceInfo;
     } else {
       p = new((void*) gvp) dmtpc::core::ScopeTraceInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_612_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::ScopeTraceInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::ScopeTraceInfo(*(dmtpc::core::ScopeTraceInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::ScopeTraceInfo G__TdmtpccLcLcorecLcLScopeTraceInfo;
static int G__DmtpcCoreCint_612_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::ScopeTraceInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::ScopeTraceInfo*) (soff+(sizeof(dmtpc::core::ScopeTraceInfo)*i)))->~G__TdmtpccLcLcorecLcLScopeTraceInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::ScopeTraceInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::ScopeTraceInfo*) (soff))->~G__TdmtpccLcLcorecLcLScopeTraceInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_612_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::ScopeTraceInfo* dest = (dmtpc::core::ScopeTraceInfo*) G__getstructoffset();
   *dest = *(dmtpc::core::ScopeTraceInfo*) libp->para[0].ref;
   const dmtpc::core::ScopeTraceInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::WritableDataset */
static int G__DmtpcCoreCint_643_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::WritableDataset* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::WritableDataset(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTimeStamp*) G__int(libp->para[2]), (TTimeStamp*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) dmtpc::core::WritableDataset(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTimeStamp*) G__int(libp->para[2]), (TTimeStamp*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (bool) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::WritableDataset(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTimeStamp*) G__int(libp->para[2]), (TTimeStamp*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) dmtpc::core::WritableDataset(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTimeStamp*) G__int(libp->para[2]), (TTimeStamp*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::WritableDataset(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTimeStamp*) G__int(libp->para[2]), (TTimeStamp*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) dmtpc::core::WritableDataset(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTimeStamp*) G__int(libp->para[2]), (TTimeStamp*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::WritableDataset(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTimeStamp*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) dmtpc::core::WritableDataset(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTimeStamp*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::WritableDataset((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::core::WritableDataset((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_643_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 105, (long) ((dmtpc::core::WritableDataset*) G__getstructoffset())->addBias((const dmtpc::core::Image**) G__int(libp->para[0]), (const dmtpc::core::Image**) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((dmtpc::core::WritableDataset*) G__getstructoffset())->addBias((const dmtpc::core::Image**) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_643_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::core::WritableDataset*) G__getstructoffset())->addEvent((dmtpc::core::Event*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_643_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::WritableDataset*) G__getstructoffset())->flush();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_643_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::WritableDataset*) G__getstructoffset())->getFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_643_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::WritableDataset*) G__getstructoffset())->commit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_643_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::WritableDataset* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::WritableDataset(*(dmtpc::core::WritableDataset*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::WritableDataset G__TdmtpccLcLcorecLcLWritableDataset;
static int G__DmtpcCoreCint_643_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::WritableDataset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::WritableDataset*) (soff+(sizeof(dmtpc::core::WritableDataset)*i)))->~G__TdmtpccLcLcorecLcLWritableDataset();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::WritableDataset*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::WritableDataset*) (soff))->~G__TdmtpccLcLcorecLcLWritableDataset();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_643_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::WritableDataset* dest = (dmtpc::core::WritableDataset*) G__getstructoffset();
   *dest = *(dmtpc::core::WritableDataset*) libp->para[0].ref;
   const dmtpc::core::WritableDataset& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::core::WritableEvent */
static int G__DmtpcCoreCint_644_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::WritableEvent*) G__getstructoffset())->ccdDataPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::WritableEvent*) G__getstructoffset())->scopeDataPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::core::WritableEvent*) G__getstructoffset())->scopeConfigsPtr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::WritableEvent*) G__getstructoffset())->setRunNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::WritableEvent*) G__getstructoffset())->setEventNumber((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::WritableEvent*) G__getstructoffset())->setLocation((dmtpc::core::Location*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::WritableEvent*) G__getstructoffset())->setTriggerInfo((dmtpc::core::TriggerInfo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::WritableEvent*) G__getstructoffset())->setTimeStamp((TTimeStamp*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::WritableEvent*) G__getstructoffset())->setDetectorConfig((dmtpc::core::DetectorConfig*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::core::WritableEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::WritableEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::core::WritableEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::core::WritableEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::core::WritableEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::WritableEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::WritableEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::core::WritableEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcCoreCint_644_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::core::WritableEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__DmtpcCoreCint_644_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::WritableEvent *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::WritableEvent[n];
     } else {
       p = new((void*) gvp) dmtpc::core::WritableEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::core::WritableEvent;
     } else {
       p = new((void*) gvp) dmtpc::core::WritableEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcCoreCint_644_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::core::WritableEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::core::WritableEvent(*(dmtpc::core::WritableEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::core::WritableEvent G__TdmtpccLcLcorecLcLWritableEvent;
static int G__DmtpcCoreCint_644_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::core::WritableEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::core::WritableEvent*) (soff+(sizeof(dmtpc::core::WritableEvent)*i)))->~G__TdmtpccLcLcorecLcLWritableEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::core::WritableEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::core::WritableEvent*) (soff))->~G__TdmtpccLcLcorecLcLWritableEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcCoreCint_644_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::core::WritableEvent* dest = (dmtpc::core::WritableEvent*) G__getstructoffset();
   *dest = *(dmtpc::core::WritableEvent*) libp->para[0].ref;
   const dmtpc::core::WritableEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* dmtpc */

/* dmtpc::core */

/* dmtpc::core::CameraConfig */

/* dmtpc::core::CameraInfo */

/* dmtpc::core::common */

/* dmtpc::core::Config */

/* dmtpc::core::DatasetHeader */

/* dmtpc::core::Event */

/* dmtpc::core::Image */

/* dmtpc::core::Dataset */

/* dmtpc::core::DetectorConfig */

/* dmtpc::core::Waveform */

/* dmtpc::core::ScopeInfo */

/* dmtpc::core::Location */

/* dmtpc::core::TriggerInfo */

/* dmtpc::core::RunConfig */

/* dmtpc::core::ScopeChannelConfig */

/* dmtpc::core::ScopeConfig */

/* dmtpc::core::ScopeChannelInfo */

/* dmtpc::core::ScopeTraceInfo */

/* dmtpc::core::WritableDataset */

/* dmtpc::core::WritableEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDmtpcCoreCint {
 public:
  G__Sizep2memfuncDmtpcCoreCint(): p(&G__Sizep2memfuncDmtpcCoreCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDmtpcCoreCint::*p)();
};

size_t G__get_sizep2memfuncDmtpcCoreCint()
{
  G__Sizep2memfuncDmtpcCoreCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDmtpcCoreCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig))) {
     dmtpc::core::CameraConfig *G__Lderived;
     G__Lderived=(dmtpc::core::CameraConfig*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo))) {
     dmtpc::core::CameraInfo *G__Lderived;
     G__Lderived=(dmtpc::core::CameraInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader))) {
     dmtpc::core::DatasetHeader *G__Lderived;
     G__Lderived=(dmtpc::core::DatasetHeader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent))) {
     dmtpc::core::Event *G__Lderived;
     G__Lderived=(dmtpc::core::Event*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage))) {
     dmtpc::core::Image *G__Lderived;
     G__Lderived=(dmtpc::core::Image*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig))) {
     dmtpc::core::DetectorConfig *G__Lderived;
     G__Lderived=(dmtpc::core::DetectorConfig*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform))) {
     dmtpc::core::Waveform *G__Lderived;
     G__Lderived=(dmtpc::core::Waveform*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation))) {
     dmtpc::core::Location *G__Lderived;
     G__Lderived=(dmtpc::core::Location*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo))) {
     dmtpc::core::TriggerInfo *G__Lderived;
     G__Lderived=(dmtpc::core::TriggerInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig))) {
     dmtpc::core::RunConfig *G__Lderived;
     G__Lderived=(dmtpc::core::RunConfig*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig))) {
     dmtpc::core::ScopeChannelConfig *G__Lderived;
     G__Lderived=(dmtpc::core::ScopeChannelConfig*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset))) {
     dmtpc::core::WritableDataset *G__Lderived;
     G__Lderived=(dmtpc::core::WritableDataset*)0x1000;
     {
       dmtpc::core::Dataset *G__Lpbase=(dmtpc::core::Dataset*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset),G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent))) {
     dmtpc::core::WritableEvent *G__Lderived;
     G__Lderived=(dmtpc::core::WritableEvent*)0x1000;
     {
       dmtpc::core::Event *G__Lpbase=(dmtpc::core::Event*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent),G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent),G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDmtpcCoreCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint8_t",98,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint32_t",104,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<unsigned>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const char*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Image*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::core::Image*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH2*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<type>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::core::DetectorConfig::type>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Waveform*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::core::Waveform*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ScopeInfo*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::core::ScopeInfo*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::input_iterator_tag,const TH2*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEinput_iterator_tagcOconstsPTH2mUcOlongcOconstsPTH2mUmUcOconstsPTH2mUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<input_iterator_tag,const TH2*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEinput_iterator_tagcOconstsPTH2mUcOlongcOconstsPTH2mUmUcOconstsPTH2mUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<input_iterator_tag,const TH2*>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEinput_iterator_tagcOconstsPTH2mUcOlongcOconstsPTH2mUmUcOconstsPTH2mUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<input_iterator_tag,const TH2*,long>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEinput_iterator_tagcOconstsPTH2mUcOlongcOconstsPTH2mUmUcOconstsPTH2mUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<input_iterator_tag,const TH2*,long,const TH2**>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_iteratorlEinput_iterator_tagcOconstsPTH2mUcOlongcOconstsPTH2mUmUcOconstsPTH2mUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ScopeChannelConfig>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::core::ScopeChannelConfig>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ScopeChannelInfo>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::core::ScopeChannelInfo>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TString>",117,G__get_linked_tagnum(&G__DmtpcCoreCintLN_listlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* dmtpc */
static void G__setup_memvardmtpc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpc));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core */
static void G__setup_memvardmtpccLcLcore(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcore));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::CameraConfig */
static void G__setup_memvardmtpccLcLcorecLcLCameraConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig));
   { dmtpc::core::CameraConfig *p; p=(dmtpc::core::CameraConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->xbin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"xbin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ybin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ybin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->exposureTime)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"exposureTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nflushes)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nflushes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccdTempSet)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"ccdTempSet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cameraType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"cameraType=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::CameraInfo */
static void G__setup_memvardmtpccLcLcorecLcLCameraInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo));
   { dmtpc::core::CameraInfo *p; p=(dmtpc::core::CameraInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nx)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"nx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ny)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"ny=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->camIndex)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"camIndex=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->xbin)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"xbin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ybin)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"ybin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ul_x)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"ul_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ul_y)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"ul_y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lr_x)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"lr_x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->lr_y)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"lr_y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nflushes)-(long)(p)),114,0,0,-1,G__defined_typename("uint16_t"),-1,1,"nflushes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccdTemp)-(long)(p)),100,0,0,-1,-1,-1,1,"ccdTemp=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccdTempSet)-(long)(p)),100,0,0,-1,-1,-1,1,"ccdTempSet=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->exposureTime)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"exposureTime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->readoutSpeedVertical)-(long)(p)),102,0,0,-1,-1,-1,1,"readoutSpeedVertical=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->readoutSpeedHorizontal)-(long)(p)),102,0,0,-1,-1,-1,1,"readoutSpeedHorizontal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dark)-(long)(p)),103,0,0,-1,-1,-1,1,"dark=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->shutterUsed)-(long)(p)),103,0,0,-1,-1,-1,1,"shutterUsed=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->serialNumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"serialNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->model)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"model=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nbytes)-(long)(p)),98,0,0,-1,G__defined_typename("uint8_t"),-1,1,"nbytes=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->overscanColumns)-(long)(p)),114,0,0,-1,-1,-1,1,"overscanColumns=",0,"number of column bins that are not exposed but digitized");
   G__memvar_setup((void*)((long)(&p->overscanRows)-(long)(p)),114,0,0,-1,-1,-1,1,"overscanRows=",0,"number of row bins that are not exposed but digitized");
   G__memvar_setup((void*)((long)(&p->digitizeOverscan)-(long)(p)),103,0,0,-1,-1,-1,1,"digitizeOverscan=",0,"apply digitization to overscan pixels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::common */
static void G__setup_memvardmtpccLcLcorecLcLcommon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLcommon));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::Config */
static void G__setup_memvardmtpccLcLcorecLcLConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig));
   { dmtpc::core::Config *p; p=(dmtpc::core::Config*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_DBL=%lldLL",(long long)dmtpc::core::Config::TYPE_DBL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_INT=%lldLL",(long long)dmtpc::core::Config::TYPE_INT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_UINT=%lldLL",(long long)dmtpc::core::Config::TYPE_UINT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_STR=%lldLL",(long long)dmtpc::core::Config::TYPE_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_ENUM=%lldLL",(long long)dmtpc::core::Config::TYPE_ENUM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_BOOL=%lldLL",(long long)dmtpc::core::Config::TYPE_BOOL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_LIST_DBL=%lldLL",(long long)dmtpc::core::Config::TYPE_LIST_DBL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_LIST_INT=%lldLL",(long long)dmtpc::core::Config::TYPE_LIST_INT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_LIST_UINT=%lldLL",(long long)dmtpc::core::Config::TYPE_LIST_UINT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_LIST_STR=%lldLL",(long long)dmtpc::core::Config::TYPE_LIST_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_LIST_ENUM=%lldLL",(long long)dmtpc::core::Config::TYPE_LIST_ENUM).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_LIST_BOOL=%lldLL",(long long)dmtpc::core::Config::TYPE_LIST_BOOL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_MAP_DBL=%lldLL",(long long)dmtpc::core::Config::TYPE_MAP_DBL).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_MAP_INT=%lldLL",(long long)dmtpc::core::Config::TYPE_MAP_INT).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_MAP_STR=%lldLL",(long long)dmtpc::core::Config::TYPE_MAP_STR).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType),-1,-2,1,G__FastAllocString(2048).Format("TYPE_INVALID=%lldLL",(long long)dmtpc::core::Config::TYPE_INVALID).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::DatasetHeader */
static void G__setup_memvardmtpccLcLcorecLcLDatasetHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader));
   { dmtpc::core::DatasetHeader *p; p=(dmtpc::core::DatasetHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ncameras)-(long)(p)),105,0,0,-1,-1,-1,1,"ncameras=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->starttime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TTimeStamp),-1,-1,1,"starttime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->endtime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TTimeStamp),-1,-1,1,"endtime=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->config)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObjString),-1,-1,1,"config=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::Event */
static void G__setup_memvardmtpccLcLcorecLcLEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent));
   { dmtpc::core::Event *p; p=(dmtpc::core::Event*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR),G__defined_typename("vector<Image*>"),-1,2,"_ccdData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgR),G__defined_typename("vector<Waveform*>"),-1,2,"scopeData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgR),G__defined_typename("vector<ScopeInfo*>"),-1,2,"scopeConfigs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig),-1,-1,2,"detectorConfig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation),-1,-1,2,"location=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo),-1,-1,2,"trigger=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TTimeStamp),-1,-1,2,"timestamp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"runNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"eventNumber=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::Image */
static void G__setup_memvardmtpccLcLcorecLcLImage(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage));
   { dmtpc::core::Image *p; p=(dmtpc::core::Image*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2),-1,-1,2,"hist=",0,"! ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2),-1,-1,2,"visible=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2),-1,-1,2,"overscan=",0,"!");
   G__memvar_setup((void*)0,85,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo),-1,-1,2,"info=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"size=",0,(char*)NULL);
   G__memvar_setup((void*)0,66,0,0,-1,G__defined_typename("uint8_t"),-1,2,"buf=",0,"[size]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::Dataset */
static void G__setup_memvardmtpccLcLcorecLcLDataset(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset));
   { dmtpc::core::Dataset *p; p=(dmtpc::core::Dataset*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TTree),-1,-1,2,"biasTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TTree),-1,-1,2,"eventTree=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader),-1,-1,2,"header=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TFile),-1,-1,2,"file=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent),-1,-1,2,"eventPtr=",0,"! ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR),G__defined_typename("vector<Image*>"),-1,2,"biasPtr=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR),G__defined_typename("vector<Image*>"),-1,2,"biasOsPtr=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR),G__defined_typename("vector<TH2*>"),-1,2,"bias_avg=",0,"! ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR),G__defined_typename("vector<TH2*>"),-1,2,"bias_os_avg=",0,"! ");
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::DetectorConfig */
static void G__setup_memvardmtpccLcLcorecLcLDetectorConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig));
   { dmtpc::core::DetectorConfig *p; p=(dmtpc::core::DetectorConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfigcLcLtype),-1,-2,1,G__FastAllocString(2048).Format("Voltage=%lldLL",(long long)dmtpc::core::DetectorConfig::Voltage).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfigcLcLtype),-1,-2,1,G__FastAllocString(2048).Format("Pressure=%lldLL",(long long)dmtpc::core::DetectorConfig::Pressure).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfigcLcLtype),-1,-2,1,G__FastAllocString(2048).Format("Temperature=%lldLL",(long long)dmtpc::core::DetectorConfig::Temperature).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfigcLcLtype),-1,-2,1,G__FastAllocString(2048).Format("Other=%lldLL",(long long)dmtpc::core::DetectorConfig::Other).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"values=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlETStringcOallocatorlETStringgRsPgR),G__defined_typename("vector<TString>"),-1,4,"desc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgR),G__defined_typename("vector<type>"),-1,4,"types=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::Waveform */
static void G__setup_memvardmtpccLcLcorecLcLWaveform(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform));
   { dmtpc::core::Waveform *p; p=(dmtpc::core::Waveform*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH1),-1,-1,2,"data=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH1D),-1,-1,2,"physical_data=",0,"! ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo),-1,-1,2,"trace_info=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"vmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"vmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"type=",0,"C,S,I; ");
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,2,"nbits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::ScopeInfo */
static void G__setup_memvardmtpccLcLcorecLcLScopeInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo));
   { dmtpc::core::ScopeInfo *p; p=(dmtpc::core::ScopeInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->channel_info)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgR),G__defined_typename("vector<ScopeChannelInfo>"),-1,1,"channel_info=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scope_number)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"scope_number=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::Location */
static void G__setup_memvardmtpccLcLcorecLcLLocation(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation));
   { dmtpc::core::Location *p; p=(dmtpc::core::Location*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"longitude=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"latitude=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"north_angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"horizon_angle=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"elevation=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TObjString),-1,-1,4,"description=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::TriggerInfo */
static void G__setup_memvardmtpccLcLcorecLcLTriggerInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo));
   { dmtpc::core::TriggerInfo *p; p=(dmtpc::core::TriggerInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfocLcLreason),-1,-2,1,G__FastAllocString(2048).Format("PASS=%lldLL",(long long)dmtpc::core::TriggerInfo::PASS).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfocLcLreason),-1,-2,1,G__FastAllocString(2048).Format("PRE=%lldLL",(long long)dmtpc::core::TriggerInfo::PRE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfocLcLreason),-1,-2,1,G__FastAllocString(2048).Format("POST=%lldLL",(long long)dmtpc::core::TriggerInfo::POST).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfocLcLreason),-1,-1,4,"_why=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_listlETStringcOallocatorlETStringgRsPgR),G__defined_typename("list<TString>"),-1,4,"passed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::RunConfig */
static void G__setup_memvardmtpccLcLcorecLcLRunConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig));
   { dmtpc::core::RunConfig *p; p=(dmtpc::core::RunConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ccd_threaded_readout)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"ccd_threaded_readout=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccd_external_trigger)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"ccd_external_trigger=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccd_dark_shutter_open)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"ccd_dark_shutter_open=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run_num)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"run_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccd_buffer_size)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"ccd_buffer_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scope_buffer_size)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"scope_buffer_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scope_wait_timeout)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"scope_wait_timeout=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trigger_pretrigger)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trigger_pretrigger=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trigger_posttrigger)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trigger_posttrigger=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->compression_algo)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"compression_algo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->compression_level)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"compression_level=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ccd_light_shutter_mode)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"ccd_light_shutter_mode=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->out_dir)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"out_dir=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->run_tag)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"run_tag=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->output_filename)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"output_filename=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->db_config)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"db_config=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->location)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation),-1,-1,1,"location=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::ScopeChannelConfig */
static void G__setup_memvardmtpccLcLcorecLcLScopeChannelConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig));
   { dmtpc::core::ScopeChannelConfig *p; p=(dmtpc::core::ScopeChannelConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->pulse_polarity_falling)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"pulse_polarity_falling=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trigger_polarity_falling)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"trigger_polarity_falling=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vmin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"vmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vmax)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"vmax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->dc_offset)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"dc_offset=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->trigger_threshold)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"trigger_threshold=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->channel_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"channel_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scope)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"scope=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->input_type)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"input_type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::ScopeConfig */
static void G__setup_memvardmtpccLcLcorecLcLScopeConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig));
   { dmtpc::core::ScopeConfig *p; p=(dmtpc::core::ScopeConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scope_id)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"scope_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->record_length)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"record_length=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->post_trigger)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"post_trigger=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->num_events_BLT)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"num_events_BLT=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->link_num)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"link_num=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->conet_node)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"conet_node=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->connection_type)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TString),-1,-1,1,"connection_type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scopeChannelConfigs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgR),G__defined_typename("vector<ScopeChannelConfig>"),-1,1,"scopeChannelConfigs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::ScopeChannelInfo */
static void G__setup_memvardmtpccLcLcorecLcLScopeChannelInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo));
   { dmtpc::core::ScopeChannelInfo *p; p=(dmtpc::core::ScopeChannelInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->name)-(long)(p)),99,0,0,-1,-1,-1,1,"name[16]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vmin)-(long)(p)),100,0,0,-1,-1,-1,1,"vmin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->vmax)-(long)(p)),100,0,0,-1,-1,-1,1,"vmax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nbits)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"nbits=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nbytes_raw)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"nbytes_raw=",0,"sizeof(int) for how it's stored");
   G__memvar_setup((void*)((long)(&p->sample_rate)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"sample_rate=",0,"khz ");
   G__memvar_setup((void*)((long)(&p->nsamples)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"nsamples=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nsamples_pretrigger)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"nsamples_pretrigger=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->channel)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scope)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"scope=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::ScopeTraceInfo */
static void G__setup_memvardmtpccLcLcorecLcLScopeTraceInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo));
   { dmtpc::core::ScopeTraceInfo *p; p=(dmtpc::core::ScopeTraceInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->secs)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"secs=",0,"Should someone deal with y2k38 problem?  ");
   G__memvar_setup((void*)((long)(&p->nsecs)-(long)(p)),104,0,0,-1,G__defined_typename("uint32_t"),-1,1,"nsecs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->channel)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"channel=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scope)-(long)(p)),107,0,0,-1,G__defined_typename("size_t"),-1,1,"scope=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::WritableDataset */
static void G__setup_memvardmtpccLcLcorecLcLWritableDataset(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset));
   { dmtpc::core::WritableDataset *p; p=(dmtpc::core::WritableDataset*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"committed=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::core::WritableEvent */
static void G__setup_memvardmtpccLcLcorecLcLWritableEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent));
   { dmtpc::core::WritableEvent *p; p=(dmtpc::core::WritableEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDmtpcCoreCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdmtpc(void) {
   /* dmtpc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpc));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcore(void) {
   /* dmtpc::core */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcore));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLCameraConfig(void) {
   /* dmtpc::core::CameraConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig));
   G__memfunc_setup("CameraConfig",1183,G__DmtpcCoreCint_202_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcCoreCint_202_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__DmtpcCoreCint_202_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_202_0_4, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::CameraConfig::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_202_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::CameraConfig::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_202_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::CameraConfig::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_202_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::CameraConfig::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_202_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_202_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::CameraConfig::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_202_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::CameraConfig::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_202_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::CameraConfig::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_202_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::CameraConfig::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CameraConfig", 1183, G__DmtpcCoreCint_202_0_16, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::CameraConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CameraConfig", 1309, G__DmtpcCoreCint_202_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_202_0_18, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::CameraConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLCameraInfo(void) {
   /* dmtpc::core::CameraInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo));
   G__memfunc_setup("CameraInfo",981,G__DmtpcCoreCint_203_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_203_0_2, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::CameraInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_203_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::CameraInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_203_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::CameraInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_203_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::CameraInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_203_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_203_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::CameraInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_203_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::CameraInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_203_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::CameraInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_203_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::CameraInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CameraInfo", 981, G__DmtpcCoreCint_203_0_14, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::CameraInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CameraInfo", 1107, G__DmtpcCoreCint_203_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_203_0_16, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::CameraInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLcommon(void) {
   /* dmtpc::core::common */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLcommon));
   G__memfunc_setup("addFilesToChain",1474,G__DmtpcCoreCint_205_0_1, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'TChain' - 0 - ch C - - 10 - file_list", (char*)NULL, (void*) G__func2void( (int (*)(TChain*, const char*))(&dmtpc::core::common::addFilesToChain) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLConfig(void) {
   /* dmtpc::core::Config */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig));
   G__memfunc_setup("parseFile",923,G__DmtpcCoreCint_206_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parseStream",1159,G__DmtpcCoreCint_206_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_istream<char,char_traits<char> >' 'istream' 1 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parseString",1170,G__DmtpcCoreCint_206_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - in", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInt",631,G__DmtpcCoreCint_206_0_4, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key i - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBool",728,G__DmtpcCoreCint_206_0_5, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key g - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUInt",716,G__DmtpcCoreCint_206_0_6, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDouble",935,G__DmtpcCoreCint_206_0_7, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setString",963,G__DmtpcCoreCint_206_0_8, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key C - - 10 - string", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnum",737,G__DmtpcCoreCint_206_0_9, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key i - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnum",737,G__DmtpcCoreCint_206_0_10, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key C - - 10 - value_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIntList",1043,G__DmtpcCoreCint_206_0_11, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key U 'vector<int,allocator<int> >' 'vector<int>' 10 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBoolList",1140,G__DmtpcCoreCint_206_0_12, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key U 'vector<bool,allocator<bool> >' 'vector<bool>' 10 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUIntList",1128,G__DmtpcCoreCint_206_0_13, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key U 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned>' 10 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDoubleList",1347,G__DmtpcCoreCint_206_0_14, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key U 'vector<double,allocator<double> >' 'vector<double>' 10 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStringList",1375,G__DmtpcCoreCint_206_0_15, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key U 'vector<const char*,allocator<const char*> >' 'vector<const char*>' 10 - strings", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnumList",1149,G__DmtpcCoreCint_206_0_16, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key U 'vector<int,allocator<int> >' 'vector<int>' 10 - values", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnumList",1149,G__DmtpcCoreCint_206_0_17, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - key U 'vector<const char*,allocator<const char*> >' 'vector<const char*>' 10 - value_names", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIntMap",917,G__DmtpcCoreCint_206_0_18, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - key C - - 10 - key2 "
"i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStringMap",1249,G__DmtpcCoreCint_206_0_19, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - key C - - 10 - key2 "
"C - - 10 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDoubleMap",1221,G__DmtpcCoreCint_206_0_20, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - key C - - 10 - key2 "
"d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInt",619,G__DmtpcCoreCint_206_0_21, 105, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUInt",704,G__DmtpcCoreCint_206_0_22, 104, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDouble",923,G__DmtpcCoreCint_206_0_23, 100, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getString",951,G__DmtpcCoreCint_206_0_24, 67, -1, -1, 0, 1, 1, 1, 9, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnum",725,G__DmtpcCoreCint_206_0_25, 105, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnumName",1110,G__DmtpcCoreCint_206_0_26, 67, -1, -1, 0, 2, 1, 1, 9, 
"C - - 10 - key i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBool",716,G__DmtpcCoreCint_206_0_27, 103, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIntList",1031,G__DmtpcCoreCint_206_0_28, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 9, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUIntList",1116,G__DmtpcCoreCint_206_0_29, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR), G__defined_typename("vector<unsigned>"), 0, 1, 1, 1, 9, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDoubleList",1335,G__DmtpcCoreCint_206_0_30, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 9, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStringList",1363,G__DmtpcCoreCint_206_0_31, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR), G__defined_typename("vector<const char*>"), 0, 1, 1, 1, 9, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStringList",1363,G__DmtpcCoreCint_206_0_32, 67, -1, -1, 0, 2, 1, 1, 9, 
"C - - 10 - key i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnumList",1137,G__DmtpcCoreCint_206_0_33, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 1, 1, 1, 9, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBoolList",1128,G__DmtpcCoreCint_206_0_34, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEboolcOallocatorlEboolgRsPgR), G__defined_typename("vector<bool>"), 0, 1, 1, 1, 9, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIntMap",905,G__DmtpcCoreCint_206_0_35, 105, -1, -1, 0, 3, 1, 1, 8, 
"C - - 10 - key C - - 10 - key2 "
"i - - 0 '0' notfound", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDoubleMap",1209,G__DmtpcCoreCint_206_0_36, 100, -1, -1, 0, 3, 1, 1, 8, 
"C - - 10 - key C - - 10 - key2 "
"d - - 0 '0' notfound", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStringMap",1237,G__DmtpcCoreCint_206_0_37, 67, -1, -1, 0, 3, 1, 1, 9, 
"C - - 10 - key C - - 10 - key2 "
"C - - 10 '0' notfound", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeOutConfig",1465,G__DmtpcCoreCint_206_0_38, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__DmtpcCoreCint_206_0_39, 121, -1, -1, 0, 1, 1, 1, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("parseRegistered",1577,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 3, 1, 2, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"i - - 0 - line", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printRegistered",1595,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 8, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 'std::cout' out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerDouble",1472,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name d - - 0 '0' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerInt",1168,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name i - - 0 '0' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerUInt",1253,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name h - - 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerString",1500,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name C - - 10 '\"\"' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerEnum",1274,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"C - - 10 - name i - - 0 - n "
"C - - 12 - keys I - - 10 '0' indices "
"i - - 0 '0' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerBool",1265,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name g - - 0 'false' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerDoubleList",1884,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name U 'vector<double,allocator<double> >' 'vector<double>' 10 '0' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerDoubleList",1884,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"C - - 10 - name h - - 0 - - "
"D - - 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerIntList",1580,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name U 'vector<int,allocator<int> >' 'vector<int>' 10 '0' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerUIntList",1665,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name U 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned>' 10 '0' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerStringList",1912,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name U 'vector<const char*,allocator<const char*> >' 'vector<const char*>' 10 '0' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerEnumList",1686,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 2, 0, 
"C - - 10 - name i - - 0 - n "
"C - - 12 - keys I - - 10 '0' indices "
"U 'vector<int,allocator<int> >' 'vector<int>' 10 '0' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerBoolList",1677,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - name U 'vector<bool,allocator<bool> >' 'vector<bool>' 10 '0' default_val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerDoubleMap",1758,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"C - - 10 - name U 'vector<const char*,allocator<const char*> >' 'vector<const char*>' 10 '0' default_keys "
"U 'vector<double,allocator<double> >' 'vector<double>' 10 '0' default_vals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerIntMap",1454,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"C - - 10 - name U 'vector<const char*,allocator<const char*> >' 'vector<const char*>' 10 '0' default_keys "
"U 'vector<int,allocator<int> >' 'vector<int>' 10 '0' default_vals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("registerStringMap",1786,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"C - - 10 - name U 'vector<const char*,allocator<const char*> >' 'vector<const char*>' 10 '0' default_keys "
"U 'vector<const char*,allocator<const char*> >' 'vector<const char*>' 10 '0' default_vals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("asString",843,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__DmtpcCoreCintLN_string), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parsePair",935,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'string' - 0 - key u 'string' - 0 - value "
"i - - 0 - line", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("checkType",928,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 2, 1, 4, 8, 
"C - - 10 - key i 'dmtpc::core::Config::ConfigStoreType' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStore",845,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStore), -1, 0, 1, 1, 4, 9, "C - - 10 - key", (char*)NULL, (void*) NULL, 0);
   // automatic default constructor
   G__memfunc_setup("Config", 598, G__DmtpcCoreCint_206_0_62, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Config", 598, G__DmtpcCoreCint_206_0_63, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::Config' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Config", 724, G__DmtpcCoreCint_206_0_64, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_206_0_65, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::Config' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLDatasetHeader(void) {
   /* dmtpc::core::DatasetHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader));
   G__memfunc_setup("DatasetHeader",1295,G__DmtpcCoreCint_222_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_222_0_2, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::DatasetHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_222_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::DatasetHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_222_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::DatasetHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_222_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::DatasetHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_222_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_222_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::DatasetHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_222_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::DatasetHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_222_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::DatasetHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_222_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::DatasetHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DatasetHeader", 1295, G__DmtpcCoreCint_222_0_14, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::DatasetHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DatasetHeader", 1421, G__DmtpcCoreCint_222_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_222_0_16, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::DatasetHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLEvent(void) {
   /* dmtpc::core::Event */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent));
   G__memfunc_setup("Event",514,G__DmtpcCoreCint_536_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Event",514,G__DmtpcCoreCint_536_0_2, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent), -1, 0, 2, 1, 1, 0, 
"u 'dmtpc::core::Event' - 11 - other g - - 0 'true' copy_data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ccdConfig",896,G__DmtpcCoreCint_536_0_3, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getImage",803,G__DmtpcCoreCint_536_0_4, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVisible",1038,G__DmtpcCoreCint_536_0_5, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOverscan",1153,G__DmtpcCoreCint_536_0_6, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nccd",408,G__DmtpcCoreCint_536_0_7, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ccdData",676,G__DmtpcCoreCint_536_0_8, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("visible",750,G__DmtpcCoreCint_536_0_9, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("overscan",865,G__DmtpcCoreCint_536_0_10, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrace",815,G__DmtpcCoreCint_536_0_11, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrace",815,G__DmtpcCoreCint_536_0_12, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform), -1, 0, 3, 1, 1, 9, 
"i - - 0 - channel i - - 0 - trigger "
"i - - 0 - nch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nscopes",763,G__DmtpcCoreCint_536_0_13, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScopeConfig",1424,G__DmtpcCoreCint_536_0_14, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo), -1, 0, 1, 1, 1, 9, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nScopeData",994,G__DmtpcCoreCint_536_0_15, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("run",341,G__DmtpcCoreCint_536_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ev",219,G__DmtpcCoreCint_536_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimestamp",1268,G__DmtpcCoreCint_536_0_18, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TTimeStamp), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_536_0_19, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::Event::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_536_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Event::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_536_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::Event::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_536_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::Event::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_536_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_536_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Event::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_536_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::Event::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_536_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Event::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_536_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::Event::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Event", 640, G__DmtpcCoreCint_536_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_536_0_32, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::Event' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLImage(void) {
   /* dmtpc::core::Image */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage));
   G__memfunc_setup("Image",483,G__DmtpcCoreCint_537_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Image",483,G__DmtpcCoreCint_537_0_2, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"Y - - 10 - rawdata U 'dmtpc::core::CameraInfo' - 10 - info", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator TH2*",1156,G__DmtpcCoreCint_537_0_3, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 0, 1, 1, 0, "", "non-const", (void*) NULL, 0);
   G__memfunc_setup("operator TH2",1114,G__DmtpcCoreCint_537_0_4, 117, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 0, 1, 1, 0, "", "non-const", (void*) NULL, 0);
   G__memfunc_setup("Draw",398,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DrawVisible",1116,G__DmtpcCoreCint_537_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawOverscan",1231,G__DmtpcCoreCint_537_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHist",728,G__DmtpcCoreCint_537_0_8, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVisible",1038,G__DmtpcCoreCint_537_0_9, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOverscan",1153,G__DmtpcCoreCint_537_0_10, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeEmptyTH2D",1215,G__DmtpcCoreCint_537_0_11, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2D), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInfo",716,G__DmtpcCoreCint_537_0_12, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeImage",897,G__DmtpcCoreCint_537_0_13, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage), -1, 0, 3, 3, 1, 0, 
"U 'TH2' - 10 - hist b - 'uint8_t' 0 '2' nbytes "
"g - - 0 'false' dark", (char*)NULL, (void*) G__func2void( (dmtpc::core::Image* (*)(const TH2*, uint8_t, bool))(&dmtpc::core::Image::makeImage) ), 0);
   G__memfunc_setup("extractTH2",969,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 1, 1, 2, 8, "i - - 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("th2",270,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("th2_visible",1115,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("th2_overscan",1230,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_537_0_18, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::Image::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_537_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Image::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_537_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::Image::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_537_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::Image::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_537_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_537_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Image::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_537_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::Image::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_537_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Image::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_537_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::Image::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Image", 483, G__DmtpcCoreCint_537_0_30, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::Image' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Image", 609, G__DmtpcCoreCint_537_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLDataset(void) {
   /* dmtpc::core::Dataset */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset));
   G__memfunc_setup("getBiasTreeName",1488,G__DmtpcCoreCint_538_0_1, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Dataset::getBiasTreeName) ), 0);
   G__memfunc_setup("getDataTreeName",1483,G__DmtpcCoreCint_538_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Dataset::getDataTreeName) ), 0);
   G__memfunc_setup("Dataset",710,G__DmtpcCoreCint_538_0_3, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset), -1, 0, 1, 1, 1, 0, "C - - 10 '0' file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__DmtpcCoreCint_538_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__DmtpcCoreCint_538_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEvent",834,G__DmtpcCoreCint_538_0_6, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - event_i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBiasRaw",1001,G__DmtpcCoreCint_538_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - bias_i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nevents",771,G__DmtpcCoreCint_538_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nbias",525,G__DmtpcCoreCint_538_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHeader",905,G__DmtpcCoreCint_538_0_10, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("event",546,G__DmtpcCoreCint_538_0_11, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biasRaw",713,G__DmtpcCoreCint_538_0_12, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage), -1, 0, 1, 1, 1, 1, "i - - 0 - icam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biasOS",577,G__DmtpcCoreCint_538_0_13, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage), -1, 0, 1, 1, 1, 1, "i - - 0 - icam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biasAvg",701,G__DmtpcCoreCint_538_0_14, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 1, 1, 1, 1, "i - - 0 - icam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("biasOSAvg",863,G__DmtpcCoreCint_538_0_15, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 1, 1, 1, 1, "i - - 0 - icam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBiasTree",1103,G__DmtpcCoreCint_538_0_16, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventTree",1234,G__DmtpcCoreCint_538_0_17, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFile",704,G__DmtpcCoreCint_538_0_18, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TFile), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("computeAvg",1051,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH2), -1, 0, 2, 1, 2, 1, 
"i - - 0 - icam g - - 0 'false' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearFile",903,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Dataset", 710, G__DmtpcCoreCint_538_0_21, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::Dataset' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Dataset", 836, G__DmtpcCoreCint_538_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_538_0_23, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::Dataset' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLDetectorConfig(void) {
   /* dmtpc::core::DetectorConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig));
   G__memfunc_setup("DetectorConfig",1424,G__DmtpcCoreCint_547_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DetectorConfig",1424,G__DmtpcCoreCint_547_0_2, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig), -1, 0, 4, 1, 1, 0, 
"i - - 0 - n D - - 0 - values "
"C - - 12 - desc I 'dmtpc::core::DetectorConfig::type' - 0 - types", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__DmtpcCoreCint_547_0_3, 105, -1, -1, 0, 3, 1, 1, 8, 
"C - - 10 - desc D - - 0 - value "
"I 'dmtpc::core::DetectorConfig::type' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getValue",829,G__DmtpcCoreCint_547_0_4, 100, -1, -1, 0, 1, 1, 1, 8, "C - - 10 - desc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("list",444,G__DmtpcCoreCint_547_0_5, 105, -1, -1, 0, 1, 1, 1, 8, "U 'vector<const char*,allocator<const char*> >' 'vector<const char*>' 0 - fill", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_547_0_6, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::DetectorConfig::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_547_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::DetectorConfig::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_547_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::DetectorConfig::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_547_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::DetectorConfig::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_547_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_547_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::DetectorConfig::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_547_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::DetectorConfig::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_547_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::DetectorConfig::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_547_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::DetectorConfig::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DetectorConfig", 1424, G__DmtpcCoreCint_547_0_18, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::DetectorConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DetectorConfig", 1550, G__DmtpcCoreCint_547_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_547_0_20, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::DetectorConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLWaveform(void) {
   /* dmtpc::core::Waveform */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform));
   G__memfunc_setup("Waveform",839,G__DmtpcCoreCint_587_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Waveform",839,G__DmtpcCoreCint_587_0_2, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform), -1, 0, 6, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"Y - - 10 - raw_data U 'dmtpc::core::ScopeChannelInfo' - 10 - info "
"h - 'uint32_t' 0 - secs h - 'uint32_t' 0 - nsecs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBinContent",1300,G__DmtpcCoreCint_587_0_3, 104, -1, G__defined_typename("uint32_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhysicalBinContent",2129,G__DmtpcCoreCint_587_0_4, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator TH1*",1155,G__DmtpcCoreCint_587_0_5, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH1), -1, 0, 0, 1, 1, 0, "", "non-const", (void*) NULL, 0);
   G__memfunc_setup("operator TH1",1113,G__DmtpcCoreCint_587_0_6, 117, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH1), -1, 0, 0, 1, 1, 0, "", "non-const", (void*) NULL, 0);
   G__memfunc_setup("Draw",398,G__DmtpcCoreCint_587_0_7, 121, -1, -1, 0, 1, 1, 1, 8, "C - - 10 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhysical",1149,G__DmtpcCoreCint_587_0_8, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH1D), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRaw",618,G__DmtpcCoreCint_587_0_9, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH1), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("destroyPhysical",1607,G__DmtpcCoreCint_587_0_10, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getType",738,G__DmtpcCoreCint_587_0_11, 99, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInfo",716,G__DmtpcCoreCint_587_0_12, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("physical",861,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TH1D), -1, 0, 0, 1, 2, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_587_0_14, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::Waveform::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_587_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Waveform::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_587_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::Waveform::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_587_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::Waveform::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_587_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_587_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Waveform::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_587_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::Waveform::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_587_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Waveform::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_587_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::Waveform::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Waveform", 839, G__DmtpcCoreCint_587_0_26, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::Waveform' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Waveform", 965, G__DmtpcCoreCint_587_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_587_0_28, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::Waveform' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLScopeInfo(void) {
   /* dmtpc::core::ScopeInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo));
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_588_0_1, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::ScopeInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_588_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_588_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::ScopeInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_588_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::ScopeInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DmtpcCoreCint_588_0_5, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DmtpcCoreCint_588_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DmtpcCoreCint_588_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_588_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_588_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_588_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_588_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_588_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeInfo::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("ScopeInfo", 902, G__DmtpcCoreCint_588_0_13, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ScopeInfo", 902, G__DmtpcCoreCint_588_0_14, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::ScopeInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScopeInfo", 1028, G__DmtpcCoreCint_588_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_588_0_16, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::ScopeInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLLocation(void) {
   /* dmtpc::core::Location */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation));
   G__memfunc_setup("Location",825,G__DmtpcCoreCint_589_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Location",825,G__DmtpcCoreCint_589_0_2, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation), -1, 0, 6, 1, 1, 0, 
"d - - 0 - longitude d - - 0 - latitude "
"d - - 0 - north_angle d - - 0 '0' elevation "
"d - - 0 '0' horizon_angle C - - 10 '\"\"' description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNorthAngle",1330,G__DmtpcCoreCint_589_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHorizonAngle",1552,G__DmtpcCoreCint_589_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLatitude",1148,G__DmtpcCoreCint_589_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLongitude",1259,G__DmtpcCoreCint_589_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getElevation",1255,G__DmtpcCoreCint_589_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDescription",1476,G__DmtpcCoreCint_589_0_8, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_589_0_9, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::Location::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_589_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Location::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_589_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::Location::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_589_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::Location::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_589_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_589_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Location::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_589_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::Location::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_589_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::Location::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_589_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::Location::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Location", 825, G__DmtpcCoreCint_589_0_21, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::Location' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Location", 951, G__DmtpcCoreCint_589_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_589_0_23, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::Location' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLTriggerInfo(void) {
   /* dmtpc::core::TriggerInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo));
   G__memfunc_setup("TriggerInfo",1120,G__DmtpcCoreCint_590_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo), -1, 0, 3, 1, 1, 0, 
"i 'dmtpc::core::TriggerInfo::reason' - 0 'PASS' why i - - 0 '0' npass "
"C - - 12 '0' passed_triggers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("why",344,G__DmtpcCoreCint_590_0_2, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfocLcLreason), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("triggersPassed",1479,G__DmtpcCoreCint_590_0_3, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_listlETStringcOallocatorlETStringgRsPgR), G__defined_typename("list<TString>"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_590_0_4, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::TriggerInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_590_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::TriggerInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_590_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::TriggerInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_590_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::TriggerInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_590_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_590_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::TriggerInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_590_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::TriggerInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_590_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::TriggerInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_590_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::TriggerInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TriggerInfo", 1120, G__DmtpcCoreCint_590_0_16, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::TriggerInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TriggerInfo", 1246, G__DmtpcCoreCint_590_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_590_0_18, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::TriggerInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLRunConfig(void) {
   /* dmtpc::core::RunConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig));
   G__memfunc_setup("RunConfig",907,G__DmtpcCoreCint_604_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLocation",1145,G__DmtpcCoreCint_604_0_2, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcCoreCint_604_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__DmtpcCoreCint_604_0_4, 121, -1, -1, 0, 1, 1, 1, 8, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_604_0_5, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::RunConfig::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_604_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::RunConfig::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_604_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::RunConfig::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_604_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::RunConfig::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_604_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_604_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::RunConfig::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_604_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::RunConfig::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_604_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::RunConfig::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_604_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::RunConfig::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RunConfig", 907, G__DmtpcCoreCint_604_0_17, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::RunConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RunConfig", 1033, G__DmtpcCoreCint_604_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_604_0_19, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::RunConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLScopeChannelConfig(void) {
   /* dmtpc::core::ScopeChannelConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig));
   G__memfunc_setup("ScopeChannelConfig",1801,G__DmtpcCoreCint_605_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcCoreCint_605_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__DmtpcCoreCint_605_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_605_0_4, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::ScopeChannelConfig::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_605_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeChannelConfig::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_605_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::ScopeChannelConfig::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_605_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::ScopeChannelConfig::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_605_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_605_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeChannelConfig::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_605_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeChannelConfig::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_605_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeChannelConfig::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_605_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeChannelConfig::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ScopeChannelConfig", 1801, G__DmtpcCoreCint_605_0_16, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::ScopeChannelConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScopeChannelConfig", 1927, G__DmtpcCoreCint_605_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_605_0_18, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::ScopeChannelConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLScopeConfig(void) {
   /* dmtpc::core::ScopeConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig));
   G__memfunc_setup("ScopeConfig",1104,G__DmtpcCoreCint_606_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcCoreCint_606_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__DmtpcCoreCint_606_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_606_0_4, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::ScopeConfig::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_606_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeConfig::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_606_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::ScopeConfig::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_606_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::ScopeConfig::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DmtpcCoreCint_606_0_8, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DmtpcCoreCint_606_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DmtpcCoreCint_606_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_606_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_606_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeConfig::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_606_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeConfig::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_606_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeConfig::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_606_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeConfig::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ScopeConfig", 1104, G__DmtpcCoreCint_606_0_16, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::ScopeConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScopeConfig", 1230, G__DmtpcCoreCint_606_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_606_0_18, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::ScopeConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLScopeChannelInfo(void) {
   /* dmtpc::core::ScopeChannelInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo));
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_611_0_1, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::ScopeChannelInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_611_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeChannelInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_611_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::ScopeChannelInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_611_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::ScopeChannelInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DmtpcCoreCint_611_0_5, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DmtpcCoreCint_611_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DmtpcCoreCint_611_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_611_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_611_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeChannelInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_611_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeChannelInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_611_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeChannelInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_611_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeChannelInfo::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("ScopeChannelInfo", 1599, G__DmtpcCoreCint_611_0_13, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ScopeChannelInfo", 1599, G__DmtpcCoreCint_611_0_14, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::ScopeChannelInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScopeChannelInfo", 1725, G__DmtpcCoreCint_611_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_611_0_16, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::ScopeChannelInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLScopeTraceInfo(void) {
   /* dmtpc::core::ScopeTraceInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo));
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_612_0_1, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::ScopeTraceInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_612_0_2, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeTraceInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_612_0_3, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::ScopeTraceInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_612_0_4, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::ScopeTraceInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DmtpcCoreCint_612_0_5, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DmtpcCoreCint_612_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DmtpcCoreCint_612_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_612_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_612_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeTraceInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_612_0_10, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeTraceInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_612_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::ScopeTraceInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_612_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::ScopeTraceInfo::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("ScopeTraceInfo", 1397, G__DmtpcCoreCint_612_0_13, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ScopeTraceInfo", 1397, G__DmtpcCoreCint_612_0_14, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::ScopeTraceInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ScopeTraceInfo", 1523, G__DmtpcCoreCint_612_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_612_0_16, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::ScopeTraceInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLWritableDataset(void) {
   /* dmtpc::core::WritableDataset */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset));
   G__memfunc_setup("WritableDataset",1536,G__DmtpcCoreCint_643_0_1, 105, G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset), -1, 0, 6, 1, 1, 0, 
"C - - 10 - file i - - 0 - ncam "
"U 'TTimeStamp' - 0 '0' start U 'TTimeStamp' - 0 '0' end "
"C - - 10 '\"\"' config g - - 0 'true' overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addBias",680,G__DmtpcCoreCint_643_0_2, 105, -1, -1, 0, 2, 1, 1, 0, 
"U 'dmtpc::core::Image' - 12 - biasframes U 'dmtpc::core::Image' - 12 '0' os", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addEvent",811,G__DmtpcCoreCint_643_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U 'dmtpc::core::Event' - 10 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("flush",546,G__DmtpcCoreCint_643_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFile",704,G__DmtpcCoreCint_643_0_5, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("commit",649,G__DmtpcCoreCint_643_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WritableDataset", 1536, G__DmtpcCoreCint_643_0_7, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::WritableDataset' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WritableDataset", 1662, G__DmtpcCoreCint_643_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_643_0_9, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::WritableDataset' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLcorecLcLWritableEvent(void) {
   /* dmtpc::core::WritableEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent));
   G__memfunc_setup("ccdDataPtr",986,G__DmtpcCoreCint_644_0_1, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR), G__defined_typename("vector<Image*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scopeDataPtr",1226,G__DmtpcCoreCint_644_0_2, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgR), G__defined_typename("vector<dmtpc::core::Waveform*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("scopeConfigsPtr",1561,G__DmtpcCoreCint_644_0_3, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgR), G__defined_typename("vector<dmtpc::core::ScopeInfo*>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunNumber",1258,G__DmtpcCoreCint_644_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventNumber",1463,G__DmtpcCoreCint_644_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - evt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLocation",1157,G__DmtpcCoreCint_644_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'dmtpc::core::Location' - 0 - loc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerInfo",1452,G__DmtpcCoreCint_644_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'dmtpc::core::TriggerInfo' - 0 - tinfo", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeStamp",1248,G__DmtpcCoreCint_644_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTimeStamp' - 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorConfig",1756,G__DmtpcCoreCint_644_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'dmtpc::core::DetectorConfig' - 0 - config", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcCoreCint_644_0_10, 85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::core::WritableEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcCoreCint_644_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::WritableEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcCoreCint_644_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::core::WritableEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcCoreCint_644_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::core::WritableEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcCoreCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcCoreCint_644_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcCoreCint_644_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::WritableEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcCoreCint_644_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::WritableEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcCoreCint_644_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::core::WritableEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcCoreCint_644_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::core::WritableEvent::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("WritableEvent", 1340, G__DmtpcCoreCint_644_0_22, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("WritableEvent", 1340, G__DmtpcCoreCint_644_0_23, (int) ('i'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent), -1, 0, 1, 1, 1, 0, "u 'dmtpc::core::WritableEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~WritableEvent", 1466, G__DmtpcCoreCint_644_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcCoreCint_644_0_25, (int) ('u'), G__get_linked_tagnum(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent), -1, 1, 1, 1, 1, 0, "u 'dmtpc::core::WritableEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDmtpcCoreCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDmtpcCoreCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDmtpcCoreCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DmtpcCoreCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR = { "basic_istream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpc = { "dmtpc" , 110 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcore = { "dmtpc::core" , 110 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig = { "dmtpc::core::CameraConfig" , 115 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo = { "dmtpc::core::CameraInfo" , 115 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TChain = { "TChain" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLcommon = { "dmtpc::core::common" , 110 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig = { "dmtpc::core::Config" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType = { "dmtpc::core::Config::ConfigStoreType" , 101 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStore = { "dmtpc::core::Config::ConfigStore" , 115 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR = { "vector<const char*,allocator<const char*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const char*,allocator<const char*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TObjString = { "TObjString" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader = { "dmtpc::core::DatasetHeader" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent = { "dmtpc::core::Event" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage = { "dmtpc::core::Image" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset = { "dmtpc::core::Dataset" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR = { "vector<dmtpc::core::Image*,allocator<dmtpc::core::Image*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::core::Image*,allocator<dmtpc::core::Image*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR = { "vector<TH2*,allocator<TH2*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH2*,allocator<TH2*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig = { "dmtpc::core::DetectorConfig" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfigcLcLtype = { "dmtpc::core::DetectorConfig::type" , 101 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgR = { "vector<dmtpc::core::DetectorConfig::type,allocator<dmtpc::core::DetectorConfig::type> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::core::DetectorConfig::type,allocator<dmtpc::core::DetectorConfig::type> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform = { "dmtpc::core::Waveform" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo = { "dmtpc::core::ScopeInfo" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation = { "dmtpc::core::Location" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo = { "dmtpc::core::TriggerInfo" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgR = { "vector<dmtpc::core::Waveform*,allocator<dmtpc::core::Waveform*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::core::Waveform*,allocator<dmtpc::core::Waveform*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgR = { "vector<dmtpc::core::ScopeInfo*,allocator<dmtpc::core::ScopeInfo*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::core::ScopeInfo*,allocator<dmtpc::core::ScopeInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_iteratorlEinput_iterator_tagcOconstsPTH2mUcOlongcOconstsPTH2mUmUcOconstsPTH2mUaNgR = { "iterator<input_iterator_tag,const TH2*,long,const TH2**,const TH2*&>" , 115 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig = { "dmtpc::core::RunConfig" , 115 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig = { "dmtpc::core::ScopeChannelConfig" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig = { "dmtpc::core::ScopeConfig" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgR = { "vector<dmtpc::core::ScopeChannelConfig,allocator<dmtpc::core::ScopeChannelConfig> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::core::ScopeChannelConfig,allocator<dmtpc::core::ScopeChannelConfig> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo = { "dmtpc::core::ScopeChannelInfo" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo = { "dmtpc::core::ScopeTraceInfo" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgR = { "vector<dmtpc::core::ScopeChannelInfo,allocator<dmtpc::core::ScopeChannelInfo> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::core::ScopeChannelInfo,allocator<dmtpc::core::ScopeChannelInfo> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfocLcLreason = { "dmtpc::core::TriggerInfo::reason" , 101 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_listlETStringcOallocatorlETStringgRsPgR = { "list<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset = { "dmtpc::core::WritableDataset" , 99 , -1 };
G__linked_taginfo G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent = { "dmtpc::core::WritableEvent" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDmtpcCoreCint() {
  G__DmtpcCoreCintLN_TClass.tagnum = -1 ;
  G__DmtpcCoreCintLN_TBuffer.tagnum = -1 ;
  G__DmtpcCoreCintLN_TMemberInspector.tagnum = -1 ;
  G__DmtpcCoreCintLN_TObject.tagnum = -1 ;
  G__DmtpcCoreCintLN_TNamed.tagnum = -1 ;
  G__DmtpcCoreCintLN_TString.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_string.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpc.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcore.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo.tagnum = -1 ;
  G__DmtpcCoreCintLN_TChain.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLcommon.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStore.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_TObjString.tagnum = -1 ;
  G__DmtpcCoreCintLN_TTimeStamp.tagnum = -1 ;
  G__DmtpcCoreCintLN_TH2.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader.tagnum = -1 ;
  G__DmtpcCoreCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_TTree.tagnum = -1 ;
  G__DmtpcCoreCintLN_TFile.tagnum = -1 ;
  G__DmtpcCoreCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_TH1.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfigcLcLtype.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DmtpcCoreCintLN_TH1D.tagnum = -1 ;
  G__DmtpcCoreCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DmtpcCoreCintLN_TH2D.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_iteratorlEinput_iterator_tagcOconstsPTH2mUcOlongcOconstsPTH2mUmUcOconstsPTH2mUaNgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo.tagnum = -1 ;
  G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfocLcLreason.tagnum = -1 ;
  G__DmtpcCoreCintLN_listlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset.tagnum = -1 ;
  G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDmtpcCoreCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TNamed);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TString);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_basic_istreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_string);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpc),0,-1,0,(char*)NULL,G__setup_memvardmtpc,G__setup_memfuncdmtpc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcore),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLcore,G__setup_memfuncdmtpccLcLcore);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraConfig),sizeof(dmtpc::core::CameraConfig),-1,292096,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLCameraConfig,G__setup_memfuncdmtpccLcLcorecLcLCameraConfig);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLCameraInfo),sizeof(dmtpc::core::CameraInfo),-1,29952,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLCameraInfo,G__setup_memfuncdmtpccLcLcorecLcLCameraInfo);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TChain);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLcommon),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLcommon,G__setup_memfuncdmtpccLcLcorecLcLcommon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfig),sizeof(dmtpc::core::Config),-1,1024,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLConfig,G__setup_memfuncdmtpccLcLcorecLcLConfig);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStoreType);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLConfigcLcLConfigStore);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEconstsPcharmUcOallocatorlEconstsPcharmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TObjString);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TTimeStamp);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TH2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDatasetHeader),sizeof(dmtpc::core::DatasetHeader),-1,292096,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLDatasetHeader,G__setup_memfuncdmtpccLcLcorecLcLDatasetHeader);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TTree);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TFile);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TH1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLEvent),sizeof(dmtpc::core::Event),-1,292608,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLEvent,G__setup_memfuncdmtpccLcLcorecLcLEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLImage),sizeof(dmtpc::core::Image),-1,324864,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLImage,G__setup_memfuncdmtpccLcLcorecLcLImage);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDataset),sizeof(dmtpc::core::Dataset),-1,66816,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLDataset,G__setup_memfuncdmtpccLcLcorecLcLDataset);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfig),sizeof(dmtpc::core::DetectorConfig),-1,61696,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLDetectorConfig,G__setup_memfuncdmtpccLcLcorecLcLDetectorConfig);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLDetectorConfigcLcLtype);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypecOallocatorlEdmtpccLcLcorecLcLDetectorConfigcLcLtypegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_TH2D);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWaveform),sizeof(dmtpc::core::Waveform),-1,324864,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLWaveform,G__setup_memfuncdmtpccLcLcorecLcLWaveform);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeInfo),sizeof(dmtpc::core::ScopeInfo),-1,262144,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLScopeInfo,G__setup_memfuncdmtpccLcLcorecLcLScopeInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLLocation),sizeof(dmtpc::core::Location),-1,323840,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLLocation,G__setup_memfuncdmtpccLcLcorecLcLLocation);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfo),sizeof(dmtpc::core::TriggerInfo),-1,28928,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLTriggerInfo,G__setup_memfuncdmtpccLcLcorecLcLTriggerInfo);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLWaveformmUcOallocatorlEdmtpccLcLcorecLcLWaveformmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeInfomUcOallocatorlEdmtpccLcLcorecLcLScopeInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_iteratorlEinput_iterator_tagcOconstsPTH2mUcOlongcOconstsPTH2mUmUcOconstsPTH2mUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLRunConfig),sizeof(dmtpc::core::RunConfig),-1,292096,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLRunConfig,G__setup_memfuncdmtpccLcLcorecLcLRunConfig);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelConfig),sizeof(dmtpc::core::ScopeChannelConfig),-1,292096,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLScopeChannelConfig,G__setup_memfuncdmtpccLcLcorecLcLScopeChannelConfig);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeConfig),sizeof(dmtpc::core::ScopeConfig),-1,263424,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLScopeConfig,G__setup_memfuncdmtpccLcLcorecLcLScopeConfig);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelConfigcOallocatorlEdmtpccLcLcorecLcLScopeChannelConfiggRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeChannelInfo),sizeof(dmtpc::core::ScopeChannelInfo),-1,262144,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLScopeChannelInfo,G__setup_memfuncdmtpccLcLcorecLcLScopeChannelInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLScopeTraceInfo),sizeof(dmtpc::core::ScopeTraceInfo),-1,262144,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLScopeTraceInfo,G__setup_memfuncdmtpccLcLcorecLcLScopeTraceInfo);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_vectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLScopeChannelInfocOallocatorlEdmtpccLcLcorecLcLScopeChannelInfogRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLTriggerInfocLcLreason);
   G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_listlETStringcOallocatorlETStringgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableDataset),sizeof(dmtpc::core::WritableDataset),-1,99328,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLWritableDataset,G__setup_memfuncdmtpccLcLcorecLcLWritableDataset);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcCoreCintLN_dmtpccLcLcorecLcLWritableEvent),sizeof(dmtpc::core::WritableEvent),-1,290816,(char*)NULL,G__setup_memvardmtpccLcLcorecLcLWritableEvent,G__setup_memfuncdmtpccLcLcorecLcLWritableEvent);
}
extern "C" void G__cpp_setupDmtpcCoreCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupDmtpcCoreCint()");
  G__set_cpp_environmentDmtpcCoreCint();
  G__cpp_setup_tagtableDmtpcCoreCint();

  G__cpp_setup_inheritanceDmtpcCoreCint();

  G__cpp_setup_typetableDmtpcCoreCint();

  G__cpp_setup_memvarDmtpcCoreCint();

  G__cpp_setup_memfuncDmtpcCoreCint();
  G__cpp_setup_globalDmtpcCoreCint();
  G__cpp_setup_funcDmtpcCoreCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDmtpcCoreCint();
  return;
}
class G__cpp_setup_initDmtpcCoreCint {
  public:
    G__cpp_setup_initDmtpcCoreCint() { G__add_setup_func("DmtpcCoreCint",(G__incsetup)(&G__cpp_setupDmtpcCoreCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDmtpcCoreCint() { G__remove_setup_func("DmtpcCoreCint"); }
};
G__cpp_setup_initDmtpcCoreCint G__cpp_setup_initializerDmtpcCoreCint;

