//
// File generated by rootcint at Sat Jun 17 00:27:09 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME builddIDmtpcWaveformCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DmtpcWaveformCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace dmtpc {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpc_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc", 0 /*version*/, "./include/WaveformVector.hh", 13,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpc_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpc_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace dmtpc {
namespace waveform {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLwaveform_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::waveform", 0 /*version*/, "./include/WaveformVector.hh", 15,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLwaveform_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLwaveform_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLPulse_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLPulse(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLPulse(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLPulse(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLPulse(void *p);
   static void destruct_dmtpccLcLwaveformcLcLPulse(void *p);
   static void streamer_dmtpccLcLwaveformcLcLPulse(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::Pulse*)
   {
      ::dmtpc::waveform::Pulse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::Pulse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::Pulse", ::dmtpc::waveform::Pulse::Class_Version(), "./include/Pulse.hh", 14,
                  typeid(::dmtpc::waveform::Pulse), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::Pulse::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::Pulse) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLPulse);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLPulse);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLPulse);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLPulse);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLPulse);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLPulse);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::Pulse*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::Pulse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::Pulse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLCspPulse_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLCspPulse(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLCspPulse(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLCspPulse(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLCspPulse(void *p);
   static void destruct_dmtpccLcLwaveformcLcLCspPulse(void *p);
   static void streamer_dmtpccLcLwaveformcLcLCspPulse(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::CspPulse*)
   {
      ::dmtpc::waveform::CspPulse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::CspPulse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::CspPulse", ::dmtpc::waveform::CspPulse::Class_Version(), "./include/CspPulse.hh", 16,
                  typeid(::dmtpc::waveform::CspPulse), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::CspPulse::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::CspPulse) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLCspPulse);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLCspPulse);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLCspPulse);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLCspPulse);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLCspPulse);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLCspPulse);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::CspPulse*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::CspPulse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::CspPulse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLCspWaveform_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLCspWaveform(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLCspWaveform(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLCspWaveform(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLCspWaveform(void *p);
   static void destruct_dmtpccLcLwaveformcLcLCspWaveform(void *p);
   static void streamer_dmtpccLcLwaveformcLcLCspWaveform(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::CspWaveform*)
   {
      ::dmtpc::waveform::CspWaveform *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::CspWaveform >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::CspWaveform", ::dmtpc::waveform::CspWaveform::Class_Version(), "./include/CspWaveform.hh", 14,
                  typeid(::dmtpc::waveform::CspWaveform), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::CspWaveform::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::CspWaveform) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLCspWaveform);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLCspWaveform);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLCspWaveform);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLCspWaveform);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLCspWaveform);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLCspWaveform);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::CspWaveform*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::CspWaveform*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWaveform*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLCspWfVector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLCspWfVector(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLCspWfVector(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLCspWfVector(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLCspWfVector(void *p);
   static void destruct_dmtpccLcLwaveformcLcLCspWfVector(void *p);
   static void streamer_dmtpccLcLwaveformcLcLCspWfVector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::CspWfVector*)
   {
      ::dmtpc::waveform::CspWfVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::CspWfVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::CspWfVector", ::dmtpc::waveform::CspWfVector::Class_Version(), "./include/CspWfVector.hh", 19,
                  typeid(::dmtpc::waveform::CspWfVector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::CspWfVector::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::CspWfVector) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLCspWfVector);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLCspWfVector);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLCspWfVector);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLCspWfVector);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLCspWfVector);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLCspWfVector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::CspWfVector*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::CspWfVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWfVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLFastPulse_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLFastPulse(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLFastPulse(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLFastPulse(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLFastPulse(void *p);
   static void destruct_dmtpccLcLwaveformcLcLFastPulse(void *p);
   static void streamer_dmtpccLcLwaveformcLcLFastPulse(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::FastPulse*)
   {
      ::dmtpc::waveform::FastPulse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::FastPulse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::FastPulse", ::dmtpc::waveform::FastPulse::Class_Version(), "./include/FastPulse.hh", 19,
                  typeid(::dmtpc::waveform::FastPulse), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::FastPulse::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::FastPulse) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLFastPulse);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLFastPulse);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLFastPulse);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLFastPulse);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLFastPulse);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLFastPulse);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::FastPulse*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::FastPulse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::FastPulse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLFastWaveform_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLFastWaveform(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLFastWaveform(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLFastWaveform(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLFastWaveform(void *p);
   static void destruct_dmtpccLcLwaveformcLcLFastWaveform(void *p);
   static void streamer_dmtpccLcLwaveformcLcLFastWaveform(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::FastWaveform*)
   {
      ::dmtpc::waveform::FastWaveform *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::FastWaveform >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::FastWaveform", ::dmtpc::waveform::FastWaveform::Class_Version(), "./include/FastWaveform.hh", 15,
                  typeid(::dmtpc::waveform::FastWaveform), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::FastWaveform::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::FastWaveform) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLFastWaveform);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLFastWaveform);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLFastWaveform);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLFastWaveform);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLFastWaveform);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLFastWaveform);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::FastWaveform*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::FastWaveform*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWaveform*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLFastWfVector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLFastWfVector(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLFastWfVector(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLFastWfVector(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLFastWfVector(void *p);
   static void destruct_dmtpccLcLwaveformcLcLFastWfVector(void *p);
   static void streamer_dmtpccLcLwaveformcLcLFastWfVector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::FastWfVector*)
   {
      ::dmtpc::waveform::FastWfVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::FastWfVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::FastWfVector", ::dmtpc::waveform::FastWfVector::Class_Version(), "./include/FastWfVector.hh", 19,
                  typeid(::dmtpc::waveform::FastWfVector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::FastWfVector::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::FastWfVector) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLFastWfVector);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLFastWfVector);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLFastWfVector);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLFastWfVector);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLFastWfVector);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLFastWfVector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::FastWfVector*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::FastWfVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWfVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLFirFilterlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLwaveformcLcLFirFilterlEfloatgR_Dictionary();
   static void *new_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(void *p);
   static void destruct_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::FirFilter<float>*)
   {
      ::dmtpc::waveform::FirFilter<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::waveform::FirFilter<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::FirFilter<float>", "./include/FirFilter.hh", 83,
                  typeid(::dmtpc::waveform::FirFilter<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLwaveformcLcLFirFilterlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::FirFilter<float>) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLFirFilterlEfloatgR);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLFirFilterlEfloatgR);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLFirFilterlEfloatgR);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLFirFilterlEfloatgR);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLFirFilterlEfloatgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::FirFilter<float>*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::FirFilter<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::FirFilter<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLwaveformcLcLFirFilterlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FirFilter<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLFirFilterlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLwaveformcLcLFirFilterlEdoublegR_Dictionary();
   static void *new_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(void *p);
   static void destruct_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::FirFilter<double>*)
   {
      ::dmtpc::waveform::FirFilter<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::waveform::FirFilter<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::FirFilter<double>", "./include/FirFilter.hh", 83,
                  typeid(::dmtpc::waveform::FirFilter<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLwaveformcLcLFirFilterlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::FirFilter<double>) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLFirFilterlEdoublegR);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLFirFilterlEdoublegR);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLFirFilterlEdoublegR);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLFirFilterlEdoublegR);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLFirFilterlEdoublegR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::FirFilter<double>*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::FirFilter<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::FirFilter<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLwaveformcLcLFirFilterlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FirFilter<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace dmtpc {
namespace waveform {
namespace fir {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLwaveformcLcLfir_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::waveform::fir", 0 /*version*/, "./include/FirKernels.hh", 23,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLwaveformcLcLfir_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLwaveformcLcLfir_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}
}

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLFourierTransform_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLwaveformcLcLFourierTransform_Dictionary();
   static void delete_dmtpccLcLwaveformcLcLFourierTransform(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLFourierTransform(void *p);
   static void destruct_dmtpccLcLwaveformcLcLFourierTransform(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::FourierTransform*)
   {
      ::dmtpc::waveform::FourierTransform *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::waveform::FourierTransform),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::FourierTransform", "./include/FourierTransform.hh", 140,
                  typeid(::dmtpc::waveform::FourierTransform), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLwaveformcLcLFourierTransform_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::FourierTransform) );
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLFourierTransform);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLFourierTransform);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLFourierTransform);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::FourierTransform*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::FourierTransform*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::FourierTransform*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLwaveformcLcLFourierTransform_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FourierTransform*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLPMTPulse_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLPMTPulse(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLPMTPulse(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLPMTPulse(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLPMTPulse(void *p);
   static void destruct_dmtpccLcLwaveformcLcLPMTPulse(void *p);
   static void streamer_dmtpccLcLwaveformcLcLPMTPulse(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::PMTPulse*)
   {
      ::dmtpc::waveform::PMTPulse *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::PMTPulse >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::PMTPulse", ::dmtpc::waveform::PMTPulse::Class_Version(), "./include/PMTPulse.hh", 17,
                  typeid(::dmtpc::waveform::PMTPulse), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::PMTPulse::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::PMTPulse) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLPMTPulse);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLPMTPulse);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLPMTPulse);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLPMTPulse);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLPMTPulse);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLPMTPulse);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::PMTPulse*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::PMTPulse*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTPulse*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLPMTWaveform_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLPMTWaveform(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLPMTWaveform(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLPMTWaveform(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLPMTWaveform(void *p);
   static void destruct_dmtpccLcLwaveformcLcLPMTWaveform(void *p);
   static void streamer_dmtpccLcLwaveformcLcLPMTWaveform(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::PMTWaveform*)
   {
      ::dmtpc::waveform::PMTWaveform *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::PMTWaveform >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::PMTWaveform", ::dmtpc::waveform::PMTWaveform::Class_Version(), "./include/PMTWaveform.hh", 16,
                  typeid(::dmtpc::waveform::PMTWaveform), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::PMTWaveform::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::PMTWaveform) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLPMTWaveform);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLPMTWaveform);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLPMTWaveform);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLPMTWaveform);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLPMTWaveform);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLPMTWaveform);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::PMTWaveform*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::PMTWaveform*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWaveform*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLPMTWfVector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLPMTWfVector(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLPMTWfVector(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLPMTWfVector(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLPMTWfVector(void *p);
   static void destruct_dmtpccLcLwaveformcLcLPMTWfVector(void *p);
   static void streamer_dmtpccLcLwaveformcLcLPMTWfVector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::PMTWfVector*)
   {
      ::dmtpc::waveform::PMTWfVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::PMTWfVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::PMTWfVector", ::dmtpc::waveform::PMTWfVector::Class_Version(), "./include/PMTWfVector.hh", 23,
                  typeid(::dmtpc::waveform::PMTWfVector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::PMTWfVector::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::PMTWfVector) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLPMTWfVector);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLPMTWfVector);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLPMTWfVector);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLPMTWfVector);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLPMTWfVector);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLPMTWfVector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::PMTWfVector*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::PMTWfVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWfVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLSkimWaveform_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLSkimWaveform(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLSkimWaveform(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLSkimWaveform(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLSkimWaveform(void *p);
   static void destruct_dmtpccLcLwaveformcLcLSkimWaveform(void *p);
   static void streamer_dmtpccLcLwaveformcLcLSkimWaveform(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::SkimWaveform*)
   {
      ::dmtpc::waveform::SkimWaveform *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::SkimWaveform >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::SkimWaveform", ::dmtpc::waveform::SkimWaveform::Class_Version(), "./include/SkimWaveform.hh", 15,
                  typeid(::dmtpc::waveform::SkimWaveform), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::SkimWaveform::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::SkimWaveform) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLSkimWaveform);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLSkimWaveform);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLSkimWaveform);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLSkimWaveform);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLSkimWaveform);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLSkimWaveform);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::SkimWaveform*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::SkimWaveform*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::SkimWaveform*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace dmtpc {
namespace waveform {
namespace analysis {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLwaveformcLcLanalysis_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::waveform::analysis", 0 /*version*/, "./include/WaveformAnalysis.hh", 32,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLwaveformcLcLanalysis_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLwaveformcLcLanalysis_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}
}

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLIirFilterlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLwaveformcLcLIirFilterlEdoublegR_Dictionary();
   static void *new_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(void *p);
   static void destruct_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::IirFilter<double>*)
   {
      ::dmtpc::waveform::IirFilter<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::waveform::IirFilter<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::IirFilter<double>", "./include/IirFilter.hh", 44,
                  typeid(::dmtpc::waveform::IirFilter<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLwaveformcLcLIirFilterlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::IirFilter<double>) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLIirFilterlEdoublegR);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLIirFilterlEdoublegR);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLIirFilterlEdoublegR);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLIirFilterlEdoublegR);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLIirFilterlEdoublegR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::IirFilter<double>*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::IirFilter<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::IirFilter<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLwaveformcLcLIirFilterlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::IirFilter<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLWaveformVector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLwaveformcLcLWaveformVector(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLWaveformVector(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLWaveformVector(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLWaveformVector(void *p);
   static void destruct_dmtpccLcLwaveformcLcLWaveformVector(void *p);
   static void streamer_dmtpccLcLwaveformcLcLWaveformVector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::WaveformVector*)
   {
      ::dmtpc::waveform::WaveformVector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::waveform::WaveformVector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::WaveformVector", ::dmtpc::waveform::WaveformVector::Class_Version(), "./include/WaveformVector.hh", 19,
                  typeid(::dmtpc::waveform::WaveformVector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::waveform::WaveformVector::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::WaveformVector) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLWaveformVector);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLWaveformVector);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLWaveformVector);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLWaveformVector);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLWaveformVector);
      instance.SetStreamerFunc(&streamer_dmtpccLcLwaveformcLcLWaveformVector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::WaveformVector*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::WaveformVector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::WaveformVector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLIirFilterlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLwaveformcLcLIirFilterlEfloatgR_Dictionary();
   static void *new_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(void *p);
   static void destruct_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::IirFilter<float>*)
   {
      ::dmtpc::waveform::IirFilter<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::waveform::IirFilter<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::IirFilter<float>", "./include/IirFilter.hh", 44,
                  typeid(::dmtpc::waveform::IirFilter<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLwaveformcLcLIirFilterlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::IirFilter<float>) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLIirFilterlEfloatgR);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLIirFilterlEfloatgR);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLIirFilterlEfloatgR);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLIirFilterlEfloatgR);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLIirFilterlEfloatgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::IirFilter<float>*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::IirFilter<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::IirFilter<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLwaveformcLcLIirFilterlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::IirFilter<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR_Dictionary();
   static void *new_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void *p);
   static void destruct_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::RangeDomainFilter<double>*)
   {
      ::dmtpc::waveform::RangeDomainFilter<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::waveform::RangeDomainFilter<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::RangeDomainFilter<double>", "./include/RangeDomainFilter.hh", 20,
                  typeid(::dmtpc::waveform::RangeDomainFilter<double>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::RangeDomainFilter<double>) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::RangeDomainFilter<double>*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::RangeDomainFilter<double>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::RangeDomainFilter<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::RangeDomainFilter<double>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR_Dictionary();
   static void *new_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void *p = 0);
   static void *newArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(Long_t size, void *p);
   static void delete_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void *p);
   static void deleteArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void *p);
   static void destruct_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::waveform::RangeDomainFilter<float>*)
   {
      ::dmtpc::waveform::RangeDomainFilter<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::waveform::RangeDomainFilter<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::waveform::RangeDomainFilter<float>", "./include/RangeDomainFilter.hh", 20,
                  typeid(::dmtpc::waveform::RangeDomainFilter<float>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::waveform::RangeDomainFilter<float>) );
      instance.SetNew(&new_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR);
      instance.SetNewArray(&newArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR);
      instance.SetDelete(&delete_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR);
      instance.SetDestructor(&destruct_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::waveform::RangeDomainFilter<float>*)
   {
      return GenerateInitInstanceLocal((::dmtpc::waveform::RangeDomainFilter<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::waveform::RangeDomainFilter<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::RangeDomainFilter<float>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr Pulse::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Pulse::Class_Name()
{
   return "dmtpc::waveform::Pulse";
}

//______________________________________________________________________________
const char *Pulse::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::Pulse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Pulse::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::Pulse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Pulse::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::Pulse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Pulse::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::Pulse*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr CspPulse::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CspPulse::Class_Name()
{
   return "dmtpc::waveform::CspPulse";
}

//______________________________________________________________________________
const char *CspPulse::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspPulse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CspPulse::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspPulse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CspPulse::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspPulse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CspPulse::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspPulse*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr CspWaveform::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CspWaveform::Class_Name()
{
   return "dmtpc::waveform::CspWaveform";
}

//______________________________________________________________________________
const char *CspWaveform::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWaveform*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CspWaveform::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWaveform*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CspWaveform::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWaveform*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CspWaveform::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWaveform*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr CspWfVector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *CspWfVector::Class_Name()
{
   return "dmtpc::waveform::CspWfVector";
}

//______________________________________________________________________________
const char *CspWfVector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWfVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int CspWfVector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWfVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void CspWfVector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWfVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *CspWfVector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::CspWfVector*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr FastPulse::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FastPulse::Class_Name()
{
   return "dmtpc::waveform::FastPulse";
}

//______________________________________________________________________________
const char *FastPulse::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastPulse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FastPulse::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastPulse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FastPulse::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastPulse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FastPulse::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastPulse*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr FastWaveform::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FastWaveform::Class_Name()
{
   return "dmtpc::waveform::FastWaveform";
}

//______________________________________________________________________________
const char *FastWaveform::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWaveform*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FastWaveform::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWaveform*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FastWaveform::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWaveform*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FastWaveform::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWaveform*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr FastWfVector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *FastWfVector::Class_Name()
{
   return "dmtpc::waveform::FastWfVector";
}

//______________________________________________________________________________
const char *FastWfVector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWfVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int FastWfVector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWfVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void FastWfVector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWfVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *FastWfVector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::FastWfVector*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr PMTPulse::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMTPulse::Class_Name()
{
   return "dmtpc::waveform::PMTPulse";
}

//______________________________________________________________________________
const char *PMTPulse::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTPulse*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMTPulse::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTPulse*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMTPulse::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTPulse*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMTPulse::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTPulse*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr PMTWaveform::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMTWaveform::Class_Name()
{
   return "dmtpc::waveform::PMTWaveform";
}

//______________________________________________________________________________
const char *PMTWaveform::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWaveform*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMTWaveform::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWaveform*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMTWaveform::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWaveform*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMTWaveform::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWaveform*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr PMTWfVector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PMTWfVector::Class_Name()
{
   return "dmtpc::waveform::PMTWfVector";
}

//______________________________________________________________________________
const char *PMTWfVector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWfVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PMTWfVector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWfVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PMTWfVector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWfVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PMTWfVector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::PMTWfVector*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr SkimWaveform::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SkimWaveform::Class_Name()
{
   return "dmtpc::waveform::SkimWaveform";
}

//______________________________________________________________________________
const char *SkimWaveform::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::SkimWaveform*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SkimWaveform::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::SkimWaveform*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SkimWaveform::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::SkimWaveform*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SkimWaveform::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::SkimWaveform*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
atomic_TClass_ptr WaveformVector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *WaveformVector::Class_Name()
{
   return "dmtpc::waveform::WaveformVector";
}

//______________________________________________________________________________
const char *WaveformVector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::WaveformVector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int WaveformVector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::WaveformVector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void WaveformVector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::WaveformVector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *WaveformVector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::waveform::WaveformVector*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::FirFilter<float> : new ::dmtpc::waveform::FirFilter<float>;
   }
   static void *newArray_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::FirFilter<float>[nElements] : new ::dmtpc::waveform::FirFilter<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(void *p) {
      delete ((::dmtpc::waveform::FirFilter<float>*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(void *p) {
      delete [] ((::dmtpc::waveform::FirFilter<float>*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLFirFilterlEfloatgR(void *p) {
      typedef ::dmtpc::waveform::FirFilter<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::FirFilter<float>

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::FirFilter<double> : new ::dmtpc::waveform::FirFilter<double>;
   }
   static void *newArray_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::FirFilter<double>[nElements] : new ::dmtpc::waveform::FirFilter<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(void *p) {
      delete ((::dmtpc::waveform::FirFilter<double>*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(void *p) {
      delete [] ((::dmtpc::waveform::FirFilter<double>*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLFirFilterlEdoublegR(void *p) {
      typedef ::dmtpc::waveform::FirFilter<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::FirFilter<double>

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::IirFilter<float> : new ::dmtpc::waveform::IirFilter<float>;
   }
   static void *newArray_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::IirFilter<float>[nElements] : new ::dmtpc::waveform::IirFilter<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(void *p) {
      delete ((::dmtpc::waveform::IirFilter<float>*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(void *p) {
      delete [] ((::dmtpc::waveform::IirFilter<float>*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLIirFilterlEfloatgR(void *p) {
      typedef ::dmtpc::waveform::IirFilter<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::IirFilter<float>

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::IirFilter<double> : new ::dmtpc::waveform::IirFilter<double>;
   }
   static void *newArray_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::IirFilter<double>[nElements] : new ::dmtpc::waveform::IirFilter<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(void *p) {
      delete ((::dmtpc::waveform::IirFilter<double>*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(void *p) {
      delete [] ((::dmtpc::waveform::IirFilter<double>*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLIirFilterlEdoublegR(void *p) {
      typedef ::dmtpc::waveform::IirFilter<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::IirFilter<double>

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::RangeDomainFilter<double> : new ::dmtpc::waveform::RangeDomainFilter<double>;
   }
   static void *newArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::RangeDomainFilter<double>[nElements] : new ::dmtpc::waveform::RangeDomainFilter<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void *p) {
      delete ((::dmtpc::waveform::RangeDomainFilter<double>*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void *p) {
      delete [] ((::dmtpc::waveform::RangeDomainFilter<double>*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void *p) {
      typedef ::dmtpc::waveform::RangeDomainFilter<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::RangeDomainFilter<double>

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::RangeDomainFilter<float> : new ::dmtpc::waveform::RangeDomainFilter<float>;
   }
   static void *newArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::waveform::RangeDomainFilter<float>[nElements] : new ::dmtpc::waveform::RangeDomainFilter<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void *p) {
      delete ((::dmtpc::waveform::RangeDomainFilter<float>*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void *p) {
      delete [] ((::dmtpc::waveform::RangeDomainFilter<float>*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void *p) {
      typedef ::dmtpc::waveform::RangeDomainFilter<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::RangeDomainFilter<float>

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLFourierTransform(void *p) {
      delete ((::dmtpc::waveform::FourierTransform*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLFourierTransform(void *p) {
      delete [] ((::dmtpc::waveform::FourierTransform*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLFourierTransform(void *p) {
      typedef ::dmtpc::waveform::FourierTransform current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::FourierTransform

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void CspPulse::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::CspPulse.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::CspPulse thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::waveform::Pulse baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> R0;
      R__b >> R10;
      R__b >> R25;
      R__b >> R50;
      R__b >> R75;
      R__b >> R90;
      R__b >> F0;
      R__b >> F10;
      R__b >> F25;
      R__b >> F50;
      R__b >> F75;
      R__b >> F90;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::waveform::Pulse baseClass0;
      baseClass0::Streamer(R__b);
      R__b << R0;
      R__b << R10;
      R__b << R25;
      R__b << R50;
      R__b << R75;
      R__b << R90;
      R__b << F0;
      R__b << F10;
      R__b << F25;
      R__b << F50;
      R__b << F75;
      R__b << F90;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void CspPulse::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::CspPulse.
      TClass *R__cl = ::dmtpc::waveform::CspPulse::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R0", &R0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R10", &R10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R25", &R25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R50", &R50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R75", &R75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R90", &R90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F0", &F0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F10", &F10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F25", &F25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F50", &F50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F75", &F75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F90", &F90);
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::waveform::Pulse baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLCspPulse(void *p) {
      return  p ? new(p) ::dmtpc::waveform::CspPulse : new ::dmtpc::waveform::CspPulse;
   }
   static void *newArray_dmtpccLcLwaveformcLcLCspPulse(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::CspPulse[nElements] : new ::dmtpc::waveform::CspPulse[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLCspPulse(void *p) {
      delete ((::dmtpc::waveform::CspPulse*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLCspPulse(void *p) {
      delete [] ((::dmtpc::waveform::CspPulse*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLCspPulse(void *p) {
      typedef ::dmtpc::waveform::CspPulse current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLCspPulse(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::CspPulse*)obj)->::dmtpc::waveform::CspPulse::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::CspPulse

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void CspWaveform::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::CspWaveform.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::CspWaveform thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> N;
      {
         vector<CspPulse> &R__stl =  pulse;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dmtpc::waveform::CspPulse R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b >> secs;
      R__b >> nsecs;
      R__b >> base;
      R__b >> rms;
      R__b >> wfMax;
      R__b >> wfMaxTime;
      R__b >> wfMaxBin;
      R__b >> wfMin;
      R__b >> wfMinTime;
      R__b >> wfMinBin;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << N;
      {
         vector<CspPulse> &R__stl =  pulse;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<CspPulse>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((dmtpc::waveform::CspPulse&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b << secs;
      R__b << nsecs;
      R__b << base;
      R__b << rms;
      R__b << wfMax;
      R__b << wfMaxTime;
      R__b << wfMaxBin;
      R__b << wfMin;
      R__b << wfMinTime;
      R__b << wfMinBin;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void CspWaveform::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::CspWaveform.
      TClass *R__cl = ::dmtpc::waveform::CspWaveform::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulse", (void*)&pulse);
      R__insp.InspectMember("vector<CspPulse>", (void*)&pulse, "pulse.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "secs", &secs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nsecs", &nsecs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "base", &base);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rms", &rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMax", &wfMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMaxTime", &wfMaxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMaxBin", &wfMaxBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMin", &wfMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMinTime", &wfMinTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMinBin", &wfMinBin);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLCspWaveform(void *p) {
      return  p ? new(p) ::dmtpc::waveform::CspWaveform : new ::dmtpc::waveform::CspWaveform;
   }
   static void *newArray_dmtpccLcLwaveformcLcLCspWaveform(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::CspWaveform[nElements] : new ::dmtpc::waveform::CspWaveform[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLCspWaveform(void *p) {
      delete ((::dmtpc::waveform::CspWaveform*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLCspWaveform(void *p) {
      delete [] ((::dmtpc::waveform::CspWaveform*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLCspWaveform(void *p) {
      typedef ::dmtpc::waveform::CspWaveform current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLCspWaveform(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::CspWaveform*)obj)->::dmtpc::waveform::CspWaveform::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::CspWaveform

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void CspWfVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::CspWfVector.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::CspWfVector thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); name = R__str.Data(); }
      R__b >> boardID;
      R__b >> chanID;
      R__b >> N;
      {
         vector<CspWaveform> &R__stl =  wf;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dmtpc::waveform::CspWaveform R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      { TString R__str = name.c_str(); R__str.Streamer(R__b);}
      R__b << boardID;
      R__b << chanID;
      R__b << N;
      {
         vector<CspWaveform> &R__stl =  wf;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<CspWaveform>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((dmtpc::waveform::CspWaveform&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void CspWfVector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::CspWfVector.
      TClass *R__cl = ::dmtpc::waveform::CspWfVector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boardID", &boardID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chanID", &chanID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wf", (void*)&wf);
      R__insp.InspectMember("vector<CspWaveform>", (void*)&wf, "wf.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLCspWfVector(void *p) {
      return  p ? new(p) ::dmtpc::waveform::CspWfVector : new ::dmtpc::waveform::CspWfVector;
   }
   static void *newArray_dmtpccLcLwaveformcLcLCspWfVector(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::CspWfVector[nElements] : new ::dmtpc::waveform::CspWfVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLCspWfVector(void *p) {
      delete ((::dmtpc::waveform::CspWfVector*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLCspWfVector(void *p) {
      delete [] ((::dmtpc::waveform::CspWfVector*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLCspWfVector(void *p) {
      typedef ::dmtpc::waveform::CspWfVector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLCspWfVector(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::CspWfVector*)obj)->::dmtpc::waveform::CspWfVector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::CspWfVector

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void FastPulse::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::FastPulse.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::FastPulse thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::waveform::Pulse baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> fastPeak;
      R__b >> slowPeak;
      R__b >> fastPeakTime;
      R__b >> slowPeakTime;
      R__b >> fastPeakBin;
      R__b >> slowPeakBin;
      R__b >> troughHeight;
      R__b >> troughTime;
      R__b >> troughBin;
      R__b >> fR0;
      R__b >> fR10;
      R__b >> fR25;
      R__b >> fR50;
      R__b >> fR75;
      R__b >> fR90;
      R__b >> sF0;
      R__b >> sF10;
      R__b >> sF25;
      R__b >> sF50;
      R__b >> sF75;
      R__b >> sF90;
      R__b >> R0;
      R__b >> R10;
      R__b >> R25;
      R__b >> R50;
      R__b >> R75;
      R__b >> R90;
      R__b >> F0;
      R__b >> F10;
      R__b >> F25;
      R__b >> F50;
      R__b >> F75;
      R__b >> F90;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::waveform::Pulse baseClass0;
      baseClass0::Streamer(R__b);
      R__b << fastPeak;
      R__b << slowPeak;
      R__b << fastPeakTime;
      R__b << slowPeakTime;
      R__b << fastPeakBin;
      R__b << slowPeakBin;
      R__b << troughHeight;
      R__b << troughTime;
      R__b << troughBin;
      R__b << fR0;
      R__b << fR10;
      R__b << fR25;
      R__b << fR50;
      R__b << fR75;
      R__b << fR90;
      R__b << sF0;
      R__b << sF10;
      R__b << sF25;
      R__b << sF50;
      R__b << sF75;
      R__b << sF90;
      R__b << R0;
      R__b << R10;
      R__b << R25;
      R__b << R50;
      R__b << R75;
      R__b << R90;
      R__b << F0;
      R__b << F10;
      R__b << F25;
      R__b << F50;
      R__b << F75;
      R__b << F90;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void FastPulse::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::FastPulse.
      TClass *R__cl = ::dmtpc::waveform::FastPulse::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fastPeak", &fastPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slowPeak", &slowPeak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fastPeakTime", &fastPeakTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slowPeakTime", &slowPeakTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fastPeakBin", &fastPeakBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slowPeakBin", &slowPeakBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "troughHeight", &troughHeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "troughTime", &troughTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "troughBin", &troughBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR0", &fR0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR10", &fR10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR25", &fR25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR50", &fR50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR75", &fR75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR90", &fR90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sF0", &sF0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sF10", &sF10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sF25", &sF25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sF50", &sF50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sF75", &sF75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sF90", &sF90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R0", &R0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R10", &R10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R25", &R25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R50", &R50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R75", &R75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R90", &R90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F0", &F0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F10", &F10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F25", &F25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F50", &F50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F75", &F75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F90", &F90);
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::waveform::Pulse baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLFastPulse(void *p) {
      return  p ? new(p) ::dmtpc::waveform::FastPulse : new ::dmtpc::waveform::FastPulse;
   }
   static void *newArray_dmtpccLcLwaveformcLcLFastPulse(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::FastPulse[nElements] : new ::dmtpc::waveform::FastPulse[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLFastPulse(void *p) {
      delete ((::dmtpc::waveform::FastPulse*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLFastPulse(void *p) {
      delete [] ((::dmtpc::waveform::FastPulse*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLFastPulse(void *p) {
      typedef ::dmtpc::waveform::FastPulse current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLFastPulse(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::FastPulse*)obj)->::dmtpc::waveform::FastPulse::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::FastPulse

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void FastWaveform::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::FastWaveform.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::FastWaveform thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> N;
      {
         vector<FastPulse> &R__stl =  pulse;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dmtpc::waveform::FastPulse R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b >> secs;
      R__b >> nsecs;
      R__b >> base;
      R__b >> rms;
      R__b >> wfMax;
      R__b >> wfMaxTime;
      R__b >> wfMaxBin;
      R__b >> wfMin;
      R__b >> wfMinTime;
      R__b >> wfMinBin;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << N;
      {
         vector<FastPulse> &R__stl =  pulse;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<FastPulse>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((dmtpc::waveform::FastPulse&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b << secs;
      R__b << nsecs;
      R__b << base;
      R__b << rms;
      R__b << wfMax;
      R__b << wfMaxTime;
      R__b << wfMaxBin;
      R__b << wfMin;
      R__b << wfMinTime;
      R__b << wfMinBin;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void FastWaveform::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::FastWaveform.
      TClass *R__cl = ::dmtpc::waveform::FastWaveform::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulse", (void*)&pulse);
      R__insp.InspectMember("vector<FastPulse>", (void*)&pulse, "pulse.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "secs", &secs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nsecs", &nsecs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "base", &base);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rms", &rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMax", &wfMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMaxTime", &wfMaxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMaxBin", &wfMaxBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMin", &wfMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMinTime", &wfMinTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMinBin", &wfMinBin);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLFastWaveform(void *p) {
      return  p ? new(p) ::dmtpc::waveform::FastWaveform : new ::dmtpc::waveform::FastWaveform;
   }
   static void *newArray_dmtpccLcLwaveformcLcLFastWaveform(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::FastWaveform[nElements] : new ::dmtpc::waveform::FastWaveform[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLFastWaveform(void *p) {
      delete ((::dmtpc::waveform::FastWaveform*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLFastWaveform(void *p) {
      delete [] ((::dmtpc::waveform::FastWaveform*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLFastWaveform(void *p) {
      typedef ::dmtpc::waveform::FastWaveform current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLFastWaveform(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::FastWaveform*)obj)->::dmtpc::waveform::FastWaveform::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::FastWaveform

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void FastWfVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::FastWfVector.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::FastWfVector thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); name = R__str.Data(); }
      R__b >> boardID;
      R__b >> chanID;
      R__b >> N;
      {
         vector<FastWaveform> &R__stl =  wf;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dmtpc::waveform::FastWaveform R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      { TString R__str = name.c_str(); R__str.Streamer(R__b);}
      R__b << boardID;
      R__b << chanID;
      R__b << N;
      {
         vector<FastWaveform> &R__stl =  wf;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<FastWaveform>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((dmtpc::waveform::FastWaveform&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void FastWfVector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::FastWfVector.
      TClass *R__cl = ::dmtpc::waveform::FastWfVector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boardID", &boardID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chanID", &chanID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wf", (void*)&wf);
      R__insp.InspectMember("vector<FastWaveform>", (void*)&wf, "wf.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLFastWfVector(void *p) {
      return  p ? new(p) ::dmtpc::waveform::FastWfVector : new ::dmtpc::waveform::FastWfVector;
   }
   static void *newArray_dmtpccLcLwaveformcLcLFastWfVector(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::FastWfVector[nElements] : new ::dmtpc::waveform::FastWfVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLFastWfVector(void *p) {
      delete ((::dmtpc::waveform::FastWfVector*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLFastWfVector(void *p) {
      delete [] ((::dmtpc::waveform::FastWfVector*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLFastWfVector(void *p) {
      typedef ::dmtpc::waveform::FastWfVector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLFastWfVector(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::FastWfVector*)obj)->::dmtpc::waveform::FastWfVector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::FastWfVector

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void PMTPulse::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::PMTPulse.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::PMTPulse thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::waveform::Pulse baseClass0;
      baseClass0::Streamer(R__b);
      R__b >> R0;
      R__b >> R10;
      R__b >> R25;
      R__b >> R50;
      R__b >> R75;
      R__b >> R90;
      R__b >> F0;
      R__b >> F10;
      R__b >> F25;
      R__b >> F50;
      R__b >> F75;
      R__b >> F90;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::waveform::Pulse baseClass0;
      baseClass0::Streamer(R__b);
      R__b << R0;
      R__b << R10;
      R__b << R25;
      R__b << R50;
      R__b << R75;
      R__b << R90;
      R__b << F0;
      R__b << F10;
      R__b << F25;
      R__b << F50;
      R__b << F75;
      R__b << F90;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void PMTPulse::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::PMTPulse.
      TClass *R__cl = ::dmtpc::waveform::PMTPulse::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R0", &R0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R10", &R10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R25", &R25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R50", &R50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R75", &R75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R90", &R90);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F0", &F0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F10", &F10);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F25", &F25);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F50", &F50);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F75", &F75);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "F90", &F90);
      //This works around a msvc bug and should be harmless on other platforms
      typedef dmtpc::waveform::Pulse baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLPMTPulse(void *p) {
      return  p ? new(p) ::dmtpc::waveform::PMTPulse : new ::dmtpc::waveform::PMTPulse;
   }
   static void *newArray_dmtpccLcLwaveformcLcLPMTPulse(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::PMTPulse[nElements] : new ::dmtpc::waveform::PMTPulse[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLPMTPulse(void *p) {
      delete ((::dmtpc::waveform::PMTPulse*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLPMTPulse(void *p) {
      delete [] ((::dmtpc::waveform::PMTPulse*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLPMTPulse(void *p) {
      typedef ::dmtpc::waveform::PMTPulse current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLPMTPulse(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::PMTPulse*)obj)->::dmtpc::waveform::PMTPulse::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::PMTPulse

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void PMTWaveform::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::PMTWaveform.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::PMTWaveform thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> N;
      {
         vector<PMTPulse> &R__stl =  pulse;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dmtpc::waveform::PMTPulse R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b >> secs;
      R__b >> nsecs;
      R__b >> base;
      R__b >> rms;
      R__b >> wfMax;
      R__b >> wfMaxTime;
      R__b >> wfMaxBin;
      R__b >> wfMin;
      R__b >> wfMinTime;
      R__b >> wfMinBin;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << N;
      {
         vector<PMTPulse> &R__stl =  pulse;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<PMTPulse>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((dmtpc::waveform::PMTPulse&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b << secs;
      R__b << nsecs;
      R__b << base;
      R__b << rms;
      R__b << wfMax;
      R__b << wfMaxTime;
      R__b << wfMaxBin;
      R__b << wfMin;
      R__b << wfMinTime;
      R__b << wfMinBin;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void PMTWaveform::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::PMTWaveform.
      TClass *R__cl = ::dmtpc::waveform::PMTWaveform::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulse", (void*)&pulse);
      R__insp.InspectMember("vector<PMTPulse>", (void*)&pulse, "pulse.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "secs", &secs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nsecs", &nsecs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "base", &base);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rms", &rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMax", &wfMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMaxTime", &wfMaxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMaxBin", &wfMaxBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMin", &wfMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMinTime", &wfMinTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMinBin", &wfMinBin);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLPMTWaveform(void *p) {
      return  p ? new(p) ::dmtpc::waveform::PMTWaveform : new ::dmtpc::waveform::PMTWaveform;
   }
   static void *newArray_dmtpccLcLwaveformcLcLPMTWaveform(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::PMTWaveform[nElements] : new ::dmtpc::waveform::PMTWaveform[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLPMTWaveform(void *p) {
      delete ((::dmtpc::waveform::PMTWaveform*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLPMTWaveform(void *p) {
      delete [] ((::dmtpc::waveform::PMTWaveform*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLPMTWaveform(void *p) {
      typedef ::dmtpc::waveform::PMTWaveform current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLPMTWaveform(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::PMTWaveform*)obj)->::dmtpc::waveform::PMTWaveform::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::PMTWaveform

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void PMTWfVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::PMTWfVector.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::PMTWfVector thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); name = R__str.Data(); }
      R__b >> boardID;
      R__b >> chanID;
      R__b >> N;
      {
         vector<PMTWaveform> &R__stl =  wf;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dmtpc::waveform::PMTWaveform R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      { TString R__str = name.c_str(); R__str.Streamer(R__b);}
      R__b << boardID;
      R__b << chanID;
      R__b << N;
      {
         vector<PMTWaveform> &R__stl =  wf;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<PMTWaveform>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((dmtpc::waveform::PMTWaveform&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void PMTWfVector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::PMTWfVector.
      TClass *R__cl = ::dmtpc::waveform::PMTWfVector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boardID", &boardID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chanID", &chanID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wf", (void*)&wf);
      R__insp.InspectMember("vector<PMTWaveform>", (void*)&wf, "wf.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLPMTWfVector(void *p) {
      return  p ? new(p) ::dmtpc::waveform::PMTWfVector : new ::dmtpc::waveform::PMTWfVector;
   }
   static void *newArray_dmtpccLcLwaveformcLcLPMTWfVector(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::PMTWfVector[nElements] : new ::dmtpc::waveform::PMTWfVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLPMTWfVector(void *p) {
      delete ((::dmtpc::waveform::PMTWfVector*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLPMTWfVector(void *p) {
      delete [] ((::dmtpc::waveform::PMTWfVector*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLPMTWfVector(void *p) {
      typedef ::dmtpc::waveform::PMTWfVector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLPMTWfVector(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::PMTWfVector*)obj)->::dmtpc::waveform::PMTWfVector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::PMTWfVector

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void Pulse::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::Pulse.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::Pulse thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> init;
      R__b >> nbin;
      R__b >> peak;
      R__b >> peakTime;
      R__b >> startTime;
      R__b >> startBin;
      R__b >> endTime;
      R__b >> endBin;
      R__b >> integral;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << init;
      R__b << nbin;
      R__b << peak;
      R__b << peakTime;
      R__b << startTime;
      R__b << startBin;
      R__b << endTime;
      R__b << endBin;
      R__b << integral;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void Pulse::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::Pulse.
      TClass *R__cl = ::dmtpc::waveform::Pulse::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "init", &init);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nbin", &nbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "peak", &peak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "peakTime", &peakTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startTime", &startTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startBin", &startBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endTime", &endTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endBin", &endBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "integral", &integral);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLPulse(void *p) {
      return  p ? new(p) ::dmtpc::waveform::Pulse : new ::dmtpc::waveform::Pulse;
   }
   static void *newArray_dmtpccLcLwaveformcLcLPulse(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::Pulse[nElements] : new ::dmtpc::waveform::Pulse[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLPulse(void *p) {
      delete ((::dmtpc::waveform::Pulse*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLPulse(void *p) {
      delete [] ((::dmtpc::waveform::Pulse*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLPulse(void *p) {
      typedef ::dmtpc::waveform::Pulse current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLPulse(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::Pulse*)obj)->::dmtpc::waveform::Pulse::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::Pulse

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void SkimWaveform::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::SkimWaveform.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::SkimWaveform thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> N;
      {
         vector<Pulse> &R__stl =  pulse;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dmtpc::waveform::Pulse R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b >> base;
      R__b >> rms;
      R__b >> time;
      R__b >> wfMin;
      R__b >> wfMinTime;
      R__b >> wfMinBin;
      R__b >> wfMax;
      R__b >> wfMaxTime;
      R__b >> wfMaxBin;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << N;
      {
         vector<Pulse> &R__stl =  pulse;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Pulse>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((dmtpc::waveform::Pulse&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b << base;
      R__b << rms;
      R__b << time;
      R__b << wfMin;
      R__b << wfMinTime;
      R__b << wfMinBin;
      R__b << wfMax;
      R__b << wfMaxTime;
      R__b << wfMaxBin;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void SkimWaveform::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::SkimWaveform.
      TClass *R__cl = ::dmtpc::waveform::SkimWaveform::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pulse", (void*)&pulse);
      R__insp.InspectMember("vector<Pulse>", (void*)&pulse, "pulse.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "base", &base);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rms", &rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "time", &time);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMin", &wfMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMinTime", &wfMinTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMinBin", &wfMinBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMax", &wfMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMaxTime", &wfMaxTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wfMaxBin", &wfMaxBin);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLSkimWaveform(void *p) {
      return  p ? new(p) ::dmtpc::waveform::SkimWaveform : new ::dmtpc::waveform::SkimWaveform;
   }
   static void *newArray_dmtpccLcLwaveformcLcLSkimWaveform(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::SkimWaveform[nElements] : new ::dmtpc::waveform::SkimWaveform[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLSkimWaveform(void *p) {
      delete ((::dmtpc::waveform::SkimWaveform*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLSkimWaveform(void *p) {
      delete [] ((::dmtpc::waveform::SkimWaveform*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLSkimWaveform(void *p) {
      typedef ::dmtpc::waveform::SkimWaveform current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLSkimWaveform(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::SkimWaveform*)obj)->::dmtpc::waveform::SkimWaveform::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::SkimWaveform

      namespace dmtpc {
         namespace waveform {
//______________________________________________________________________________
void WaveformVector::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::waveform::WaveformVector.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::waveform::WaveformVector thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      { TString R__str; R__str.Streamer(R__b); name = R__str.Data(); }
      R__b >> boardID;
      R__b >> chanID;
      R__b >> N;
      {
         vector<SkimWaveform> &R__stl =  wf;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            dmtpc::waveform::SkimWaveform R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      { TString R__str = name.c_str(); R__str.Streamer(R__b);}
      R__b << boardID;
      R__b << chanID;
      R__b << N;
      {
         vector<SkimWaveform> &R__stl =  wf;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<SkimWaveform>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((dmtpc::waveform::SkimWaveform&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
//______________________________________________________________________________
      namespace dmtpc {
         namespace waveform {
void WaveformVector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::waveform::WaveformVector.
      TClass *R__cl = ::dmtpc::waveform::WaveformVector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "boardID", &boardID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chanID", &chanID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "N", &N);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wf", (void*)&wf);
      R__insp.InspectMember("vector<SkimWaveform>", (void*)&wf, "wf.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::waveform
} // namespace dmtpc::waveform
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLwaveformcLcLWaveformVector(void *p) {
      return  p ? new(p) ::dmtpc::waveform::WaveformVector : new ::dmtpc::waveform::WaveformVector;
   }
   static void *newArray_dmtpccLcLwaveformcLcLWaveformVector(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::waveform::WaveformVector[nElements] : new ::dmtpc::waveform::WaveformVector[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLwaveformcLcLWaveformVector(void *p) {
      delete ((::dmtpc::waveform::WaveformVector*)p);
   }
   static void deleteArray_dmtpccLcLwaveformcLcLWaveformVector(void *p) {
      delete [] ((::dmtpc::waveform::WaveformVector*)p);
   }
   static void destruct_dmtpccLcLwaveformcLcLWaveformVector(void *p) {
      typedef ::dmtpc::waveform::WaveformVector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLwaveformcLcLWaveformVector(TBuffer &buf, void *obj) {
      ((::dmtpc::waveform::WaveformVector*)obj)->::dmtpc::waveform::WaveformVector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::waveform::WaveformVector

namespace ROOTDict {
   void vectorlEdmtpccLcLwaveformcLcLCspPulsegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLwaveformcLcLCspPulsegR_Dictionary();
   static void *new_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(void *p);
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(void *p);
   static void destruct_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::waveform::CspPulse>*)
   {
      vector<dmtpc::waveform::CspPulse> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::waveform::CspPulse>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::waveform::CspPulse>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::waveform::CspPulse>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLwaveformcLcLCspPulsegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::waveform::CspPulse>) );
      instance.SetNew(&new_vectorlEdmtpccLcLwaveformcLcLCspPulsegR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLwaveformcLcLCspPulsegR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLwaveformcLcLCspPulsegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLwaveformcLcLCspPulsegR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLwaveformcLcLCspPulsegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::waveform::CspPulse> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::waveform::CspPulse>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLwaveformcLcLCspPulsegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::waveform::CspPulse>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::CspPulse> : new vector<dmtpc::waveform::CspPulse>;
   }
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::CspPulse>[nElements] : new vector<dmtpc::waveform::CspPulse>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(void *p) {
      delete ((vector<dmtpc::waveform::CspPulse>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(void *p) {
      delete [] ((vector<dmtpc::waveform::CspPulse>*)p);
   }
   static void destruct_vectorlEdmtpccLcLwaveformcLcLCspPulsegR(void *p) {
      typedef vector<dmtpc::waveform::CspPulse> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::waveform::CspPulse>

namespace ROOTDict {
   void vectorlEdmtpccLcLwaveformcLcLCspWaveformgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLwaveformcLcLCspWaveformgR_Dictionary();
   static void *new_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(void *p);
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(void *p);
   static void destruct_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::waveform::CspWaveform>*)
   {
      vector<dmtpc::waveform::CspWaveform> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::waveform::CspWaveform>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::waveform::CspWaveform>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::waveform::CspWaveform>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLwaveformcLcLCspWaveformgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::waveform::CspWaveform>) );
      instance.SetNew(&new_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::waveform::CspWaveform> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::waveform::CspWaveform>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLwaveformcLcLCspWaveformgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::waveform::CspWaveform>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::CspWaveform> : new vector<dmtpc::waveform::CspWaveform>;
   }
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::CspWaveform>[nElements] : new vector<dmtpc::waveform::CspWaveform>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(void *p) {
      delete ((vector<dmtpc::waveform::CspWaveform>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(void *p) {
      delete [] ((vector<dmtpc::waveform::CspWaveform>*)p);
   }
   static void destruct_vectorlEdmtpccLcLwaveformcLcLCspWaveformgR(void *p) {
      typedef vector<dmtpc::waveform::CspWaveform> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::waveform::CspWaveform>

namespace ROOTDict {
   void vectorlEdmtpccLcLwaveformcLcLFastPulsegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLwaveformcLcLFastPulsegR_Dictionary();
   static void *new_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(void *p);
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(void *p);
   static void destruct_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::waveform::FastPulse>*)
   {
      vector<dmtpc::waveform::FastPulse> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::waveform::FastPulse>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::waveform::FastPulse>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::waveform::FastPulse>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLwaveformcLcLFastPulsegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::waveform::FastPulse>) );
      instance.SetNew(&new_vectorlEdmtpccLcLwaveformcLcLFastPulsegR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLwaveformcLcLFastPulsegR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLwaveformcLcLFastPulsegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLwaveformcLcLFastPulsegR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLwaveformcLcLFastPulsegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::waveform::FastPulse> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::waveform::FastPulse>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLwaveformcLcLFastPulsegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::waveform::FastPulse>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::FastPulse> : new vector<dmtpc::waveform::FastPulse>;
   }
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::FastPulse>[nElements] : new vector<dmtpc::waveform::FastPulse>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(void *p) {
      delete ((vector<dmtpc::waveform::FastPulse>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(void *p) {
      delete [] ((vector<dmtpc::waveform::FastPulse>*)p);
   }
   static void destruct_vectorlEdmtpccLcLwaveformcLcLFastPulsegR(void *p) {
      typedef vector<dmtpc::waveform::FastPulse> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::waveform::FastPulse>

namespace ROOTDict {
   void vectorlEdmtpccLcLwaveformcLcLFastWaveformgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLwaveformcLcLFastWaveformgR_Dictionary();
   static void *new_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(void *p);
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(void *p);
   static void destruct_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::waveform::FastWaveform>*)
   {
      vector<dmtpc::waveform::FastWaveform> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::waveform::FastWaveform>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::waveform::FastWaveform>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::waveform::FastWaveform>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLwaveformcLcLFastWaveformgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::waveform::FastWaveform>) );
      instance.SetNew(&new_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::waveform::FastWaveform> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::waveform::FastWaveform>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLwaveformcLcLFastWaveformgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::waveform::FastWaveform>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::FastWaveform> : new vector<dmtpc::waveform::FastWaveform>;
   }
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::FastWaveform>[nElements] : new vector<dmtpc::waveform::FastWaveform>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(void *p) {
      delete ((vector<dmtpc::waveform::FastWaveform>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(void *p) {
      delete [] ((vector<dmtpc::waveform::FastWaveform>*)p);
   }
   static void destruct_vectorlEdmtpccLcLwaveformcLcLFastWaveformgR(void *p) {
      typedef vector<dmtpc::waveform::FastWaveform> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::waveform::FastWaveform>

namespace ROOTDict {
   void vectorlEdmtpccLcLwaveformcLcLPMTPulsegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLwaveformcLcLPMTPulsegR_Dictionary();
   static void *new_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(void *p);
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(void *p);
   static void destruct_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::waveform::PMTPulse>*)
   {
      vector<dmtpc::waveform::PMTPulse> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::waveform::PMTPulse>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::waveform::PMTPulse>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::waveform::PMTPulse>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLwaveformcLcLPMTPulsegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::waveform::PMTPulse>) );
      instance.SetNew(&new_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::waveform::PMTPulse> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::waveform::PMTPulse>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLwaveformcLcLPMTPulsegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::waveform::PMTPulse>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::PMTPulse> : new vector<dmtpc::waveform::PMTPulse>;
   }
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::PMTPulse>[nElements] : new vector<dmtpc::waveform::PMTPulse>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(void *p) {
      delete ((vector<dmtpc::waveform::PMTPulse>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(void *p) {
      delete [] ((vector<dmtpc::waveform::PMTPulse>*)p);
   }
   static void destruct_vectorlEdmtpccLcLwaveformcLcLPMTPulsegR(void *p) {
      typedef vector<dmtpc::waveform::PMTPulse> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::waveform::PMTPulse>

namespace ROOTDict {
   void vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR_Dictionary();
   static void *new_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(void *p);
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(void *p);
   static void destruct_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::waveform::PMTWaveform>*)
   {
      vector<dmtpc::waveform::PMTWaveform> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::waveform::PMTWaveform>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::waveform::PMTWaveform>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::waveform::PMTWaveform>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::waveform::PMTWaveform>) );
      instance.SetNew(&new_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::waveform::PMTWaveform> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::waveform::PMTWaveform>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::waveform::PMTWaveform>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::PMTWaveform> : new vector<dmtpc::waveform::PMTWaveform>;
   }
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::PMTWaveform>[nElements] : new vector<dmtpc::waveform::PMTWaveform>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(void *p) {
      delete ((vector<dmtpc::waveform::PMTWaveform>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(void *p) {
      delete [] ((vector<dmtpc::waveform::PMTWaveform>*)p);
   }
   static void destruct_vectorlEdmtpccLcLwaveformcLcLPMTWaveformgR(void *p) {
      typedef vector<dmtpc::waveform::PMTWaveform> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::waveform::PMTWaveform>

namespace ROOTDict {
   void vectorlEdmtpccLcLwaveformcLcLPulsegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLwaveformcLcLPulsegR_Dictionary();
   static void *new_vectorlEdmtpccLcLwaveformcLcLPulsegR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLPulsegR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLwaveformcLcLPulsegR(void *p);
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLPulsegR(void *p);
   static void destruct_vectorlEdmtpccLcLwaveformcLcLPulsegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::waveform::Pulse>*)
   {
      vector<dmtpc::waveform::Pulse> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::waveform::Pulse>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::waveform::Pulse>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::waveform::Pulse>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLwaveformcLcLPulsegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::waveform::Pulse>) );
      instance.SetNew(&new_vectorlEdmtpccLcLwaveformcLcLPulsegR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLwaveformcLcLPulsegR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLwaveformcLcLPulsegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLwaveformcLcLPulsegR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLwaveformcLcLPulsegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::waveform::Pulse> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::waveform::Pulse>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLwaveformcLcLPulsegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::waveform::Pulse>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLwaveformcLcLPulsegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::Pulse> : new vector<dmtpc::waveform::Pulse>;
   }
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLPulsegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::Pulse>[nElements] : new vector<dmtpc::waveform::Pulse>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLwaveformcLcLPulsegR(void *p) {
      delete ((vector<dmtpc::waveform::Pulse>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLPulsegR(void *p) {
      delete [] ((vector<dmtpc::waveform::Pulse>*)p);
   }
   static void destruct_vectorlEdmtpccLcLwaveformcLcLPulsegR(void *p) {
      typedef vector<dmtpc::waveform::Pulse> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::waveform::Pulse>

namespace ROOTDict {
   void vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR_Dictionary();
   static void *new_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(void *p);
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(void *p);
   static void destruct_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::waveform::SkimWaveform>*)
   {
      vector<dmtpc::waveform::SkimWaveform> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::waveform::SkimWaveform>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::waveform::SkimWaveform>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::waveform::SkimWaveform>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::waveform::SkimWaveform>) );
      instance.SetNew(&new_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::waveform::SkimWaveform> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::waveform::SkimWaveform>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::waveform::SkimWaveform>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::SkimWaveform> : new vector<dmtpc::waveform::SkimWaveform>;
   }
   static void *newArray_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::waveform::SkimWaveform>[nElements] : new vector<dmtpc::waveform::SkimWaveform>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(void *p) {
      delete ((vector<dmtpc::waveform::SkimWaveform>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(void *p) {
      delete [] ((vector<dmtpc::waveform::SkimWaveform>*)p);
   }
   static void destruct_vectorlEdmtpccLcLwaveformcLcLSkimWaveformgR(void *p) {
      typedef vector<dmtpc::waveform::SkimWaveform> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::waveform::SkimWaveform>

/********************************************************
* build/DmtpcWaveformCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDmtpcWaveformCint();

extern "C" void G__set_cpp_environmentDmtpcWaveformCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/CspPulse.hh");
  G__add_compiledheader("include/CspWaveform.hh");
  G__add_compiledheader("include/CspWfVector.hh");
  G__add_compiledheader("include/FastPulse.hh");
  G__add_compiledheader("include/FastWaveform.hh");
  G__add_compiledheader("include/FastWfVector.hh");
  G__add_compiledheader("include/FirFilter.hh");
  G__add_compiledheader("include/FirKernels.hh");
  G__add_compiledheader("include/FourierTransform.hh");
  G__add_compiledheader("include/IirFilter.hh");
  G__add_compiledheader("include/PMTPulse.hh");
  G__add_compiledheader("include/PMTWaveform.hh");
  G__add_compiledheader("include/PMTWfVector.hh");
  G__add_compiledheader("include/Pulse.hh");
  G__add_compiledheader("include/RangeDomainFilter.hh");
  G__add_compiledheader("include/SkimWaveform.hh");
  G__add_compiledheader("include/WaveformAnalysis.hh");
  G__add_compiledheader("include/WaveformProcessing.hh");
  G__add_compiledheader("include/WaveformVector.hh");
  G__cpp_reset_tagtableDmtpcWaveformCint();
}
#include <new>
extern "C" int G__cpp_dllrevDmtpcWaveformCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* dmtpc */

/* dmtpc::waveform */
static int G__DmtpcWaveformCint_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) dmtpc::waveform::medianFilter((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) dmtpc::waveform::medianFilter((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) dmtpc::waveform::integral((TH1*) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) dmtpc::waveform::integral((TH1*) G__int(libp->para[0]), (bool) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) dmtpc::waveform::integral((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) dmtpc::waveform::IIRFilter((TH1*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (TH1*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) dmtpc::waveform::IIRFilter((TH1*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double*) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::FIRFilter((TH1*) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (TH1*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::waveform::butterworthBandStop((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double**) G__int(libp->para[3])
, (double**) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::waveform::butterworthBandPass((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double**) G__int(libp->para[3])
, (double**) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::createFirOutputHist((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::createFirOutputHist((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::runFirFilter((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (dmtpc::waveform::FirFilter<double>*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::createIirOutputHist((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::createIirOutputHist((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (char) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::runIirFilter((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (dmtpc::waveform::IirFilter<double>*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 104, (long) dmtpc::waveform::zeroSupress(
(TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (double*) G__int(libp->para[5])
, (double*) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 104, (long) dmtpc::waveform::zeroSupress((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4]), (double*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 104, (long) dmtpc::waveform::zeroSupress((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (unsigned int) G__int(libp->para[3])
, (unsigned int) G__int(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) dmtpc::waveform::cropZeros((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) dmtpc::waveform::cropZeros((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) dmtpc::waveform::gausConv((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), (double) G__double(libp->para[3])
, (const char*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) dmtpc::waveform::gausConv((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2]), (double) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) dmtpc::waveform::gausConv((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (bool) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) dmtpc::waveform::gausConv((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) dmtpc::waveform::convolution((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (const char*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) dmtpc::waveform::convolution((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) dmtpc::waveform::convolution((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::Pulse */
static int G__DmtpcWaveformCint_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::Pulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::Pulse[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::Pulse[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::Pulse;
     } else {
       p = new((void*) gvp) dmtpc::waveform::Pulse;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::Pulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::Pulse((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::Pulse((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPeakBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setPulseHeight((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPulseHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setPeak((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPeak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setPulseHeightTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPulseHeightTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setPeakTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPeakTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setPulseStartTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPulseStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setStartTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setPulseStartBin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPulseStartBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setStartBin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getStartBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setPulseEndTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPulseEndTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setEndTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getEndTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setPulseEndBin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPulseEndBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setEndBin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getEndBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setPulseIntegral((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getPulseIntegral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->setIntegral((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::Pulse*) G__getstructoffset())->getIntegral());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->print(*(ostream*) libp->para[0].ref);
      G__setnull(result7);
      break;
   case 0:
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::Pulse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::Pulse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::Pulse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::Pulse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::Pulse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::Pulse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::Pulse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::Pulse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_170_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::Pulse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_170_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::Pulse* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::Pulse(*(dmtpc::waveform::Pulse*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::Pulse G__TdmtpccLcLwaveformcLcLPulse;
static int G__DmtpcWaveformCint_170_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::Pulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::Pulse*) (soff+(sizeof(dmtpc::waveform::Pulse)*i)))->~G__TdmtpccLcLwaveformcLcLPulse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::Pulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::Pulse*) (soff))->~G__TdmtpccLcLwaveformcLcLPulse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_170_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::Pulse* dest = (dmtpc::waveform::Pulse*) G__getstructoffset();
   *dest = *(dmtpc::waveform::Pulse*) libp->para[0].ref;
   const dmtpc::waveform::Pulse& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::CspPulse */
static int G__DmtpcWaveformCint_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::CspPulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::CspPulse[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::CspPulse[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::CspPulse;
     } else {
       p = new((void*) gvp) dmtpc::waveform::CspPulse;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::CspPulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::CspPulse((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::CspPulse((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::CspPulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::CspPulse(*(dmtpc::waveform::Pulse*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::CspPulse(*(dmtpc::waveform::Pulse*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getRise0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getRise10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getRise25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getRise50());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getRise75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getRise90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getFall0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getFall10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getFall25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getFall50());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getFall75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspPulse*) G__getstructoffset())->getFall90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setRise((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setRise0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setRise10((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setRise25((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setRise50((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setRise75((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setRise90((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setFall((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setFall0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setFall10((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setFall25((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setFall50((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setFall75((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->setFall90((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::CspPulse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::CspPulse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::CspPulse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::CspPulse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspPulse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::CspPulse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::CspPulse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::CspPulse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_171_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::CspPulse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_171_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::CspPulse* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::CspPulse(*(dmtpc::waveform::CspPulse*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::CspPulse G__TdmtpccLcLwaveformcLcLCspPulse;
static int G__DmtpcWaveformCint_171_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::CspPulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::CspPulse*) (soff+(sizeof(dmtpc::waveform::CspPulse)*i)))->~G__TdmtpccLcLwaveformcLcLCspPulse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::CspPulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::CspPulse*) (soff))->~G__TdmtpccLcLwaveformcLcLCspPulse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_171_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::CspPulse* dest = (dmtpc::waveform::CspPulse*) G__getstructoffset();
   *dest = *(dmtpc::waveform::CspPulse*) libp->para[0].ref;
   const dmtpc::waveform::CspPulse& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::CspWaveform */
static int G__DmtpcWaveformCint_188_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::CspWaveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::CspWaveform((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::CspWaveform((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::CspWaveform[n];
       } else {
         p = new((void*) gvp) dmtpc::waveform::CspWaveform[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::CspWaveform;
       } else {
         p = new((void*) gvp) dmtpc::waveform::CspWaveform;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::CspWaveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::CspWaveform(*(dmtpc::waveform::CspWaveform*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::CspWaveform(*(dmtpc::waveform::CspWaveform*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->add(*(dmtpc::waveform::CspPulse*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->insert((int) G__int(libp->para[0]), *(dmtpc::waveform::CspPulse*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->swap((int) G__int(libp->para[0]), *(dmtpc::waveform::CspPulse*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->rm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->clearPulse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->resize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getTimeSecs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getTimeNsecs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getBase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getWfMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getWfMaxTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getWfMaxBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getWfMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getWfMinTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->getWfMinBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setTimeSecs((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setTimeNsecs((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setBase((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setRMS((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setWfMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setWfMaxTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setWfMaxBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setWfMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setWfMinTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->setWfMinBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspWaveform& obj = ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->operator=(*(dmtpc::waveform::CspWaveform*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((const dmtpc::waveform::CspWaveform*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::CspWaveform::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::CspWaveform::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::CspWaveform::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::CspWaveform::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWaveform*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::CspWaveform::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::CspWaveform::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::CspWaveform::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_188_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::CspWaveform::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::CspWaveform G__TdmtpccLcLwaveformcLcLCspWaveform;
static int G__DmtpcWaveformCint_188_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::CspWaveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::CspWaveform*) (soff+(sizeof(dmtpc::waveform::CspWaveform)*i)))->~G__TdmtpccLcLwaveformcLcLCspWaveform();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::CspWaveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::CspWaveform*) (soff))->~G__TdmtpccLcLwaveformcLcLCspWaveform();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::CspWfVector */
static int G__DmtpcWaveformCint_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::CspWfVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::CspWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::CspWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::CspWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::CspWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::CspWfVector((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::CspWfVector((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::CspWfVector((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::CspWfVector((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::CspWfVector[n];
       } else {
         p = new((void*) gvp) dmtpc::waveform::CspWfVector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::CspWfVector;
       } else {
         p = new((void*) gvp) dmtpc::waveform::CspWfVector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::CspWfVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::CspWfVector(*(dmtpc::waveform::CspWfVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::CspWfVector(*(dmtpc::waveform::CspWfVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const dmtpc::waveform::CspWfVector*) G__getstructoffset())->getName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->setBoard((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->setChan((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->getBoard());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->getChan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::CspWfVector*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->add(*(dmtpc::waveform::CspWaveform*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->insert((int) G__int(libp->para[0]), *(dmtpc::waveform::CspWaveform*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->swap((int) G__int(libp->para[0]), *(dmtpc::waveform::CspWaveform*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->rm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->clearWf();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->resize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspWfVector& obj = ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->operator=(*(dmtpc::waveform::CspWfVector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspWaveform& obj = ((const dmtpc::waveform::CspWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspWaveform& obj = ((const dmtpc::waveform::CspWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspWaveform& obj = ((const dmtpc::waveform::CspWfVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspWaveform& obj = ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspWaveform& obj = ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspWaveform& obj = ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((const dmtpc::waveform::CspWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((const dmtpc::waveform::CspWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::CspPulse& obj = ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::CspWfVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::CspWfVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::CspWfVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::CspWfVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::CspWfVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::CspWfVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::CspWfVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::CspWfVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_193_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::CspWfVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::CspWfVector G__TdmtpccLcLwaveformcLcLCspWfVector;
static int G__DmtpcWaveformCint_193_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::CspWfVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::CspWfVector*) (soff+(sizeof(dmtpc::waveform::CspWfVector)*i)))->~G__TdmtpccLcLwaveformcLcLCspWfVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::CspWfVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::CspWfVector*) (soff))->~G__TdmtpccLcLwaveformcLcLCspWfVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::FastPulse */
static int G__DmtpcWaveformCint_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FastPulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FastPulse[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::FastPulse[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FastPulse;
     } else {
       p = new((void*) gvp) dmtpc::waveform::FastPulse;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FastPulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FastPulse((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::FastPulse((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FastPulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FastPulse(*(dmtpc::waveform::Pulse*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::FastPulse(*(dmtpc::waveform::Pulse*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFastPeak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getSlowPeak());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFastPeakTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getSlowPeakTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFastPeakBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getSlowPeakBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getTroughHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getTroughTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getTroughBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFastRise0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFastRise10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFastRise25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFastRise50());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFastRise75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFastRise90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getSlowFall0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getSlowFall10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getSlowFall25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getSlowFall50());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getSlowFall75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getSlowFall90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getRise0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getRise10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getRise25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getRise50());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getRise75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getRise90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFall0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFall10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFall25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFall50());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFall75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastPulse*) G__getstructoffset())->getFall90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastPeak((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowPeak((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastPeakTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowPeakTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastPeakBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowPeakBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setTroughHeight((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setTroughTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setTroughBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastRise((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastRise0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastRise10((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastRise25((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastRise50((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastRise75((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFastRise90((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowFall((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowFall0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowFall10((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowFall25((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowFall50((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowFall75((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setSlowFall90((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setRise((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setRise0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setRise10((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setRise25((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setRise50((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setRise75((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setRise90((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFall((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFall0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFall10((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFall25((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFall50((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFall75((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->setFall90((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::FastPulse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::FastPulse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::FastPulse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::FastPulse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastPulse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::FastPulse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::FastPulse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::FastPulse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_198_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::FastPulse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_198_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::FastPulse* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::FastPulse(*(dmtpc::waveform::FastPulse*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::FastPulse G__TdmtpccLcLwaveformcLcLFastPulse;
static int G__DmtpcWaveformCint_198_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::FastPulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::FastPulse*) (soff+(sizeof(dmtpc::waveform::FastPulse)*i)))->~G__TdmtpccLcLwaveformcLcLFastPulse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::FastPulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::FastPulse*) (soff))->~G__TdmtpccLcLwaveformcLcLFastPulse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_198_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FastPulse* dest = (dmtpc::waveform::FastPulse*) G__getstructoffset();
   *dest = *(dmtpc::waveform::FastPulse*) libp->para[0].ref;
   const dmtpc::waveform::FastPulse& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::FastWaveform */
static int G__DmtpcWaveformCint_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FastWaveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FastWaveform((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::FastWaveform((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::FastWaveform[n];
       } else {
         p = new((void*) gvp) dmtpc::waveform::FastWaveform[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::FastWaveform;
       } else {
         p = new((void*) gvp) dmtpc::waveform::FastWaveform;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FastWaveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FastWaveform(*(dmtpc::waveform::FastWaveform*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::FastWaveform(*(dmtpc::waveform::FastWaveform*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->add(*(dmtpc::waveform::FastPulse*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->insert((int) G__int(libp->para[0]), *(dmtpc::waveform::FastPulse*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->swap((int) G__int(libp->para[0]), *(dmtpc::waveform::FastPulse*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->rm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->clearPulse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->resize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getTimeSecs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getTimeNsecs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getBase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getWfMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getWfMaxTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getWfMaxBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getWfMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getWfMinTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->getWfMinBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setTimeSecs((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setTimeNsecs((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setBase((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setRMS((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setWfMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setWfMaxTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setWfMaxBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setWfMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setWfMinTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->setWfMinBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastWaveform& obj = ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->operator=(*(dmtpc::waveform::FastWaveform*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((const dmtpc::waveform::FastWaveform*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::FastWaveform::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::FastWaveform::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::FastWaveform::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::FastWaveform::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWaveform*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::FastWaveform::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::FastWaveform::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::FastWaveform::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_199_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::FastWaveform::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::FastWaveform G__TdmtpccLcLwaveformcLcLFastWaveform;
static int G__DmtpcWaveformCint_199_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::FastWaveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::FastWaveform*) (soff+(sizeof(dmtpc::waveform::FastWaveform)*i)))->~G__TdmtpccLcLwaveformcLcLFastWaveform();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::FastWaveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::FastWaveform*) (soff))->~G__TdmtpccLcLwaveformcLcLFastWaveform();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::FastWfVector */
static int G__DmtpcWaveformCint_204_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FastWfVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FastWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::FastWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FastWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::FastWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FastWfVector((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::FastWfVector((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FastWfVector((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::FastWfVector((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::FastWfVector[n];
       } else {
         p = new((void*) gvp) dmtpc::waveform::FastWfVector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::FastWfVector;
       } else {
         p = new((void*) gvp) dmtpc::waveform::FastWfVector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FastWfVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FastWfVector(*(dmtpc::waveform::FastWfVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::FastWfVector(*(dmtpc::waveform::FastWfVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const dmtpc::waveform::FastWfVector*) G__getstructoffset())->getName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->setBoard((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->setChan((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->getBoard());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->getChan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FastWfVector*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->add(*(dmtpc::waveform::FastWaveform*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->insert((int) G__int(libp->para[0]), *(dmtpc::waveform::FastWaveform*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->swap((int) G__int(libp->para[0]), *(dmtpc::waveform::FastWaveform*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->rm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->clearWf();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->resize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastWfVector& obj = ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->operator=(*(dmtpc::waveform::FastWfVector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastWaveform& obj = ((const dmtpc::waveform::FastWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastWaveform& obj = ((const dmtpc::waveform::FastWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastWaveform& obj = ((const dmtpc::waveform::FastWfVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastWaveform& obj = ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastWaveform& obj = ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastWaveform& obj = ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((const dmtpc::waveform::FastWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((const dmtpc::waveform::FastWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::FastPulse& obj = ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::FastWfVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::FastWfVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::FastWfVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::FastWfVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FastWfVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::FastWfVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::FastWfVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::FastWfVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_204_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::FastWfVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::FastWfVector G__TdmtpccLcLwaveformcLcLFastWfVector;
static int G__DmtpcWaveformCint_204_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::FastWfVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::FastWfVector*) (soff+(sizeof(dmtpc::waveform::FastWfVector)*i)))->~G__TdmtpccLcLwaveformcLcLFastWfVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::FastWfVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::FastWfVector*) (soff))->~G__TdmtpccLcLwaveformcLcLFastWfVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::FirFilter<float> */
static int G__DmtpcWaveformCint_209_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FirFilter<float>[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::FirFilter<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FirFilter<float>;
     } else {
       p = new((void*) gvp) dmtpc::waveform::FirFilter<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FirFilter<float>((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::FirFilter<float>((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FirFilter<float>((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::FirFilter<float>((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FirFilter<float>(*(vector<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::FirFilter<float>(*(vector<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FirFilter<float>(*(vector<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::FirFilter<float>(*(vector<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->outputSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->firCoeffsSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->calculateOutputSize((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->setFirCoeffs((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->setFirCoeffs(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->setFirCoeffs((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->setFirCoeffs(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>& obj = ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->output();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>& obj = ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->output();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->getOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 70, (long) ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->getOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>& obj = ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->firCoeffs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>& obj = ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->firCoeffs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->normalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->copyOutput((float*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->copyOutput(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->copyOutput((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->copyOutput(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->transferFunction((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->frequencyResponse((double) G__double(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->powerAttenuation((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->magnitudeAttenuation((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->phaseShift((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->phaseDelay((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_209_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<float>*) G__getstructoffset())->groupDelay((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_209_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::FirFilter<float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::FirFilter<float>(*(dmtpc::waveform::FirFilter<float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::FirFilter<float> G__TdmtpccLcLwaveformcLcLFirFilterlEfloatgR;
static int G__DmtpcWaveformCint_209_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::FirFilter<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::FirFilter<float>*) (soff+(sizeof(dmtpc::waveform::FirFilter<float>)*i)))->~G__TdmtpccLcLwaveformcLcLFirFilterlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::FirFilter<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::FirFilter<float>*) (soff))->~G__TdmtpccLcLwaveformcLcLFirFilterlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_209_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<float>* dest = (dmtpc::waveform::FirFilter<float>*) G__getstructoffset();
   *dest = *(dmtpc::waveform::FirFilter<float>*) libp->para[0].ref;
   const dmtpc::waveform::FirFilter<float>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::FirFilter<double> */
static int G__DmtpcWaveformCint_214_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FirFilter<double>[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::FirFilter<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FirFilter<double>;
     } else {
       p = new((void*) gvp) dmtpc::waveform::FirFilter<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FirFilter<double>((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::FirFilter<double>((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FirFilter<double>((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::FirFilter<double>((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FirFilter<double>(*(vector<float>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::FirFilter<double>(*(vector<float>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::FirFilter<double>(*(vector<double>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::FirFilter<double>(*(vector<double>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->outputSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->firCoeffsSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->calculateOutputSize((size_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->setFirCoeffs((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->setFirCoeffs(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->setFirCoeffs((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->setFirCoeffs(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->output();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->output();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->getOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->getOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->firCoeffs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->firCoeffs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->normalize();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->copyOutput((float*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->copyOutput(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->copyOutput((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->copyOutput(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->transferFunction((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]), *(double*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->frequencyResponse((double) G__double(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, *(double*) G__Doubleref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->powerAttenuation((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->magnitudeAttenuation((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->phaseShift((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->phaseDelay((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_214_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FirFilter<double>*) G__getstructoffset())->groupDelay((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_214_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::FirFilter<double>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::FirFilter<double>(*(dmtpc::waveform::FirFilter<double>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::FirFilter<double> G__TdmtpccLcLwaveformcLcLFirFilterlEdoublegR;
static int G__DmtpcWaveformCint_214_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::FirFilter<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::FirFilter<double>*) (soff+(sizeof(dmtpc::waveform::FirFilter<double>)*i)))->~G__TdmtpccLcLwaveformcLcLFirFilterlEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::FirFilter<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::FirFilter<double>*) (soff))->~G__TdmtpccLcLwaveformcLcLFirFilterlEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_214_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FirFilter<double>* dest = (dmtpc::waveform::FirFilter<double>*) G__getstructoffset();
   *dest = *(dmtpc::waveform::FirFilter<double>*) libp->para[0].ref;
   const dmtpc::waveform::FirFilter<double>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::fir */
static int G__DmtpcWaveformCint_215_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::raisedCosine((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 5:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::raisedCosine((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 4:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::raisedCosine((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::raisedCosine((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::raisedCosine((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::raisedCosine((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::raisedCosine((int) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::blackman((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::blackman((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::blackmanHarris((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::blackmanNutall((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::bohman((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::breitWigner((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::cosine((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::exponential((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::fermiDirac((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::flattop((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::gaussian((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::hamming((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::hann((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::kaiser((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::kaiser((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::lanczos((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::nutall((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::rectangle((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::savitzkyGolay((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::savitzkyGolay((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::sinc((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::sincSquared((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::triangle((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::exponentialConv((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::exponentialConv((double) G__double(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::gaussianConv((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 1:
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::gaussianConv((double) G__double(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_215_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = dmtpc::waveform::fir::triangleConv((int) G__int(libp->para[0]));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::FourierTransform */
static int G__DmtpcWaveformCint_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FourierTransform* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FourierTransform((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::FourierTransform((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::FourierTransform((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::FourierTransform((int) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->fftSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->frequency((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->angularFrequency((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->wavelength((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setWaveform((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setWaveform((float*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setWaveform(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFFT((fftw_complex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFFT((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFFT(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->fft();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->fft((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->fft(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->fftInverse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->fftInverse((fftw_complex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->fftInverse((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->fftInverse(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->autocorrelation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->autocorrelation((double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->autocorrelation(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->spectralDensity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->spectralDensity((double*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->spectralDensity(*(vector<double>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFilter((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFilter((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFilterPolar((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFilter((fftw_complex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->multiply((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->multiply((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->multiply((fftw_complex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->convolution((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->convolution((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->convolution((fftw_complex*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->applyFilter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->clearFilter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->useFilter((bool) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->useFilter();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->isFilterUsed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->getWaveform());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getWaveform());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFFT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFFT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFilteredFFT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFilteredFFT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->getRealOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getRealOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->getInverseFFT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getInverseFFT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->getAutocorrelation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getAutocorrelation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->getSpectralDensity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getSpectralDensity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->getPowerSpectrum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getPowerSpectrum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setWaveform((int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFFT((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFFT((int) G__int(libp->para[0]), *((fftw_complex*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFilteredFFT((int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::FourierTransform*) G__getstructoffset())->setFilteredFFT((int) G__int(libp->para[0]), *((fftw_complex*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getWaveform((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getRealOutput((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getInverseFFT((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getAutocorrelation((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getSpectralDensity((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getPowerSpectrum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFFTRealPart((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFFTImPart((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFFTMag2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFFTMag((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFFTPhase((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFilteredFFTRealPart((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFilteredFFTImPart((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFilteredFFTMag2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFilteredFFTMag((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getFilteredFFTPhase((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->getOutputType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->outputIsIFFT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->outputIsAutocorr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_218_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::waveform::FourierTransform*) G__getstructoffset())->outputIsSpecDensity());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_218_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::FourierTransform* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::FourierTransform(*(dmtpc::waveform::FourierTransform*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::FourierTransform G__TdmtpccLcLwaveformcLcLFourierTransform;
static int G__DmtpcWaveformCint_218_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::FourierTransform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::FourierTransform*) (soff+(sizeof(dmtpc::waveform::FourierTransform)*i)))->~G__TdmtpccLcLwaveformcLcLFourierTransform();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::FourierTransform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::FourierTransform*) (soff))->~G__TdmtpccLcLwaveformcLcLFourierTransform();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_218_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::FourierTransform* dest = (dmtpc::waveform::FourierTransform*) G__getstructoffset();
   *dest = *(dmtpc::waveform::FourierTransform*) libp->para[0].ref;
   const dmtpc::waveform::FourierTransform& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::PMTPulse */
static int G__DmtpcWaveformCint_219_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::PMTPulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::PMTPulse[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::PMTPulse[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::PMTPulse;
     } else {
       p = new((void*) gvp) dmtpc::waveform::PMTPulse;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::PMTPulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::PMTPulse((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::PMTPulse((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::PMTPulse* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::PMTPulse(*(dmtpc::waveform::Pulse*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::PMTPulse(*(dmtpc::waveform::Pulse*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getRise0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getRise10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getRise25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getRise50());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getRise75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getRise90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getFall0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getFall10());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getFall25());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getFall50());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getFall75());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTPulse*) G__getstructoffset())->getFall90());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setRise((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setRise0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setRise10((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setRise25((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setRise50((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setRise75((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setRise90((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setFall((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setFall0((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setFall10((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setFall25((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setFall50((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setFall75((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->setFall90((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::PMTPulse::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::PMTPulse::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::PMTPulse::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::PMTPulse::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTPulse*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::PMTPulse::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::PMTPulse::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::PMTPulse::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_219_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::PMTPulse::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_219_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::PMTPulse* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::PMTPulse(*(dmtpc::waveform::PMTPulse*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::PMTPulse G__TdmtpccLcLwaveformcLcLPMTPulse;
static int G__DmtpcWaveformCint_219_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::PMTPulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::PMTPulse*) (soff+(sizeof(dmtpc::waveform::PMTPulse)*i)))->~G__TdmtpccLcLwaveformcLcLPMTPulse();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::PMTPulse*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::PMTPulse*) (soff))->~G__TdmtpccLcLwaveformcLcLPMTPulse();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_219_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::PMTPulse* dest = (dmtpc::waveform::PMTPulse*) G__getstructoffset();
   *dest = *(dmtpc::waveform::PMTPulse*) libp->para[0].ref;
   const dmtpc::waveform::PMTPulse& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::PMTWaveform */
static int G__DmtpcWaveformCint_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::PMTWaveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::PMTWaveform((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::PMTWaveform((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::PMTWaveform[n];
       } else {
         p = new((void*) gvp) dmtpc::waveform::PMTWaveform[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::PMTWaveform;
       } else {
         p = new((void*) gvp) dmtpc::waveform::PMTWaveform;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::PMTWaveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::PMTWaveform(*(dmtpc::waveform::PMTWaveform*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::PMTWaveform(*(dmtpc::waveform::PMTWaveform*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->add(*(dmtpc::waveform::PMTPulse*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->insert((int) G__int(libp->para[0]), *(dmtpc::waveform::PMTPulse*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->swap((int) G__int(libp->para[0]), *(dmtpc::waveform::PMTPulse*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->rm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->clearPulse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->resize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getTimeSecs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getTimeNsecs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getBase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getWfMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getWfMaxTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getWfMaxBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getWfMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getWfMinTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->getWfMinBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setTimeSecs((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setTimeNsecs((uint32_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setBase((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setRMS((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setWfMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setWfMaxTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setWfMaxBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setWfMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setWfMinTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->setWfMinBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTWaveform& obj = ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->operator=(*(dmtpc::waveform::PMTWaveform*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((const dmtpc::waveform::PMTWaveform*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::PMTWaveform::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::PMTWaveform::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::PMTWaveform::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::PMTWaveform::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWaveform*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::PMTWaveform::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::PMTWaveform::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::PMTWaveform::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_220_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::PMTWaveform::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::PMTWaveform G__TdmtpccLcLwaveformcLcLPMTWaveform;
static int G__DmtpcWaveformCint_220_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::PMTWaveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::PMTWaveform*) (soff+(sizeof(dmtpc::waveform::PMTWaveform)*i)))->~G__TdmtpccLcLwaveformcLcLPMTWaveform();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::PMTWaveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::PMTWaveform*) (soff))->~G__TdmtpccLcLwaveformcLcLPMTWaveform();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::PMTWfVector */
static int G__DmtpcWaveformCint_225_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::PMTWfVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::PMTWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::PMTWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::PMTWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::PMTWfVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::PMTWfVector((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::PMTWfVector((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::PMTWfVector((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::PMTWfVector((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::PMTWfVector[n];
       } else {
         p = new((void*) gvp) dmtpc::waveform::PMTWfVector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::PMTWfVector;
       } else {
         p = new((void*) gvp) dmtpc::waveform::PMTWfVector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::PMTWfVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::PMTWfVector(*(dmtpc::waveform::PMTWfVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::PMTWfVector(*(dmtpc::waveform::PMTWfVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const dmtpc::waveform::PMTWfVector*) G__getstructoffset())->getName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->setBoard((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->setChan((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->getBoard());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->getChan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::PMTWfVector*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->add(*(dmtpc::waveform::PMTWaveform*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->insert((int) G__int(libp->para[0]), *(dmtpc::waveform::PMTWaveform*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->swap((int) G__int(libp->para[0]), *(dmtpc::waveform::PMTWaveform*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->rm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->clearWf();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->resize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTWfVector& obj = ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->operator=(*(dmtpc::waveform::PMTWfVector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTWaveform& obj = ((const dmtpc::waveform::PMTWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTWaveform& obj = ((const dmtpc::waveform::PMTWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTWaveform& obj = ((const dmtpc::waveform::PMTWfVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTWaveform& obj = ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTWaveform& obj = ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTWaveform& obj = ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((const dmtpc::waveform::PMTWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((const dmtpc::waveform::PMTWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->at((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::PMTPulse& obj = ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::PMTWfVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::PMTWfVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::PMTWfVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::PMTWfVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::PMTWfVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::PMTWfVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::PMTWfVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::PMTWfVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_225_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::PMTWfVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::PMTWfVector G__TdmtpccLcLwaveformcLcLPMTWfVector;
static int G__DmtpcWaveformCint_225_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::PMTWfVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::PMTWfVector*) (soff+(sizeof(dmtpc::waveform::PMTWfVector)*i)))->~G__TdmtpccLcLwaveformcLcLPMTWfVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::PMTWfVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::PMTWfVector*) (soff))->~G__TdmtpccLcLwaveformcLcLPMTWfVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::SkimWaveform */
static int G__DmtpcWaveformCint_230_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::SkimWaveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::SkimWaveform((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::SkimWaveform((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::SkimWaveform[n];
       } else {
         p = new((void*) gvp) dmtpc::waveform::SkimWaveform[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::SkimWaveform;
       } else {
         p = new((void*) gvp) dmtpc::waveform::SkimWaveform;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::SkimWaveform* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::SkimWaveform(*(dmtpc::waveform::SkimWaveform*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::SkimWaveform(*(dmtpc::waveform::SkimWaveform*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->add(*(dmtpc::waveform::Pulse*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->insert((int) G__int(libp->para[0]), *(dmtpc::waveform::Pulse*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->swap((int) G__int(libp->para[0]), *(dmtpc::waveform::Pulse*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->rm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->clearPulse();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->resize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->getTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->getBase());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->getRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->getWfMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->getWfMaxTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->getWfMaxBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->getWfMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->getWfMinTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->getWfMinBin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->setTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->setBase((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->setRMS((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->setWfMax((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->setWfMaxTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->setWfMaxBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->setWfMin((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->setWfMinTime((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->setWfMinBin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::SkimWaveform& obj = ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->operator=(*(dmtpc::waveform::SkimWaveform*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((const dmtpc::waveform::SkimWaveform*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::SkimWaveform::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::SkimWaveform::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::SkimWaveform::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::SkimWaveform::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::SkimWaveform*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::SkimWaveform::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::SkimWaveform::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::SkimWaveform::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_230_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::SkimWaveform::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::SkimWaveform G__TdmtpccLcLwaveformcLcLSkimWaveform;
static int G__DmtpcWaveformCint_230_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::SkimWaveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::SkimWaveform*) (soff+(sizeof(dmtpc::waveform::SkimWaveform)*i)))->~G__TdmtpccLcLwaveformcLcLSkimWaveform();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::SkimWaveform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::SkimWaveform*) (soff))->~G__TdmtpccLcLwaveformcLcLSkimWaveform();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::analysis */
static int G__DmtpcWaveformCint_238_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) dmtpc::waveform::analysis::baseline((TH1*) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) dmtpc::waveform::analysis::baseline((TH1*) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) dmtpc::waveform::analysis::baseline((TH1*) G__int(libp->para[0]), *(double*) G__Doubleref(&libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::analysis::minbin((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::analysis::maxbin((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      dmtpc::waveform::analysis::riseTime((TH1*) G__int(libp->para[0]), *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref, (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      dmtpc::waveform::analysis::riseTime((TH1*) G__int(libp->para[0]), *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref, (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      dmtpc::waveform::analysis::fallTime((TH1*) G__int(libp->para[0]), *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref, (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (bool) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      dmtpc::waveform::analysis::fallTime((TH1*) G__int(libp->para[0]), *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref, (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) dmtpc::waveform::analysis::isPeak((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) dmtpc::waveform::analysis::isPeak((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) dmtpc::waveform::analysis::isTrough((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) dmtpc::waveform::analysis::isTrough((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::waveform::analysis::integral((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) dmtpc::waveform::analysis::startTime((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), *(int*) G__Intref(&libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) dmtpc::waveform::analysis::startTime((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), *(int*) G__Intref(&libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) dmtpc::waveform::analysis::endTime((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), *(int*) G__Intref(&libp->para[3])
, (int) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) dmtpc::waveform::analysis::endTime((TH1*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]), *(int*) G__Intref(&libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         vector<int>* pobj;
         vector<int> xobj = dmtpc::waveform::analysis::peaks((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         vector<int>* pobj;
         vector<int> xobj = dmtpc::waveform::analysis::peaks((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         vector<int>* pobj;
         vector<int> xobj = dmtpc::waveform::analysis::peaks((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      {
         vector<int>* pobj;
         vector<int> xobj = dmtpc::waveform::analysis::valleys((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 3:
      {
         vector<int>* pobj;
         vector<int> xobj = dmtpc::waveform::analysis::valleys((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 2:
      {
         vector<int>* pobj;
         vector<int> xobj = dmtpc::waveform::analysis::valleys((TH1*) G__int(libp->para[0]), (double) G__double(libp->para[1]));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      dmtpc::waveform::analysis::peaksAndValleys((TH1*) G__int(libp->para[0]), *(vector<int>*) libp->para[1].ref
, *(vector<int>*) libp->para[2].ref, (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]), (int) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      dmtpc::waveform::analysis::peaksAndValleys((TH1*) G__int(libp->para[0]), *(vector<int>*) libp->para[1].ref
, *(vector<int>*) libp->para[2].ref, (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      dmtpc::waveform::analysis::peaksAndValleys((TH1*) G__int(libp->para[0]), *(vector<int>*) libp->para[1].ref
, *(vector<int>*) libp->para[2].ref, (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      dmtpc::waveform::analysis::peaksAndValleys((TH1*) G__int(libp->para[0]), *(vector<int>*) libp->para[1].ref
, *(vector<int>*) libp->para[2].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      dmtpc::waveform::analysis::mergePeaksByDistance((TH1*) G__int(libp->para[0]), *(vector<int>*) libp->para[1].ref
, *(vector<int>*) libp->para[2].ref, (int) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      dmtpc::waveform::analysis::mergePeaksByDistance((TH1*) G__int(libp->para[0]), *(vector<int>*) libp->para[1].ref
, *(vector<int>*) libp->para[2].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      dmtpc::waveform::analysis::analyzeCSP((TH1*) G__int(libp->para[0]), *(dmtpc::waveform::CspWaveform*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      dmtpc::waveform::analysis::analyzeCSP((TH1*) G__int(libp->para[0]), *(dmtpc::waveform::CspWaveform*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      dmtpc::waveform::analysis::analyzePMT((TH1*) G__int(libp->para[0]), *(dmtpc::waveform::PMTWaveform*) libp->para[1].ref
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      dmtpc::waveform::analysis::analyzePMT((TH1*) G__int(libp->para[0]), *(dmtpc::waveform::PMTWaveform*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_238_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::analysis::analyzeFast((TH1*) G__int(libp->para[0]), *(dmtpc::waveform::FastWaveform*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::IirFilter<double> */
static int G__DmtpcWaveformCint_240_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::IirFilter<double>[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::IirFilter<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::IirFilter<double>;
     } else {
       p = new((void*) gvp) dmtpc::waveform::IirFilter<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::IirFilter<double>(
(size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (float*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::IirFilter<double>(
(size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (float*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::IirFilter<double>(
(size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::IirFilter<double>(
(size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::IirFilter<double>(
*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, *(vector<float>*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::IirFilter<double>(
*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, *(vector<float>*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::IirFilter<double>(
*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::IirFilter<double>(
*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->setIirCoeffs((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->setIirCoeffs((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->setIirCoeffs(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->setIirCoeffs(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->setInitialValues((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->setInitialValues((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->setInitialValues(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->setInitialValues(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->normalizeFir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->normalizeIir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_240_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<double>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_240_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::IirFilter<double>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::IirFilter<double>(*(dmtpc::waveform::IirFilter<double>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::IirFilter<double> G__TdmtpccLcLwaveformcLcLIirFilterlEdoublegR;
static int G__DmtpcWaveformCint_240_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::IirFilter<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::IirFilter<double>*) (soff+(sizeof(dmtpc::waveform::IirFilter<double>)*i)))->~G__TdmtpccLcLwaveformcLcLIirFilterlEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::IirFilter<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::IirFilter<double>*) (soff))->~G__TdmtpccLcLwaveformcLcLIirFilterlEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_240_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<double>* dest = (dmtpc::waveform::IirFilter<double>*) G__getstructoffset();
   *dest = *(dmtpc::waveform::IirFilter<double>*) libp->para[0].ref;
   const dmtpc::waveform::IirFilter<double>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::WaveformVector */
static int G__DmtpcWaveformCint_241_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::WaveformVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::WaveformVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::WaveformVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (const char*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::WaveformVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::WaveformVector(
(int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::WaveformVector((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::WaveformVector((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::WaveformVector((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::waveform::WaveformVector((int) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::WaveformVector[n];
       } else {
         p = new((void*) gvp) dmtpc::waveform::WaveformVector[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new dmtpc::waveform::WaveformVector;
       } else {
         p = new((void*) gvp) dmtpc::waveform::WaveformVector;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::WaveformVector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::WaveformVector(*(dmtpc::waveform::WaveformVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::WaveformVector(*(dmtpc::waveform::WaveformVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const dmtpc::waveform::WaveformVector*) G__getstructoffset())->getName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->setBoard((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->setChan((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->getBoard());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->getChan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::waveform::WaveformVector*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->add(*(dmtpc::waveform::SkimWaveform*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->insert((int) G__int(libp->para[0]), *(dmtpc::waveform::SkimWaveform*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->swap((int) G__int(libp->para[0]), *(dmtpc::waveform::SkimWaveform*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->rm((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->clearWf();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->resize((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::WaveformVector& obj = ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->operator=(*(dmtpc::waveform::WaveformVector*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::SkimWaveform& obj = ((const dmtpc::waveform::WaveformVector*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::SkimWaveform& obj = ((const dmtpc::waveform::WaveformVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::SkimWaveform& obj = ((const dmtpc::waveform::WaveformVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::SkimWaveform& obj = ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->at((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::SkimWaveform& obj = ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::SkimWaveform& obj = ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->operator[]((int) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((const dmtpc::waveform::WaveformVector*) G__getstructoffset())->at((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((const dmtpc::waveform::WaveformVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->at((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const dmtpc::waveform::Pulse& obj = ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->operator()((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::waveform::WaveformVector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::WaveformVector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::waveform::WaveformVector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::waveform::WaveformVector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::WaveformVector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::WaveformVector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::WaveformVector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::waveform::WaveformVector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_241_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::waveform::WaveformVector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::WaveformVector G__TdmtpccLcLwaveformcLcLWaveformVector;
static int G__DmtpcWaveformCint_241_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::WaveformVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::WaveformVector*) (soff+(sizeof(dmtpc::waveform::WaveformVector)*i)))->~G__TdmtpccLcLwaveformcLcLWaveformVector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::WaveformVector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::WaveformVector*) (soff))->~G__TdmtpccLcLwaveformcLcLWaveformVector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::IirFilter<float> */
static int G__DmtpcWaveformCint_246_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::IirFilter<float>[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::IirFilter<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::IirFilter<float>;
     } else {
       p = new((void*) gvp) dmtpc::waveform::IirFilter<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::IirFilter<float>(
(size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (float*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::IirFilter<float>(
(size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (float*) G__int(libp->para[3])
, (float*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::IirFilter<float>(
(size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::IirFilter<float>(
(size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::IirFilter<float>(
*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, *(vector<float>*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::IirFilter<float>(
*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, *(vector<float>*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::IirFilter<float>(
*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::IirFilter<float>(
*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, *(vector<double>*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->setIirCoeffs((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->setIirCoeffs((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->setIirCoeffs(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->setIirCoeffs(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->setInitialValues((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->setInitialValues((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->setInitialValues(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->setInitialValues(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->normalizeFir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->normalizeIir();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1])
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref, (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const short*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const int*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const long*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned char*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned short*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned int*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (bool) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (const unsigned long*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<char>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<short>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<int>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<long>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned char>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned short>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned int>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_246_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (bool) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((const dmtpc::waveform::IirFilter<float>*) G__getstructoffset())->apply(*(vector<unsigned long>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_246_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::IirFilter<float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::IirFilter<float>(*(dmtpc::waveform::IirFilter<float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::IirFilter<float> G__TdmtpccLcLwaveformcLcLIirFilterlEfloatgR;
static int G__DmtpcWaveformCint_246_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::IirFilter<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::IirFilter<float>*) (soff+(sizeof(dmtpc::waveform::IirFilter<float>)*i)))->~G__TdmtpccLcLwaveformcLcLIirFilterlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::IirFilter<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::IirFilter<float>*) (soff))->~G__TdmtpccLcLwaveformcLcLIirFilterlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_246_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::IirFilter<float>* dest = (dmtpc::waveform::IirFilter<float>*) G__getstructoffset();
   *dest = *(dmtpc::waveform::IirFilter<float>*) libp->para[0].ref;
   const dmtpc::waveform::IirFilter<float>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::RangeDomainFilter<double> */
static int G__DmtpcWaveformCint_247_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::RangeDomainFilter<double>[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<double>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::RangeDomainFilter<double>;
     } else {
       p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<double>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::RangeDomainFilter<double>(
(size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<double>(
(size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::RangeDomainFilter<double>(
(size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<double>(
(size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::RangeDomainFilter<double>(*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<double>(*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<double>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::RangeDomainFilter<double>(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<double>(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->rangeCoeffSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->setRangeCoeffs((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->setRangeCoeffs((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->setRangeCoeffs(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->setRangeCoeffs(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (double*) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((const dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->rangeCoeffs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_247_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<double>& obj = ((dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset())->rangeCoeffs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_247_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::RangeDomainFilter<double>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::RangeDomainFilter<double>(*(dmtpc::waveform::RangeDomainFilter<double>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::RangeDomainFilter<double> G__TdmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR;
static int G__DmtpcWaveformCint_247_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::RangeDomainFilter<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::RangeDomainFilter<double>*) (soff+(sizeof(dmtpc::waveform::RangeDomainFilter<double>)*i)))->~G__TdmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::RangeDomainFilter<double>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::RangeDomainFilter<double>*) (soff))->~G__TdmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_247_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<double>* dest = (dmtpc::waveform::RangeDomainFilter<double>*) G__getstructoffset();
   *dest = *(dmtpc::waveform::RangeDomainFilter<double>*) libp->para[0].ref;
   const dmtpc::waveform::RangeDomainFilter<double>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::waveform::RangeDomainFilter<float> */
static int G__DmtpcWaveformCint_248_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::RangeDomainFilter<float>[n];
     } else {
       p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::waveform::RangeDomainFilter<float>;
     } else {
       p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::RangeDomainFilter<float>(
(size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<float>(
(size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (float*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::RangeDomainFilter<float>(
(size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<float>(
(size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (size_t) G__int(libp->para[2]), (double*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::RangeDomainFilter<float>(*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<float>(*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::waveform::RangeDomainFilter<float>(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) dmtpc::waveform::RangeDomainFilter<float>(*(vector<double>*) libp->para[0].ref, *(vector<double>*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->rangeCoeffSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->setRangeCoeffs((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->setRangeCoeffs((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->setRangeCoeffs(*(vector<float>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->setRangeCoeffs(*(vector<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->apply((size_t) G__int(libp->para[0]), (float*) G__int(libp->para[1])
, (float*) G__int(libp->para[2]), (double) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->apply(*(vector<double>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->apply(*(vector<float>*) libp->para[0].ref, *(vector<float>*) libp->para[1].ref
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>& obj = ((const dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->rangeCoeffs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcWaveformCint_248_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float>& obj = ((dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset())->rangeCoeffs();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcWaveformCint_248_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::waveform::RangeDomainFilter<float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::waveform::RangeDomainFilter<float>(*(dmtpc::waveform::RangeDomainFilter<float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::waveform::RangeDomainFilter<float> G__TdmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR;
static int G__DmtpcWaveformCint_248_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::waveform::RangeDomainFilter<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::waveform::RangeDomainFilter<float>*) (soff+(sizeof(dmtpc::waveform::RangeDomainFilter<float>)*i)))->~G__TdmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::waveform::RangeDomainFilter<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::waveform::RangeDomainFilter<float>*) (soff))->~G__TdmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcWaveformCint_248_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::waveform::RangeDomainFilter<float>* dest = (dmtpc::waveform::RangeDomainFilter<float>*) G__getstructoffset();
   *dest = *(dmtpc::waveform::RangeDomainFilter<float>*) libp->para[0].ref;
   const dmtpc::waveform::RangeDomainFilter<float>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* dmtpc */

/* dmtpc::waveform */

/* dmtpc::waveform::Pulse */

/* dmtpc::waveform::CspPulse */

/* dmtpc::waveform::CspWaveform */

/* dmtpc::waveform::CspWfVector */

/* dmtpc::waveform::FastPulse */

/* dmtpc::waveform::FastWaveform */

/* dmtpc::waveform::FastWfVector */

/* dmtpc::waveform::FirFilter<float> */

/* dmtpc::waveform::FirFilter<double> */

/* dmtpc::waveform::fir */

/* dmtpc::waveform::FourierTransform */

/* dmtpc::waveform::PMTPulse */

/* dmtpc::waveform::PMTWaveform */

/* dmtpc::waveform::PMTWfVector */

/* dmtpc::waveform::SkimWaveform */

/* dmtpc::waveform::analysis */

/* dmtpc::waveform::IirFilter<double> */

/* dmtpc::waveform::WaveformVector */

/* dmtpc::waveform::IirFilter<float> */

/* dmtpc::waveform::RangeDomainFilter<double> */

/* dmtpc::waveform::RangeDomainFilter<float> */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDmtpcWaveformCint {
 public:
  G__Sizep2memfuncDmtpcWaveformCint(): p(&G__Sizep2memfuncDmtpcWaveformCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDmtpcWaveformCint::*p)();
};

size_t G__get_sizep2memfuncDmtpcWaveformCint()
{
  G__Sizep2memfuncDmtpcWaveformCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDmtpcWaveformCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse))) {
     dmtpc::waveform::Pulse *G__Lderived;
     G__Lderived=(dmtpc::waveform::Pulse*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse))) {
     dmtpc::waveform::CspPulse *G__Lderived;
     G__Lderived=(dmtpc::waveform::CspPulse*)0x1000;
     {
       dmtpc::waveform::Pulse *G__Lpbase=(dmtpc::waveform::Pulse*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform))) {
     dmtpc::waveform::CspWaveform *G__Lderived;
     G__Lderived=(dmtpc::waveform::CspWaveform*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector))) {
     dmtpc::waveform::CspWfVector *G__Lderived;
     G__Lderived=(dmtpc::waveform::CspWfVector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse))) {
     dmtpc::waveform::FastPulse *G__Lderived;
     G__Lderived=(dmtpc::waveform::FastPulse*)0x1000;
     {
       dmtpc::waveform::Pulse *G__Lpbase=(dmtpc::waveform::Pulse*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform))) {
     dmtpc::waveform::FastWaveform *G__Lderived;
     G__Lderived=(dmtpc::waveform::FastWaveform*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector))) {
     dmtpc::waveform::FastWfVector *G__Lderived;
     G__Lderived=(dmtpc::waveform::FastWfVector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse))) {
     dmtpc::waveform::PMTPulse *G__Lderived;
     G__Lderived=(dmtpc::waveform::PMTPulse*)0x1000;
     {
       dmtpc::waveform::Pulse *G__Lpbase=(dmtpc::waveform::Pulse*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform))) {
     dmtpc::waveform::PMTWaveform *G__Lderived;
     G__Lderived=(dmtpc::waveform::PMTWaveform*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector))) {
     dmtpc::waveform::PMTWfVector *G__Lderived;
     G__Lderived=(dmtpc::waveform::PMTWfVector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform))) {
     dmtpc::waveform::SkimWaveform *G__Lderived;
     G__Lderived=(dmtpc::waveform::SkimWaveform*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR))) {
     dmtpc::waveform::IirFilter<double> *G__Lderived;
     G__Lderived=(dmtpc::waveform::IirFilter<double>*)0x1000;
     {
       dmtpc::waveform::FirFilter<double> *G__Lpbase=(dmtpc::waveform::FirFilter<double>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector))) {
     dmtpc::waveform::WaveformVector *G__Lderived;
     G__Lderived=(dmtpc::waveform::WaveformVector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR))) {
     dmtpc::waveform::IirFilter<float> *G__Lderived;
     G__Lderived=(dmtpc::waveform::IirFilter<float>*)0x1000;
     {
       dmtpc::waveform::FirFilter<float> *G__Lpbase=(dmtpc::waveform::FirFilter<float>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR))) {
     dmtpc::waveform::RangeDomainFilter<double> *G__Lderived;
     G__Lderived=(dmtpc::waveform::RangeDomainFilter<double>*)0x1000;
     {
       dmtpc::waveform::FirFilter<double> *G__Lpbase=(dmtpc::waveform::FirFilter<double>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR))) {
     dmtpc::waveform::RangeDomainFilter<float> *G__Lderived;
     G__Lderived=(dmtpc::waveform::RangeDomainFilter<float>*)0x1000;
     {
       dmtpc::waveform::FirFilter<float> *G__Lpbase=(dmtpc::waveform::FirFilter<float>*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR),G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDmtpcWaveformCint() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("uint32_t",104,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CspPulse>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::waveform::CspPulse>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CspWaveform>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::waveform::CspWaveform>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FastPulse>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::waveform::FastPulse>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FastWaveform>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::waveform::FastWaveform>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PMTPulse>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::waveform::PMTPulse>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PMTWaveform>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::waveform::PMTWaveform>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Pulse>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::waveform::Pulse>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<SkimWaveform>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::waveform::SkimWaveform>",117,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* dmtpc */
static void G__setup_memvardmtpc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpc));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform */
static void G__setup_memvardmtpccLcLwaveform(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveform));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::Pulse */
static void G__setup_memvardmtpccLcLwaveformcLcLPulse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse));
   { dmtpc::waveform::Pulse *p; p=(dmtpc::waveform::Pulse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"init=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"nbin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"peak=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"peakTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"startTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"startBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"endTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"endBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"integral=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::CspPulse */
static void G__setup_memvardmtpccLcLwaveformcLcLCspPulse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse));
   { dmtpc::waveform::CspPulse *p; p=(dmtpc::waveform::CspPulse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R25=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R50=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R75=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R90=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F25=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F50=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F75=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F90=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::CspWaveform */
static void G__setup_memvardmtpccLcLwaveformcLcLCspWaveform(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform));
   { dmtpc::waveform::CspWaveform *p; p=(dmtpc::waveform::CspWaveform*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"N=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgR),G__defined_typename("vector<CspPulse>"),-1,2,"pulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"secs=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"nsecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"base=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMaxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"wfMaxBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"wfMinBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::CspWfVector */
static void G__setup_memvardmtpccLcLwaveformcLcLCspWfVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector));
   { dmtpc::waveform::CspWfVector *p; p=(dmtpc::waveform::CspWfVector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_string),-1,-1,2,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"boardID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"chanID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"N=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgR),G__defined_typename("vector<CspWaveform>"),-1,2,"wf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::FastPulse */
static void G__setup_memvardmtpccLcLwaveformcLcLFastPulse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse));
   { dmtpc::waveform::FastPulse *p; p=(dmtpc::waveform::FastPulse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fastPeak=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"slowPeak=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fastPeakTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"slowPeakTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fastPeakBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"slowPeakBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"troughHeight=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"troughTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"troughBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fR0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fR10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fR25=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fR50=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fR75=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"fR90=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sF0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sF10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sF25=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sF50=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sF75=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sF90=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R25=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R50=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R75=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R90=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F25=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F50=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F75=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F90=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::FastWaveform */
static void G__setup_memvardmtpccLcLwaveformcLcLFastWaveform(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform));
   { dmtpc::waveform::FastWaveform *p; p=(dmtpc::waveform::FastWaveform*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"N=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgR),G__defined_typename("vector<FastPulse>"),-1,2,"pulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"secs=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"nsecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"base=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMaxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"wfMaxBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"wfMinBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::FastWfVector */
static void G__setup_memvardmtpccLcLwaveformcLcLFastWfVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector));
   { dmtpc::waveform::FastWfVector *p; p=(dmtpc::waveform::FastWfVector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_string),-1,-1,2,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"boardID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"chanID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"N=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgR),G__defined_typename("vector<FastWaveform>"),-1,2,"wf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::FirFilter<float> */
static void G__setup_memvardmtpccLcLwaveformcLcLFirFilterlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR));
   { dmtpc::waveform::FirFilter<float> *p; p=(dmtpc::waveform::FirFilter<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"fFIR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"fOutput=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::FirFilter<double> */
static void G__setup_memvardmtpccLcLwaveformcLcLFirFilterlEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR));
   { dmtpc::waveform::FirFilter<double> *p; p=(dmtpc::waveform::FirFilter<double>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fFIR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fOutput=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::fir */
static void G__setup_memvardmtpccLcLwaveformcLcLfir(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLfir));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::FourierTransform */
static void G__setup_memvardmtpccLcLwaveformcLcLFourierTransform(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform));
   { dmtpc::waveform::FourierTransform *p; p=(dmtpc::waveform::FourierTransform*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fN=",0,"/< the number of bins in the input histogram");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fFlag=",0,"/< the FFTW3 flag for optimizing the FFT algorithm");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fFFTisDone=",0,"/< set to true if the FFT has been performed and the input has not changed");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fUseFilter=",0,"/< set to true if a filter is to be used");
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"fData=",0,"/< the input data");
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,4,"fIfft=",0,"/< the real-valued output (inverse FFT, autocorrelation or power spectrum)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_fftw_complex),-1,-1,4,"fCxOut=",0,"/< the output of the FFT");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_fftw_complex),-1,-1,4,"fCxFil=",0,"/< the filtered FFT output");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_fftw_complex),-1,-1,4,"fCxIn=",0,"/< the input of the inverse FFT");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_fftw_plan),-1,-1,4,"fPlan=",0,"/< the FFT plan");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_fftw_plan),-1,-1,4,"fIPlan=",0,"/< the inverse FFT plan");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fOutputType=",0,"/< the type of output held by the real-valued output array");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFilterReal=",0,"/< the real part of the filter coefficients");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"fFilterIm=",0,"/< the imaginary part of the filter coefficients");
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::PMTPulse */
static void G__setup_memvardmtpccLcLwaveformcLcLPMTPulse(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse));
   { dmtpc::waveform::PMTPulse *p; p=(dmtpc::waveform::PMTPulse*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R25=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R50=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R75=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"R90=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F10=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F25=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F50=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F75=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"F90=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::PMTWaveform */
static void G__setup_memvardmtpccLcLwaveformcLcLPMTWaveform(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform));
   { dmtpc::waveform::PMTWaveform *p; p=(dmtpc::waveform::PMTWaveform*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"N=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgR),G__defined_typename("vector<PMTPulse>"),-1,2,"pulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"secs=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("uint32_t"),-1,2,"nsecs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"base=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMaxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"wfMaxBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"wfMinBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::PMTWfVector */
static void G__setup_memvardmtpccLcLwaveformcLcLPMTWfVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector));
   { dmtpc::waveform::PMTWfVector *p; p=(dmtpc::waveform::PMTWfVector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_string),-1,-1,2,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"boardID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"chanID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"N=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgR),G__defined_typename("vector<PMTWaveform>"),-1,2,"wf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::SkimWaveform */
static void G__setup_memvardmtpccLcLwaveformcLcLSkimWaveform(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform));
   { dmtpc::waveform::SkimWaveform *p; p=(dmtpc::waveform::SkimWaveform*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"N=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgR),G__defined_typename("vector<Pulse>"),-1,2,"pulse=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"base=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"time=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMinTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"wfMinBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"wfMaxTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"wfMaxBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::analysis */
static void G__setup_memvardmtpccLcLwaveformcLcLanalysis(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLanalysis));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::IirFilter<double> */
static void G__setup_memvardmtpccLcLwaveformcLcLIirFilterlEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR));
   { dmtpc::waveform::IirFilter<double> *p; p=(dmtpc::waveform::IirFilter<double>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-6,2,"fFIR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-6,2,"fOutput=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fIIR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fInitialValues=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::WaveformVector */
static void G__setup_memvardmtpccLcLwaveformcLcLWaveformVector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector));
   { dmtpc::waveform::WaveformVector *p; p=(dmtpc::waveform::WaveformVector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_string),-1,-1,2,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"boardID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"chanID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"N=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgR),G__defined_typename("vector<SkimWaveform>"),-1,2,"wf=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::IirFilter<float> */
static void G__setup_memvardmtpccLcLwaveformcLcLIirFilterlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR));
   { dmtpc::waveform::IirFilter<float> *p; p=(dmtpc::waveform::IirFilter<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-6,2,"fFIR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-6,2,"fOutput=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"fIIR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"fInitialValues=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::RangeDomainFilter<double> */
static void G__setup_memvardmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR));
   { dmtpc::waveform::RangeDomainFilter<double> *p; p=(dmtpc::waveform::RangeDomainFilter<double>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-6,2,"fFIR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-6,2,"fOutput=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"fRangeCoeffs=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::waveform::RangeDomainFilter<float> */
static void G__setup_memvardmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR));
   { dmtpc::waveform::RangeDomainFilter<float> *p; p=(dmtpc::waveform::RangeDomainFilter<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-6,2,"fFIR=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-6,2,"fOutput=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,2,"fRangeCoeffs=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDmtpcWaveformCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdmtpc(void) {
   /* dmtpc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpc));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveform(void) {
   /* dmtpc::waveform */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveform));
   G__memfunc_setup("medianFilter",1236,G__DmtpcWaveformCint_169_0_1, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 10 - hist i - - 0 - size "
"C - - 10 '\"medianFilter\"' name", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, int, const char*))(&dmtpc::waveform::medianFilter) ), 0);
   G__memfunc_setup("integral",854,G__DmtpcWaveformCint_169_0_2, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 10 - hist g - - 0 'false' useXwidth "
"C - - 10 '\"Integral\"' name", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, bool, const char*))(&dmtpc::waveform::integral) ), 0);
   G__memfunc_setup("IIRFilter",842,G__DmtpcWaveformCint_169_0_3, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 5, 1, 1, 0, 
"U 'TH1' - 10 - hist h - - 0 - order "
"D - - 10 - acoeffs D - - 10 - bcoeffs "
"U 'TH1' - 0 '0' out", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, unsigned int, const double*, const double*, TH1*))(&dmtpc::waveform::IIRFilter) ), 0);
   G__memfunc_setup("FIRFilter",839,G__DmtpcWaveformCint_169_0_4, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 10 - hist h - - 0 - order "
"D - - 10 - bcoeffs U 'TH1' - 0 - out", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, unsigned int, const double*, TH1*))(&dmtpc::waveform::FIRFilter) ), 0);
   G__memfunc_setup("butterworthBandStop",2021,G__DmtpcWaveformCint_169_0_5, 100, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - w0 d - - 0 - delta "
"h - - 0 - n D - - 2 - acoeffs "
"D - - 2 - bcoeffs", (char*)NULL, (void*) G__func2void( (double (*)(double, double, unsigned int, double**, double**))(&dmtpc::waveform::butterworthBandStop) ), 0);
   G__memfunc_setup("butterworthBandPass",2006,G__DmtpcWaveformCint_169_0_6, 100, -1, -1, 0, 5, 1, 1, 0, 
"d - - 0 - w0 d - - 0 - delta "
"h - - 0 - n D - - 2 - acoeffs "
"D - - 2 - bcoeffs", (char*)NULL, (void*) G__func2void( (double (*)(double, double, unsigned int, double**, double**))(&dmtpc::waveform::butterworthBandPass) ), 0);
   G__memfunc_setup("createFirOutputHist",1982,G__DmtpcWaveformCint_169_0_7, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 10 - in i - - 0 - nkernel", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, int))(&dmtpc::waveform::createFirOutputHist) ), 0);
   G__memfunc_setup("createFirOutputHist",1982,G__DmtpcWaveformCint_169_0_8, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 3, 1, 1, 0, 
"i - - 0 - nin i - - 0 - nkernel "
"c - - 0 - type", (char*)NULL, (void*) G__func2void( (TH1* (*)(int, int, char))(&dmtpc::waveform::createFirOutputHist) ), 0);
   G__memfunc_setup("runFirFilter",1244,G__DmtpcWaveformCint_169_0_9, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 10 - in U 'TH1' - 0 - out "
"U 'dmtpc::waveform::FirFilter<double>' - 0 - fir", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, TH1*, dmtpc::waveform::FirFilter<double>*))(&dmtpc::waveform::runFirFilter) ), 0);
   G__memfunc_setup("createIirOutputHist",1985,G__DmtpcWaveformCint_169_0_10, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 10 - in i - - 0 - nkernel", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, int))(&dmtpc::waveform::createIirOutputHist) ), 0);
   G__memfunc_setup("createIirOutputHist",1985,G__DmtpcWaveformCint_169_0_11, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 3, 1, 1, 0, 
"i - - 0 - nin i - - 0 - nkernel "
"c - - 0 - type", (char*)NULL, (void*) G__func2void( (TH1* (*)(int, int, char))(&dmtpc::waveform::createIirOutputHist) ), 0);
   G__memfunc_setup("runIirFilter",1247,G__DmtpcWaveformCint_169_0_12, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 10 - in U 'TH1' - 0 - out "
"U 'dmtpc::waveform::IirFilter<double>' - 0 - iir", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, TH1*, dmtpc::waveform::IirFilter<double>*))(&dmtpc::waveform::runIirFilter) ), 0);
   G__memfunc_setup("zeroSupress",1205,G__DmtpcWaveformCint_169_0_13, 104, -1, -1, 0, 7, 1, 1, 0, 
"U 'TH1' - 0 - in d - - 0 - zero_level "
"d - - 0 - noise_ceiling h - - 0 - min "
"h - - 0 - window_size D - - 0 '0' mean "
"D - - 0 '0' rms", (char*)NULL, (void*) G__func2void( (unsigned int (*)(TH1*, double, double, unsigned int, unsigned int, double*, double*))(&dmtpc::waveform::zeroSupress) ), 0);
   G__memfunc_setup("cropZeros",967,G__DmtpcWaveformCint_169_0_14, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 10 - in U 'TH1' - 0 '0' out", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, TH1*))(&dmtpc::waveform::cropZeros) ), 0);
   G__memfunc_setup("gausConv",838,G__DmtpcWaveformCint_169_0_15, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 5, 1, 1, 0, 
"U 'TH1' - 10 - in d - - 0 - sigma "
"g - - 0 'true' rmEdge d - - 0 '0.01' cut "
"C - - 10 '\"gausConv\"' name", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, double, bool, double, const char*))(&dmtpc::waveform::gausConv) ), 0);
   G__memfunc_setup("convolution",1216,G__DmtpcWaveformCint_169_0_16, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TH1), -1, 0, 5, 1, 1, 0, 
"U 'TH1' - 10 - hist i - - 0 - N "
"D - - 10 - arr g - - 0 'true' removeEdges "
"C - - 10 '\"convolution\"' name", (char*)NULL, (void*) G__func2void( (TH1* (*)(const TH1*, int, const double*, bool, const char*))(&dmtpc::waveform::convolution) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLPulse(void) {
   /* dmtpc::waveform::Pulse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse));
   G__memfunc_setup("Pulse",521,G__DmtpcWaveformCint_170_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Pulse",521,G__DmtpcWaveformCint_170_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 0, 1, 1, 1, 0, "i - - 0 - nb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getName",705,G__DmtpcWaveformCint_170_0_4, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBin",601,G__DmtpcWaveformCint_170_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPeakBin",986,G__DmtpcWaveformCint_170_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulseHeight",1454,G__DmtpcWaveformCint_170_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulseHeight",1442,G__DmtpcWaveformCint_170_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPeak",717,G__DmtpcWaveformCint_170_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPeak",705,G__DmtpcWaveformCint_170_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulseHeightTime",1853,G__DmtpcWaveformCint_170_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulseHeightTime",1841,G__DmtpcWaveformCint_170_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPeakTime",1116,G__DmtpcWaveformCint_170_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPeakTime",1104,G__DmtpcWaveformCint_170_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulseStartTime",1778,G__DmtpcWaveformCint_170_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulseStartTime",1766,G__DmtpcWaveformCint_170_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStartTime",1257,G__DmtpcWaveformCint_170_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStartTime",1245,G__DmtpcWaveformCint_170_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulseStartBin",1660,G__DmtpcWaveformCint_170_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulseStartBin",1648,G__DmtpcWaveformCint_170_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStartBin",1139,G__DmtpcWaveformCint_170_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStartBin",1127,G__DmtpcWaveformCint_170_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulseEndTime",1531,G__DmtpcWaveformCint_170_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulseEndTime",1519,G__DmtpcWaveformCint_170_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEndTime",1010,G__DmtpcWaveformCint_170_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEndTime",998,G__DmtpcWaveformCint_170_0_26, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulseEndBin",1413,G__DmtpcWaveformCint_170_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulseEndBin",1401,G__DmtpcWaveformCint_170_0_28, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEndBin",892,G__DmtpcWaveformCint_170_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEndBin",880,G__DmtpcWaveformCint_170_0_30, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPulseIntegral",1675,G__DmtpcWaveformCint_170_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPulseIntegral",1663,G__DmtpcWaveformCint_170_0_32, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIntegral",1154,G__DmtpcWaveformCint_170_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIntegral",1142,G__DmtpcWaveformCint_170_0_34, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__DmtpcWaveformCint_170_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_ostream<char,char_traits<char> >' 'ostream' 1 '::std::cout' out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_170_0_36, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::Pulse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_170_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::Pulse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_170_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::Pulse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_170_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::Pulse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_170_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_170_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::Pulse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_170_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::Pulse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_170_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::Pulse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_170_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::Pulse::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Pulse", 521, G__DmtpcWaveformCint_170_0_48, (int) ('i'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::Pulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Pulse", 647, G__DmtpcWaveformCint_170_0_49, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_170_0_50, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::Pulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLCspPulse(void) {
   /* dmtpc::waveform::CspPulse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse));
   G__memfunc_setup("CspPulse",815,G__DmtpcWaveformCint_171_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CspPulse",815,G__DmtpcWaveformCint_171_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 0, 1, 1, 1, 0, "i - - 0 - nb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CspPulse",815,G__DmtpcWaveformCint_171_0_3, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::Pulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getRise0",771,G__DmtpcWaveformCint_171_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise10",820,G__DmtpcWaveformCint_171_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise25",826,G__DmtpcWaveformCint_171_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise50",824,G__DmtpcWaveformCint_171_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise75",831,G__DmtpcWaveformCint_171_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise90",828,G__DmtpcWaveformCint_171_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall0",751,G__DmtpcWaveformCint_171_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall10",800,G__DmtpcWaveformCint_171_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall25",806,G__DmtpcWaveformCint_171_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall50",804,G__DmtpcWaveformCint_171_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall75",811,G__DmtpcWaveformCint_171_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall90",808,G__DmtpcWaveformCint_171_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise",735,G__DmtpcWaveformCint_171_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise0",783,G__DmtpcWaveformCint_171_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise10",832,G__DmtpcWaveformCint_171_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise25",838,G__DmtpcWaveformCint_171_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise50",836,G__DmtpcWaveformCint_171_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise75",843,G__DmtpcWaveformCint_171_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise90",840,G__DmtpcWaveformCint_171_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall",715,G__DmtpcWaveformCint_171_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall0",763,G__DmtpcWaveformCint_171_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall10",812,G__DmtpcWaveformCint_171_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall25",818,G__DmtpcWaveformCint_171_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall50",816,G__DmtpcWaveformCint_171_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall75",823,G__DmtpcWaveformCint_171_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall90",820,G__DmtpcWaveformCint_171_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_171_0_31, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::CspPulse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_171_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::CspPulse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_171_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::CspPulse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_171_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::CspPulse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_171_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_171_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::CspPulse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_171_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::CspPulse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_171_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::CspPulse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_171_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::CspPulse::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("CspPulse", 815, G__DmtpcWaveformCint_171_0_43, (int) ('i'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::CspPulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CspPulse", 941, G__DmtpcWaveformCint_171_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_171_0_45, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::CspPulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLCspWaveform(void) {
   /* dmtpc::waveform::CspWaveform */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform));
   G__memfunc_setup("CspWaveform",1133,G__DmtpcWaveformCint_188_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform), -1, 0, 1, 1, 1, 0, "i - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CspWaveform",1133,G__DmtpcWaveformCint_188_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::CspWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__DmtpcWaveformCint_188_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::CspPulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DmtpcWaveformCint_188_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::CspPulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DmtpcWaveformCint_188_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::CspPulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rm",223,G__DmtpcWaveformCint_188_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearPulse",1040,G__DmtpcWaveformCint_188_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcWaveformCint_188_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DmtpcWaveformCint_188_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DmtpcWaveformCint_188_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeSecs",1117,G__DmtpcWaveformCint_188_0_11, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeNsecs",1227,G__DmtpcWaveformCint_188_0_12, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBase",699,G__DmtpcWaveformCint_188_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRMS",562,G__DmtpcWaveformCint_188_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMax",803,G__DmtpcWaveformCint_188_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMaxTime",1202,G__DmtpcWaveformCint_188_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMaxBin",1084,G__DmtpcWaveformCint_188_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMin",801,G__DmtpcWaveformCint_188_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMinTime",1200,G__DmtpcWaveformCint_188_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMinBin",1082,G__DmtpcWaveformCint_188_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeSecs",1129,G__DmtpcWaveformCint_188_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeNsecs",1239,G__DmtpcWaveformCint_188_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBase",711,G__DmtpcWaveformCint_188_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRMS",574,G__DmtpcWaveformCint_188_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMax",815,G__DmtpcWaveformCint_188_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMaxTime",1214,G__DmtpcWaveformCint_188_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMaxBin",1096,G__DmtpcWaveformCint_188_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMin",813,G__DmtpcWaveformCint_188_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMinTime",1212,G__DmtpcWaveformCint_188_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMinBin",1094,G__DmtpcWaveformCint_188_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DmtpcWaveformCint_188_0_31, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::CspWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_188_0_32, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_188_0_33, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_188_0_34, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_188_0_35, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_188_0_36, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_188_0_37, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_188_0_38, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::CspWaveform::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_188_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::CspWaveform::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_188_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::CspWaveform::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_188_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::CspWaveform::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_188_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_188_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::CspWaveform::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_188_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::CspWaveform::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_188_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::CspWaveform::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_188_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::CspWaveform::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CspWaveform", 1259, G__DmtpcWaveformCint_188_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLCspWfVector(void) {
   /* dmtpc::waveform::CspWfVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector));
   G__memfunc_setup("CspWfVector",1110,G__DmtpcWaveformCint_193_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector), -1, 0, 4, 1, 1, 0, 
"i - - 0 '0' n i - - 0 '0' bid "
"i - - 0 '0' cid C - - 10 '\"CSP\"' nm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CspWfVector",1110,G__DmtpcWaveformCint_193_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::CspWfVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getName",705,G__DmtpcWaveformCint_193_0_4, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBoard",820,G__DmtpcWaveformCint_193_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChan",710,G__DmtpcWaveformCint_193_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBoard",808,G__DmtpcWaveformCint_193_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChan",698,G__DmtpcWaveformCint_193_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DmtpcWaveformCint_193_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__DmtpcWaveformCint_193_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::CspWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DmtpcWaveformCint_193_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::CspWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DmtpcWaveformCint_193_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::CspWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rm",223,G__DmtpcWaveformCint_193_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearWf",708,G__DmtpcWaveformCint_193_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcWaveformCint_193_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DmtpcWaveformCint_193_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DmtpcWaveformCint_193_0_17, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::CspWfVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_193_0_18, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_193_0_19, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_193_0_20, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_193_0_21, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_193_0_22, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_193_0_23, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_193_0_24, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 2, 1, 1, 9, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_193_0_25, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 2, 1, 1, 9, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_193_0_26, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_193_0_27, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse), -1, 1, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_193_0_28, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::CspWfVector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_193_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::CspWfVector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_193_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::CspWfVector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_193_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::CspWfVector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_193_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_193_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::CspWfVector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_193_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::CspWfVector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_193_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::CspWfVector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_193_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::CspWfVector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~CspWfVector", 1236, G__DmtpcWaveformCint_193_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLFastPulse(void) {
   /* dmtpc::waveform::FastPulse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse));
   G__memfunc_setup("FastPulse",919,G__DmtpcWaveformCint_198_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastPulse",919,G__DmtpcWaveformCint_198_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 0, 1, 1, 1, 0, "i - - 0 - nb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastPulse",919,G__DmtpcWaveformCint_198_0_3, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::Pulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getFastPeak",1103,G__DmtpcWaveformCint_198_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlowPeak",1126,G__DmtpcWaveformCint_198_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFastPeakTime",1502,G__DmtpcWaveformCint_198_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlowPeakTime",1525,G__DmtpcWaveformCint_198_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFastPeakBin",1384,G__DmtpcWaveformCint_198_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlowPeakBin",1407,G__DmtpcWaveformCint_198_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTroughHeight",1554,G__DmtpcWaveformCint_198_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTroughTime",1352,G__DmtpcWaveformCint_198_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTroughBin",1234,G__DmtpcWaveformCint_198_0_13, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFastRise0",1169,G__DmtpcWaveformCint_198_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFastRise10",1218,G__DmtpcWaveformCint_198_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFastRise25",1224,G__DmtpcWaveformCint_198_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFastRise50",1222,G__DmtpcWaveformCint_198_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFastRise75",1229,G__DmtpcWaveformCint_198_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFastRise90",1226,G__DmtpcWaveformCint_198_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlowFall0",1172,G__DmtpcWaveformCint_198_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlowFall10",1221,G__DmtpcWaveformCint_198_0_21, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlowFall25",1227,G__DmtpcWaveformCint_198_0_22, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlowFall50",1225,G__DmtpcWaveformCint_198_0_23, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlowFall75",1232,G__DmtpcWaveformCint_198_0_24, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlowFall90",1229,G__DmtpcWaveformCint_198_0_25, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise0",771,G__DmtpcWaveformCint_198_0_26, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise10",820,G__DmtpcWaveformCint_198_0_27, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise25",826,G__DmtpcWaveformCint_198_0_28, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise50",824,G__DmtpcWaveformCint_198_0_29, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise75",831,G__DmtpcWaveformCint_198_0_30, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise90",828,G__DmtpcWaveformCint_198_0_31, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall0",751,G__DmtpcWaveformCint_198_0_32, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall10",800,G__DmtpcWaveformCint_198_0_33, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall25",806,G__DmtpcWaveformCint_198_0_34, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall50",804,G__DmtpcWaveformCint_198_0_35, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall75",811,G__DmtpcWaveformCint_198_0_36, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall90",808,G__DmtpcWaveformCint_198_0_37, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastPeak",1115,G__DmtpcWaveformCint_198_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowPeak",1138,G__DmtpcWaveformCint_198_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastPeakTime",1514,G__DmtpcWaveformCint_198_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowPeakTime",1537,G__DmtpcWaveformCint_198_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastPeakBin",1396,G__DmtpcWaveformCint_198_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowPeakBin",1419,G__DmtpcWaveformCint_198_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTroughHeight",1566,G__DmtpcWaveformCint_198_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTroughTime",1364,G__DmtpcWaveformCint_198_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTroughBin",1246,G__DmtpcWaveformCint_198_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastRise",1133,G__DmtpcWaveformCint_198_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastRise0",1181,G__DmtpcWaveformCint_198_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastRise10",1230,G__DmtpcWaveformCint_198_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastRise25",1236,G__DmtpcWaveformCint_198_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastRise50",1234,G__DmtpcWaveformCint_198_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastRise75",1241,G__DmtpcWaveformCint_198_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFastRise90",1238,G__DmtpcWaveformCint_198_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowFall",1136,G__DmtpcWaveformCint_198_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowFall0",1184,G__DmtpcWaveformCint_198_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowFall10",1233,G__DmtpcWaveformCint_198_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowFall25",1239,G__DmtpcWaveformCint_198_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowFall50",1237,G__DmtpcWaveformCint_198_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowFall75",1244,G__DmtpcWaveformCint_198_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlowFall90",1241,G__DmtpcWaveformCint_198_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise",735,G__DmtpcWaveformCint_198_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise0",783,G__DmtpcWaveformCint_198_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise10",832,G__DmtpcWaveformCint_198_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise25",838,G__DmtpcWaveformCint_198_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise50",836,G__DmtpcWaveformCint_198_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise75",843,G__DmtpcWaveformCint_198_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise90",840,G__DmtpcWaveformCint_198_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall",715,G__DmtpcWaveformCint_198_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall0",763,G__DmtpcWaveformCint_198_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall10",812,G__DmtpcWaveformCint_198_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall25",818,G__DmtpcWaveformCint_198_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall50",816,G__DmtpcWaveformCint_198_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall75",823,G__DmtpcWaveformCint_198_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall90",820,G__DmtpcWaveformCint_198_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_198_0_75, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::FastPulse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_198_0_76, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::FastPulse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_198_0_77, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::FastPulse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_198_0_78, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::FastPulse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_198_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_198_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::FastPulse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_198_0_84, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::FastPulse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_198_0_85, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::FastPulse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_198_0_86, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::FastPulse::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("FastPulse", 919, G__DmtpcWaveformCint_198_0_87, (int) ('i'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::FastPulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FastPulse", 1045, G__DmtpcWaveformCint_198_0_88, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_198_0_89, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::FastPulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLFastWaveform(void) {
   /* dmtpc::waveform::FastWaveform */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform));
   G__memfunc_setup("FastWaveform",1237,G__DmtpcWaveformCint_199_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform), -1, 0, 1, 1, 1, 0, "i - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastWaveform",1237,G__DmtpcWaveformCint_199_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::FastWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__DmtpcWaveformCint_199_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::FastPulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DmtpcWaveformCint_199_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::FastPulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DmtpcWaveformCint_199_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::FastPulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rm",223,G__DmtpcWaveformCint_199_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearPulse",1040,G__DmtpcWaveformCint_199_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcWaveformCint_199_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DmtpcWaveformCint_199_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DmtpcWaveformCint_199_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeSecs",1117,G__DmtpcWaveformCint_199_0_11, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeNsecs",1227,G__DmtpcWaveformCint_199_0_12, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBase",699,G__DmtpcWaveformCint_199_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRMS",562,G__DmtpcWaveformCint_199_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMax",803,G__DmtpcWaveformCint_199_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMaxTime",1202,G__DmtpcWaveformCint_199_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMaxBin",1084,G__DmtpcWaveformCint_199_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMin",801,G__DmtpcWaveformCint_199_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMinTime",1200,G__DmtpcWaveformCint_199_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMinBin",1082,G__DmtpcWaveformCint_199_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeSecs",1129,G__DmtpcWaveformCint_199_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeNsecs",1239,G__DmtpcWaveformCint_199_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBase",711,G__DmtpcWaveformCint_199_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRMS",574,G__DmtpcWaveformCint_199_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMax",815,G__DmtpcWaveformCint_199_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMaxTime",1214,G__DmtpcWaveformCint_199_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMaxBin",1096,G__DmtpcWaveformCint_199_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMin",813,G__DmtpcWaveformCint_199_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMinTime",1212,G__DmtpcWaveformCint_199_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMinBin",1094,G__DmtpcWaveformCint_199_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DmtpcWaveformCint_199_0_31, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::FastWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_199_0_32, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_199_0_33, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_199_0_34, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_199_0_35, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_199_0_36, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_199_0_37, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_199_0_38, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::FastWaveform::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_199_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::FastWaveform::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_199_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::FastWaveform::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_199_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::FastWaveform::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_199_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_199_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::FastWaveform::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_199_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::FastWaveform::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_199_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::FastWaveform::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_199_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::FastWaveform::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FastWaveform", 1363, G__DmtpcWaveformCint_199_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLFastWfVector(void) {
   /* dmtpc::waveform::FastWfVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector));
   G__memfunc_setup("FastWfVector",1214,G__DmtpcWaveformCint_204_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector), -1, 0, 4, 1, 1, 0, 
"i - - 0 '0' n i - - 0 '0' bid "
"i - - 0 '0' cid C - - 10 '\"Pulse\"' nm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FastWfVector",1214,G__DmtpcWaveformCint_204_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::FastWfVector' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getName",705,G__DmtpcWaveformCint_204_0_4, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBoard",820,G__DmtpcWaveformCint_204_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChan",710,G__DmtpcWaveformCint_204_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBoard",808,G__DmtpcWaveformCint_204_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChan",698,G__DmtpcWaveformCint_204_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DmtpcWaveformCint_204_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__DmtpcWaveformCint_204_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::FastWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DmtpcWaveformCint_204_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::FastWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DmtpcWaveformCint_204_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::FastWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rm",223,G__DmtpcWaveformCint_204_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearWf",708,G__DmtpcWaveformCint_204_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcWaveformCint_204_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DmtpcWaveformCint_204_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DmtpcWaveformCint_204_0_17, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::FastWfVector' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_204_0_18, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_204_0_19, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_204_0_20, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_204_0_21, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_204_0_22, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_204_0_23, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_204_0_24, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 2, 1, 1, 9, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_204_0_25, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 2, 1, 1, 9, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_204_0_26, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_204_0_27, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse), -1, 1, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_204_0_28, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::FastWfVector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_204_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::FastWfVector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_204_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::FastWfVector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_204_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::FastWfVector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_204_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_204_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::FastWfVector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_204_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::FastWfVector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_204_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::FastWfVector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_204_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::FastWfVector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~FastWfVector", 1340, G__DmtpcWaveformCint_204_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLFirFilterlEfloatgR(void) {
   /* dmtpc::waveform::FirFilter<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR));
   G__memfunc_setup("FirFilter<float>",1559,G__DmtpcWaveformCint_209_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirFilter<float>",1559,G__DmtpcWaveformCint_209_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR), -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirFilter<float>",1559,G__DmtpcWaveformCint_209_0_3, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR), -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirFilter<float>",1559,G__DmtpcWaveformCint_209_0_4, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirFilter<float>",1559,G__DmtpcWaveformCint_209_0_5, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outputSize",1100,G__DmtpcWaveformCint_209_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firCoeffsSize",1330,G__DmtpcWaveformCint_209_0_7, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateOutputSize",2010,G__DmtpcWaveformCint_209_0_8, 107, -1, G__defined_typename("size_t"), 0, 1, 1, 1, 8, "k - 'size_t' 0 - insize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirCoeffs",1219,G__DmtpcWaveformCint_209_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirCoeffs",1219,G__DmtpcWaveformCint_209_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirCoeffs",1219,G__DmtpcWaveformCint_209_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirCoeffs",1219,G__DmtpcWaveformCint_209_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("output",689,G__DmtpcWaveformCint_209_0_13, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("output",689,G__DmtpcWaveformCint_209_0_14, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutput",977,G__DmtpcWaveformCint_209_0_15, 70, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutput",977,G__DmtpcWaveformCint_209_0_16, 70, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firCoeffs",919,G__DmtpcWaveformCint_209_0_17, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firCoeffs",919,G__DmtpcWaveformCint_209_0_18, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("normalize",977,G__DmtpcWaveformCint_209_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copyOutput",1100,G__DmtpcWaveformCint_209_0_20, 121, -1, -1, 0, 1, 1, 1, 8, "F - - 0 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyOutput",1100,G__DmtpcWaveformCint_209_0_21, 121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyOutput",1100,G__DmtpcWaveformCint_209_0_22, 121, -1, -1, 0, 1, 1, 1, 8, "D - - 0 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyOutput",1100,G__DmtpcWaveformCint_209_0_23, 121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n C - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n S - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n I - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n L - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n B - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n R - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n H - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n K - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >' 'vector<char>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >' 'vector<short>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >' 'vector<long>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_44, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n F - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_45, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n D - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_46, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n C - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_47, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n S - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_48, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n I - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_49, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n L - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_50, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n B - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_51, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n R - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_52, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n H - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_53, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n K - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_54, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_55, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_56, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >' 'vector<char>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_57, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >' 'vector<short>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_58, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_59, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >' 'vector<long>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_60, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_61, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_62, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_209_0_63, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("transferFunction",1707,G__DmtpcWaveformCint_209_0_64, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - - 0 - zr d - - 0 - zi "
"d - - 1 - ztr d - - 1 - zti", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("frequencyResponse",1825,G__DmtpcWaveformCint_209_0_65, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - w d - - 1 - re "
"d - - 1 - im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("powerAttenuation",1721,G__DmtpcWaveformCint_209_0_66, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("magnitudeAttenuation",2122,G__DmtpcWaveformCint_209_0_67, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("phaseShift",1039,G__DmtpcWaveformCint_209_0_68, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("phaseDelay",1024,G__DmtpcWaveformCint_209_0_69, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("groupDelay",1052,G__DmtpcWaveformCint_209_0_70, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FirFilter<float>", 1559, G__DmtpcWaveformCint_209_0_71, (int) ('i'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::FirFilter<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FirFilter<float>", 1685, G__DmtpcWaveformCint_209_0_72, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_209_0_73, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::FirFilter<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLFirFilterlEdoublegR(void) {
   /* dmtpc::waveform::FirFilter<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR));
   G__memfunc_setup("FirFilter<double>",1660,G__DmtpcWaveformCint_214_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirFilter<double>",1660,G__DmtpcWaveformCint_214_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR), -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirFilter<double>",1660,G__DmtpcWaveformCint_214_0_3, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR), -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirFilter<double>",1660,G__DmtpcWaveformCint_214_0_4, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FirFilter<double>",1660,G__DmtpcWaveformCint_214_0_5, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outputSize",1100,G__DmtpcWaveformCint_214_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firCoeffsSize",1330,G__DmtpcWaveformCint_214_0_7, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateOutputSize",2010,G__DmtpcWaveformCint_214_0_8, 107, -1, G__defined_typename("size_t"), 0, 1, 1, 1, 8, "k - 'size_t' 0 - insize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirCoeffs",1219,G__DmtpcWaveformCint_214_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirCoeffs",1219,G__DmtpcWaveformCint_214_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirCoeffs",1219,G__DmtpcWaveformCint_214_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirCoeffs",1219,G__DmtpcWaveformCint_214_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - ker", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("output",689,G__DmtpcWaveformCint_214_0_13, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("output",689,G__DmtpcWaveformCint_214_0_14, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutput",977,G__DmtpcWaveformCint_214_0_15, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutput",977,G__DmtpcWaveformCint_214_0_16, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firCoeffs",919,G__DmtpcWaveformCint_214_0_17, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("firCoeffs",919,G__DmtpcWaveformCint_214_0_18, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("normalize",977,G__DmtpcWaveformCint_214_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("copyOutput",1100,G__DmtpcWaveformCint_214_0_20, 121, -1, -1, 0, 1, 1, 1, 8, "F - - 0 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyOutput",1100,G__DmtpcWaveformCint_214_0_21, 121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyOutput",1100,G__DmtpcWaveformCint_214_0_22, 121, -1, -1, 0, 1, 1, 1, 8, "D - - 0 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyOutput",1100,G__DmtpcWaveformCint_214_0_23, 121, -1, -1, 0, 1, 1, 1, 8, "u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n C - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n S - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n I - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n L - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n B - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n R - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n H - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n K - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >' 'vector<char>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >' 'vector<short>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >' 'vector<long>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_44, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n F - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_45, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n D - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_46, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n C - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_47, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n S - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_48, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n I - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_49, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n L - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_50, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n B - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_51, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n R - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_52, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n H - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_53, 121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n K - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_54, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_55, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_56, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >' 'vector<char>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_57, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >' 'vector<short>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_58, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_59, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >' 'vector<long>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_60, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_61, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_62, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_214_0_63, 121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("transferFunction",1707,G__DmtpcWaveformCint_214_0_64, 121, -1, -1, 0, 4, 1, 1, 8, 
"d - - 0 - zr d - - 0 - zi "
"d - - 1 - ztr d - - 1 - zti", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("frequencyResponse",1825,G__DmtpcWaveformCint_214_0_65, 121, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - w d - - 1 - re "
"d - - 1 - im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("powerAttenuation",1721,G__DmtpcWaveformCint_214_0_66, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("magnitudeAttenuation",2122,G__DmtpcWaveformCint_214_0_67, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("phaseShift",1039,G__DmtpcWaveformCint_214_0_68, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("phaseDelay",1024,G__DmtpcWaveformCint_214_0_69, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("groupDelay",1052,G__DmtpcWaveformCint_214_0_70, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("FirFilter<double>", 1660, G__DmtpcWaveformCint_214_0_71, (int) ('i'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::FirFilter<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FirFilter<double>", 1786, G__DmtpcWaveformCint_214_0_72, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_214_0_73, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::FirFilter<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLfir(void) {
   /* dmtpc::waveform::fir */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLfir));
   G__memfunc_setup("raisedCosine",1241,G__DmtpcWaveformCint_215_0_1, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 6, 1, 1, 0, 
"i - - 0 - halfwidth d - - 0 '1' a0 "
"d - - 0 '0' a1 d - - 0 '0' a2 "
"d - - 0 '0' a3 d - - 0 '0' a4", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, double, double, double, double, double))(&dmtpc::waveform::fir::raisedCosine) ), 0);
   G__memfunc_setup("raisedCosine",1241,G__DmtpcWaveformCint_215_0_2, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"i - - 0 - halfwidth D - - 0 - a", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, double*))(&dmtpc::waveform::fir::raisedCosine) ), 0);
   G__memfunc_setup("blackman",825,G__DmtpcWaveformCint_215_0_3, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"i - - 0 - halfwidth d - - 0 '0.16' alpha", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, double))(&dmtpc::waveform::fir::blackman) ), 0);
   G__memfunc_setup("blackmanHarris",1442,G__DmtpcWaveformCint_215_0_4, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::blackmanHarris) ), 0);
   G__memfunc_setup("blackmanNutall",1449,G__DmtpcWaveformCint_215_0_5, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::blackmanNutall) ), 0);
   G__memfunc_setup("bohman",629,G__DmtpcWaveformCint_215_0_6, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::bohman) ), 0);
   G__memfunc_setup("breitWigner",1154,G__DmtpcWaveformCint_215_0_7, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"i - - 0 - halfwidth d - - 0 - gamma", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, double))(&dmtpc::waveform::fir::breitWigner) ), 0);
   G__memfunc_setup("cosine",641,G__DmtpcWaveformCint_215_0_8, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::cosine) ), 0);
   G__memfunc_setup("exponential",1191,G__DmtpcWaveformCint_215_0_9, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"i - - 0 - halfwidth d - - 0 - x0", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, double))(&dmtpc::waveform::fir::exponential) ), 0);
   G__memfunc_setup("fermiDirac",1014,G__DmtpcWaveformCint_215_0_10, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 3, 1, 1, 0, 
"i - - 0 - halfwidth d - - 0 - T "
"d - - 0 - mu", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, double, double))(&dmtpc::waveform::fir::fermiDirac) ), 0);
   G__memfunc_setup("flattop",762,G__DmtpcWaveformCint_215_0_11, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::flattop) ), 0);
   G__memfunc_setup("gaussian",859,G__DmtpcWaveformCint_215_0_12, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"i - - 0 - halfwidth d - - 0 - sigma", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, double))(&dmtpc::waveform::fir::gaussian) ), 0);
   G__memfunc_setup("hamming",737,G__DmtpcWaveformCint_215_0_13, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::hamming) ), 0);
   G__memfunc_setup("hann",421,G__DmtpcWaveformCint_215_0_14, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::hann) ), 0);
   G__memfunc_setup("kaiser",639,G__DmtpcWaveformCint_215_0_15, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"i - - 0 - halfwidth d - - 0 '3' a", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, double))(&dmtpc::waveform::fir::kaiser) ), 0);
   G__memfunc_setup("lanczos",762,G__DmtpcWaveformCint_215_0_16, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::lanczos) ), 0);
   G__memfunc_setup("nutall",656,G__DmtpcWaveformCint_215_0_17, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::nutall) ), 0);
   G__memfunc_setup("rectangle",949,G__DmtpcWaveformCint_215_0_18, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::rectangle) ), 0);
   G__memfunc_setup("savitzkyGolay",1409,G__DmtpcWaveformCint_215_0_19, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 3, 1, 1, 0, 
"i - - 0 - halfwidth i - - 0 - order "
"i - - 0 '0' nder", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int, int, int))(&dmtpc::waveform::fir::savitzkyGolay) ), 0);
   G__memfunc_setup("sinc",429,G__DmtpcWaveformCint_215_0_20, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::sinc) ), 0);
   G__memfunc_setup("sincSquared",1154,G__DmtpcWaveformCint_215_0_21, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::sincSquared) ), 0);
   G__memfunc_setup("triangle",854,G__DmtpcWaveformCint_215_0_22, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::triangle) ), 0);
   G__memfunc_setup("exponentialConv",1597,G__DmtpcWaveformCint_215_0_23, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"d - - 0 - x0 d - - 0 '0.01' cut", (char*)NULL, (void*) G__func2void( (vector<double> (*)(double, double))(&dmtpc::waveform::fir::exponentialConv) ), 0);
   G__memfunc_setup("gaussianConv",1265,G__DmtpcWaveformCint_215_0_24, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 2, 1, 1, 0, 
"d - - 0 - sigma d - - 0 '0.01' cut", (char*)NULL, (void*) G__func2void( (vector<double> (*)(double, double))(&dmtpc::waveform::fir::gaussianConv) ), 0);
   G__memfunc_setup("triangleConv",1260,G__DmtpcWaveformCint_215_0_25, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 1, 1, 1, 0, "i - - 0 - halfwidth", (char*)NULL, (void*) G__func2void( (vector<double> (*)(int))(&dmtpc::waveform::fir::triangleConv) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLFourierTransform(void) {
   /* dmtpc::waveform::FourierTransform */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform));
   G__memfunc_setup("FourierTransform",1688,G__DmtpcWaveformCint_218_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform), -1, 0, 2, 1, 1, 0, 
"i - - 0 - n h - - 0 'FFTW_MEASURE' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getN",398,G__DmtpcWaveformCint_218_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DmtpcWaveformCint_218_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fftSize",731,G__DmtpcWaveformCint_218_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("frequency",978,G__DmtpcWaveformCint_218_0_5, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("angularFrequency",1692,G__DmtpcWaveformCint_218_0_6, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("wavelength",1077,G__DmtpcWaveformCint_218_0_7, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWaveform",1171,G__DmtpcWaveformCint_218_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - wf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWaveform",1171,G__DmtpcWaveformCint_218_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "F - - 10 - wf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWaveform",1171,G__DmtpcWaveformCint_218_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFFT",556,G__DmtpcWaveformCint_218_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'fftw_complex' - 10 - cx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFFT",556,G__DmtpcWaveformCint_218_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 10 - r D - - 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFFT",556,G__DmtpcWaveformCint_218_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - r u 'vector<double,allocator<double> >' 'vector<double>' 11 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fft",320,G__DmtpcWaveformCint_218_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fft",320,G__DmtpcWaveformCint_218_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - wf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fft",320,G__DmtpcWaveformCint_218_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fftInverse",1052,G__DmtpcWaveformCint_218_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fftInverse",1052,G__DmtpcWaveformCint_218_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'fftw_complex' - 10 - cx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fftInverse",1052,G__DmtpcWaveformCint_218_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 10 - r D - - 10 - im", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fftInverse",1052,G__DmtpcWaveformCint_218_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - x u 'vector<double,allocator<double> >' 'vector<double>' 11 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("autocorrelation",1627,G__DmtpcWaveformCint_218_0_21, 68, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("autocorrelation",1627,G__DmtpcWaveformCint_218_0_22, 68, -1, -1, 0, 1, 1, 1, 1, "D - - 10 - wf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("autocorrelation",1627,G__DmtpcWaveformCint_218_0_23, 68, -1, -1, 0, 1, 1, 1, 1, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spectralDensity",1598,G__DmtpcWaveformCint_218_0_24, 68, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spectralDensity",1598,G__DmtpcWaveformCint_218_0_25, 68, -1, -1, 0, 1, 1, 1, 1, "D - - 10 - wf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("spectralDensity",1598,G__DmtpcWaveformCint_218_0_26, 68, -1, -1, 0, 1, 1, 1, 1, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFilter",946,G__DmtpcWaveformCint_218_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFilter",946,G__DmtpcWaveformCint_218_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 10 - x D - - 10 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFilterPolar",1456,G__DmtpcWaveformCint_218_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 10 - r D - - 10 - phi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFilter",946,G__DmtpcWaveformCint_218_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'fftw_complex' - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiply",896,G__DmtpcWaveformCint_218_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiply",896,G__DmtpcWaveformCint_218_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 10 - x D - - 10 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("multiply",896,G__DmtpcWaveformCint_218_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "U 'fftw_complex' - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convolution",1216,G__DmtpcWaveformCint_218_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convolution",1216,G__DmtpcWaveformCint_218_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"D - - 10 - x D - - 10 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convolution",1216,G__DmtpcWaveformCint_218_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "U 'fftw_complex' - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("applyFilter",1164,G__DmtpcWaveformCint_218_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearFilter",1133,G__DmtpcWaveformCint_218_0_38, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("useFilter",947,G__DmtpcWaveformCint_218_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 'true' use", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFilterUsed",1235,G__DmtpcWaveformCint_218_0_40, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWaveform",1159,G__DmtpcWaveformCint_218_0_41, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWaveform",1159,G__DmtpcWaveformCint_218_0_42, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFFT",544,G__DmtpcWaveformCint_218_0_43, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_fftw_complex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFFT",544,G__DmtpcWaveformCint_218_0_44, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_fftw_complex), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFilteredFFT",1359,G__DmtpcWaveformCint_218_0_45, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_fftw_complex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFilteredFFT",1359,G__DmtpcWaveformCint_218_0_46, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_fftw_complex), -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRealOutput",1365,G__DmtpcWaveformCint_218_0_47, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRealOutput",1365,G__DmtpcWaveformCint_218_0_48, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInverseFFT",1276,G__DmtpcWaveformCint_218_0_49, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInverseFFT",1276,G__DmtpcWaveformCint_218_0_50, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAutocorrelation",1915,G__DmtpcWaveformCint_218_0_51, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAutocorrelation",1915,G__DmtpcWaveformCint_218_0_52, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpectralDensity",1886,G__DmtpcWaveformCint_218_0_53, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpectralDensity",1886,G__DmtpcWaveformCint_218_0_54, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPowerSpectrum",1696,G__DmtpcWaveformCint_218_0_55, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPowerSpectrum",1696,G__DmtpcWaveformCint_218_0_56, 68, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWaveform",1171,G__DmtpcWaveformCint_218_0_57, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFFT",556,G__DmtpcWaveformCint_218_0_58, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - n d - - 0 - x "
"d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFFT",556,G__DmtpcWaveformCint_218_0_59, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n u 'fftw_complex' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFilteredFFT",1371,G__DmtpcWaveformCint_218_0_60, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - n d - - 0 - x "
"d - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFilteredFFT",1371,G__DmtpcWaveformCint_218_0_61, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n u 'fftw_complex' - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWaveform",1159,G__DmtpcWaveformCint_218_0_62, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRealOutput",1365,G__DmtpcWaveformCint_218_0_63, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInverseFFT",1276,G__DmtpcWaveformCint_218_0_64, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAutocorrelation",1915,G__DmtpcWaveformCint_218_0_65, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpectralDensity",1886,G__DmtpcWaveformCint_218_0_66, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPowerSpectrum",1696,G__DmtpcWaveformCint_218_0_67, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFFTRealPart",1339,G__DmtpcWaveformCint_218_0_68, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFFTImPart",1133,G__DmtpcWaveformCint_218_0_69, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFFTMag2",871,G__DmtpcWaveformCint_218_0_70, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFFTMag",821,G__DmtpcWaveformCint_218_0_71, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFFTPhase",1041,G__DmtpcWaveformCint_218_0_72, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFilteredFFTRealPart",2154,G__DmtpcWaveformCint_218_0_73, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFilteredFFTImPart",1948,G__DmtpcWaveformCint_218_0_74, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFilteredFFTMag2",1686,G__DmtpcWaveformCint_218_0_75, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFilteredFFTMag",1636,G__DmtpcWaveformCint_218_0_76, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFilteredFFTPhase",1856,G__DmtpcWaveformCint_218_0_77, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutputType",1395,G__DmtpcWaveformCint_218_0_78, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outputIsIFFT",1174,G__DmtpcWaveformCint_218_0_79, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outputIsAutocorr",1724,G__DmtpcWaveformCint_218_0_80, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("outputIsSpecDensity",2008,G__DmtpcWaveformCint_218_0_81, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("FourierTransform", 1688, G__DmtpcWaveformCint_218_0_82, (int) ('i'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::FourierTransform' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~FourierTransform", 1814, G__DmtpcWaveformCint_218_0_83, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_218_0_84, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::FourierTransform' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLPMTPulse(void) {
   /* dmtpc::waveform::PMTPulse */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse));
   G__memfunc_setup("PMTPulse",762,G__DmtpcWaveformCint_219_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTPulse",762,G__DmtpcWaveformCint_219_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 0, 1, 1, 1, 0, "i - - 0 - nb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTPulse",762,G__DmtpcWaveformCint_219_0_3, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::Pulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getRise0",771,G__DmtpcWaveformCint_219_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise10",820,G__DmtpcWaveformCint_219_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise25",826,G__DmtpcWaveformCint_219_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise50",824,G__DmtpcWaveformCint_219_0_8, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise75",831,G__DmtpcWaveformCint_219_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRise90",828,G__DmtpcWaveformCint_219_0_10, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall0",751,G__DmtpcWaveformCint_219_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall10",800,G__DmtpcWaveformCint_219_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall25",806,G__DmtpcWaveformCint_219_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall50",804,G__DmtpcWaveformCint_219_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall75",811,G__DmtpcWaveformCint_219_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFall90",808,G__DmtpcWaveformCint_219_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise",735,G__DmtpcWaveformCint_219_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise0",783,G__DmtpcWaveformCint_219_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise10",832,G__DmtpcWaveformCint_219_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise25",838,G__DmtpcWaveformCint_219_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise50",836,G__DmtpcWaveformCint_219_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise75",843,G__DmtpcWaveformCint_219_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRise90",840,G__DmtpcWaveformCint_219_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall",715,G__DmtpcWaveformCint_219_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall0",763,G__DmtpcWaveformCint_219_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall10",812,G__DmtpcWaveformCint_219_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall25",818,G__DmtpcWaveformCint_219_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall50",816,G__DmtpcWaveformCint_219_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall75",823,G__DmtpcWaveformCint_219_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFall90",820,G__DmtpcWaveformCint_219_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_219_0_31, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::PMTPulse::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_219_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::PMTPulse::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_219_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::PMTPulse::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_219_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::PMTPulse::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_219_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_219_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::PMTPulse::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_219_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::PMTPulse::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_219_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::PMTPulse::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_219_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::PMTPulse::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PMTPulse", 762, G__DmtpcWaveformCint_219_0_43, (int) ('i'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::PMTPulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PMTPulse", 888, G__DmtpcWaveformCint_219_0_44, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_219_0_45, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::PMTPulse' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLPMTWaveform(void) {
   /* dmtpc::waveform::PMTWaveform */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform));
   G__memfunc_setup("PMTWaveform",1080,G__DmtpcWaveformCint_220_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform), -1, 0, 1, 1, 1, 0, "i - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTWaveform",1080,G__DmtpcWaveformCint_220_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::PMTWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__DmtpcWaveformCint_220_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::PMTPulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DmtpcWaveformCint_220_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::PMTPulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DmtpcWaveformCint_220_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::PMTPulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rm",223,G__DmtpcWaveformCint_220_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearPulse",1040,G__DmtpcWaveformCint_220_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcWaveformCint_220_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DmtpcWaveformCint_220_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DmtpcWaveformCint_220_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeSecs",1117,G__DmtpcWaveformCint_220_0_11, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeNsecs",1227,G__DmtpcWaveformCint_220_0_12, 104, -1, G__defined_typename("uint32_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBase",699,G__DmtpcWaveformCint_220_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRMS",562,G__DmtpcWaveformCint_220_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMax",803,G__DmtpcWaveformCint_220_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMaxTime",1202,G__DmtpcWaveformCint_220_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMaxBin",1084,G__DmtpcWaveformCint_220_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMin",801,G__DmtpcWaveformCint_220_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMinTime",1200,G__DmtpcWaveformCint_220_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMinBin",1082,G__DmtpcWaveformCint_220_0_20, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeSecs",1129,G__DmtpcWaveformCint_220_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeNsecs",1239,G__DmtpcWaveformCint_220_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'uint32_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBase",711,G__DmtpcWaveformCint_220_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRMS",574,G__DmtpcWaveformCint_220_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMax",815,G__DmtpcWaveformCint_220_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMaxTime",1214,G__DmtpcWaveformCint_220_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMaxBin",1096,G__DmtpcWaveformCint_220_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMin",813,G__DmtpcWaveformCint_220_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMinTime",1212,G__DmtpcWaveformCint_220_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMinBin",1094,G__DmtpcWaveformCint_220_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DmtpcWaveformCint_220_0_31, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::PMTWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_220_0_32, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_220_0_33, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_220_0_34, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_220_0_35, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_220_0_36, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_220_0_37, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_220_0_38, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::PMTWaveform::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_220_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::PMTWaveform::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_220_0_40, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::PMTWaveform::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_220_0_41, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::PMTWaveform::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_220_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_220_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::PMTWaveform::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_220_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::PMTWaveform::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_220_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::PMTWaveform::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_220_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::PMTWaveform::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PMTWaveform", 1206, G__DmtpcWaveformCint_220_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLPMTWfVector(void) {
   /* dmtpc::waveform::PMTWfVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector));
   G__memfunc_setup("PMTWfVector",1057,G__DmtpcWaveformCint_225_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector), -1, 0, 4, 1, 1, 0, 
"i - - 0 '0' n i - - 0 '0' bid "
"i - - 0 '0' cid C - - 10 '\"PMT\"' nm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PMTWfVector",1057,G__DmtpcWaveformCint_225_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::PMTWfVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getName",705,G__DmtpcWaveformCint_225_0_4, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBoard",820,G__DmtpcWaveformCint_225_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChan",710,G__DmtpcWaveformCint_225_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBoard",808,G__DmtpcWaveformCint_225_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChan",698,G__DmtpcWaveformCint_225_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DmtpcWaveformCint_225_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__DmtpcWaveformCint_225_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::PMTWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DmtpcWaveformCint_225_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::PMTWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DmtpcWaveformCint_225_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::PMTWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rm",223,G__DmtpcWaveformCint_225_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearWf",708,G__DmtpcWaveformCint_225_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcWaveformCint_225_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DmtpcWaveformCint_225_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DmtpcWaveformCint_225_0_17, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::PMTWfVector' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_225_0_18, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_225_0_19, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_225_0_20, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_225_0_21, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_225_0_22, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_225_0_23, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_225_0_24, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 2, 1, 1, 9, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_225_0_25, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 2, 1, 1, 9, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_225_0_26, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_225_0_27, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse), -1, 1, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_225_0_28, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::PMTWfVector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_225_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::PMTWfVector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_225_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::PMTWfVector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_225_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::PMTWfVector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_225_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_225_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::PMTWfVector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_225_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::PMTWfVector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_225_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::PMTWfVector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_225_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::PMTWfVector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~PMTWfVector", 1183, G__DmtpcWaveformCint_225_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLSkimWaveform(void) {
   /* dmtpc::waveform::SkimWaveform */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform));
   G__memfunc_setup("SkimWaveform",1243,G__DmtpcWaveformCint_230_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform), -1, 0, 1, 1, 1, 0, "i - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SkimWaveform",1243,G__DmtpcWaveformCint_230_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::SkimWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__DmtpcWaveformCint_230_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::Pulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DmtpcWaveformCint_230_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::Pulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DmtpcWaveformCint_230_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::Pulse' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rm",223,G__DmtpcWaveformCint_230_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearPulse",1040,G__DmtpcWaveformCint_230_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcWaveformCint_230_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DmtpcWaveformCint_230_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DmtpcWaveformCint_230_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTime",719,G__DmtpcWaveformCint_230_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBase",699,G__DmtpcWaveformCint_230_0_12, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRMS",562,G__DmtpcWaveformCint_230_0_13, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMax",803,G__DmtpcWaveformCint_230_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMaxTime",1202,G__DmtpcWaveformCint_230_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMaxBin",1084,G__DmtpcWaveformCint_230_0_16, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMin",801,G__DmtpcWaveformCint_230_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMinTime",1200,G__DmtpcWaveformCint_230_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWfMinBin",1082,G__DmtpcWaveformCint_230_0_19, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTime",731,G__DmtpcWaveformCint_230_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBase",711,G__DmtpcWaveformCint_230_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRMS",574,G__DmtpcWaveformCint_230_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMax",815,G__DmtpcWaveformCint_230_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMaxTime",1214,G__DmtpcWaveformCint_230_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMaxBin",1096,G__DmtpcWaveformCint_230_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMin",813,G__DmtpcWaveformCint_230_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMinTime",1212,G__DmtpcWaveformCint_230_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWfMinBin",1094,G__DmtpcWaveformCint_230_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DmtpcWaveformCint_230_0_29, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::SkimWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_230_0_30, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_230_0_31, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_230_0_32, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_230_0_33, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_230_0_34, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_230_0_35, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_230_0_36, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::SkimWaveform::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_230_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::SkimWaveform::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_230_0_38, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::SkimWaveform::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_230_0_39, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::SkimWaveform::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_230_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_230_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::SkimWaveform::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_230_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::SkimWaveform::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_230_0_46, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::SkimWaveform::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_230_0_47, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::SkimWaveform::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~SkimWaveform", 1369, G__DmtpcWaveformCint_230_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLanalysis(void) {
   /* dmtpc::waveform::analysis */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLanalysis));
   G__memfunc_setup("baseline",835,G__DmtpcWaveformCint_238_0_1, 100, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 10 - hist d - - 1 - rms "
"i - - 0 '1' binMin i - - 0 '100' binMax", (char*)NULL, (void*) G__func2void( (double (*)(const TH1*, double&, int, int))(&dmtpc::waveform::analysis::baseline) ), 0);
   G__memfunc_setup("minbin",637,G__DmtpcWaveformCint_238_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 10 - hist", (char*)NULL, (void*) G__func2void( (int (*)(const TH1*))(&dmtpc::waveform::analysis::minbin) ), 0);
   G__memfunc_setup("maxbin",639,G__DmtpcWaveformCint_238_0_3, 105, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 10 - hist", (char*)NULL, (void*) G__func2void( (int (*)(const TH1*))(&dmtpc::waveform::analysis::maxbin) ), 0);
   G__memfunc_setup("riseTime",834,G__DmtpcWaveformCint_238_0_4, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH1' - 10 - hist u 'vector<double,allocator<double> >' 'vector<double>' 11 - list "
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - values d - - 0 - startTime "
"d - - 0 - endTime g - - 0 'true' fromStart", (char*)NULL, (void*) G__func2void( (void (*)(const TH1*, const vector<double>&, vector<double>&, double, double, bool))(&dmtpc::waveform::analysis::riseTime) ), 0);
   G__memfunc_setup("fallTime",814,G__DmtpcWaveformCint_238_0_5, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH1' - 10 - hist u 'vector<double,allocator<double> >' 'vector<double>' 11 - list "
"u 'vector<double,allocator<double> >' 'vector<double>' 1 - values d - - 0 - startTime "
"d - - 0 - endTime g - - 0 'false' fromStart", (char*)NULL, (void*) G__func2void( (void (*)(const TH1*, const vector<double>&, vector<double>&, double, double, bool))(&dmtpc::waveform::analysis::fallTime) ), 0);
   G__memfunc_setup("isPeak",605,G__DmtpcWaveformCint_238_0_6, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 10 - hist i - - 0 - bin "
"i - - 0 '5' nbins", (char*)NULL, (void*) G__func2void( (bool (*)(const TH1*, int, int))(&dmtpc::waveform::analysis::isPeak) ), 0);
   G__memfunc_setup("isTrough",853,G__DmtpcWaveformCint_238_0_7, 103, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 10 - hist i - - 0 - bin "
"i - - 0 '5' nbins", (char*)NULL, (void*) G__func2void( (bool (*)(const TH1*, int, int))(&dmtpc::waveform::analysis::isTrough) ), 0);
   G__memfunc_setup("integral",854,G__DmtpcWaveformCint_238_0_8, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 10 - hist d - - 0 - start "
"d - - 0 - end", (char*)NULL, (void*) G__func2void( (double (*)(const TH1*, double, double))(&dmtpc::waveform::analysis::integral) ), 0);
   G__memfunc_setup("startTime",957,G__DmtpcWaveformCint_238_0_9, 100, -1, -1, 0, 5, 1, 1, 0, 
"U 'TH1' - 10 - hist i - - 0 - bin "
"d - - 0 - threshold i - - 1 - startBin "
"i - - 0 '-1' minBin", (char*)NULL, (void*) G__func2void( (double (*)(const TH1*, int, double, int&, int))(&dmtpc::waveform::analysis::startTime) ), 0);
   G__memfunc_setup("endTime",710,G__DmtpcWaveformCint_238_0_10, 100, -1, -1, 0, 5, 1, 1, 0, 
"U 'TH1' - 10 - hist i - - 0 - bin "
"d - - 0 - threshold i - - 1 - endBin "
"i - - 0 '-1' maxBin", (char*)NULL, (void*) G__func2void( (double (*)(const TH1*, int, double, int&, int))(&dmtpc::waveform::analysis::endTime) ), 0);
   G__memfunc_setup("peaks",532,G__DmtpcWaveformCint_238_0_11, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 4, 1, 1, 0, 
"U 'TH1' - 10 - hist d - - 0 - threshold "
"i - - 0 '-1' minBin i - - 0 '-1' maxBin", (char*)NULL, (void*) G__func2void( (vector<int> (*)(const TH1*, double, int, int))(&dmtpc::waveform::analysis::peaks) ), 0);
   G__memfunc_setup("valleys",768,G__DmtpcWaveformCint_238_0_12, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 4, 1, 1, 0, 
"U 'TH1' - 10 - hist d - - 0 - threshold "
"i - - 0 '-1' minBin i - - 0 '-1' maxBin", (char*)NULL, (void*) G__func2void( (vector<int> (*)(const TH1*, double, int, int))(&dmtpc::waveform::analysis::valleys) ), 0);
   G__memfunc_setup("peaksAndValleys",1543,G__DmtpcWaveformCint_238_0_13, 121, -1, -1, 0, 6, 1, 1, 0, 
"U 'TH1' - 10 - hist u 'vector<int,allocator<int> >' 'vector<int>' 1 - pkBin "
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - valBin i - - 0 '-1' minBin "
"i - - 0 '-1' maxBin i - - 0 '5' nbins", (char*)NULL, (void*) G__func2void( (void (*)(const TH1*, vector<int>&, vector<int>&, int, int, int))(&dmtpc::waveform::analysis::peaksAndValleys) ), 0);
   G__memfunc_setup("mergePeaksByDistance",2026,G__DmtpcWaveformCint_238_0_14, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1' - 10 - hist u 'vector<int,allocator<int> >' 'vector<int>' 1 - pkBin "
"u 'vector<int,allocator<int> >' 'vector<int>' 1 - valBin i - - 0 '10' minDist", (char*)NULL, (void*) G__func2void( (void (*)(const TH1*, vector<int>&, vector<int>&, int))(&dmtpc::waveform::analysis::mergePeaksByDistance) ), 0);
   G__memfunc_setup("analyzeCSP",986,G__DmtpcWaveformCint_238_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 10 - h u 'dmtpc::waveform::CspWaveform' - 1 - wf "
"d - 'Double_t' 0 '20.' gausConvSigma", (char*)NULL, (void*) G__func2void( (void (*)(const TH1*, dmtpc::waveform::CspWaveform&, Double_t))(&dmtpc::waveform::analysis::analyzeCSP) ), 0);
   G__memfunc_setup("analyzePMT",997,G__DmtpcWaveformCint_238_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TH1' - 10 - h u 'dmtpc::waveform::PMTWaveform' - 1 - wf "
"d - 'Double_t' 0 '1.0' gausConvSigma", (char*)NULL, (void*) G__func2void( (void (*)(const TH1*, dmtpc::waveform::PMTWaveform&, Double_t))(&dmtpc::waveform::analysis::analyzePMT) ), 0);
   G__memfunc_setup("analyzeFast",1154,G__DmtpcWaveformCint_238_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 10 - h u 'dmtpc::waveform::FastWaveform' - 1 - wf", (char*)NULL, (void*) G__func2void( (void (*)(const TH1*, dmtpc::waveform::FastWaveform&))(&dmtpc::waveform::analysis::analyzeFast) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLIirFilterlEdoublegR(void) {
   /* dmtpc::waveform::IirFilter<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR));
   G__memfunc_setup("IirFilter<double>",1663,G__DmtpcWaveformCint_240_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IirFilter<double>",1663,G__DmtpcWaveformCint_240_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR), -1, 0, 5, 1, 1, 0, 
"k - 'size_t' 0 - nfir F - - 10 - fir "
"k - 'size_t' 0 - niir F - - 10 - iir "
"F - - 10 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IirFilter<double>",1663,G__DmtpcWaveformCint_240_0_3, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR), -1, 0, 5, 1, 1, 0, 
"k - 'size_t' 0 - nfir D - - 10 - fir "
"k - 'size_t' 0 - niir D - - 10 - iir "
"D - - 10 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IirFilter<double>",1663,G__DmtpcWaveformCint_240_0_4, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - fir u 'vector<float,allocator<float> >' 'vector<float>' 11 - iir "
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IirFilter<double>",1663,G__DmtpcWaveformCint_240_0_5, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - fir u 'vector<double,allocator<double> >' 'vector<double>' 11 - iir "
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIirCoeffs",1222,G__DmtpcWaveformCint_240_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - iir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIirCoeffs",1222,G__DmtpcWaveformCint_240_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - iir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIirCoeffs",1222,G__DmtpcWaveformCint_240_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - iir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIirCoeffs",1222,G__DmtpcWaveformCint_240_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - iir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialValues",1670,G__DmtpcWaveformCint_240_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialValues",1670,G__DmtpcWaveformCint_240_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialValues",1670,G__DmtpcWaveformCint_240_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialValues",1670,G__DmtpcWaveformCint_240_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("normalizeFir",1266,G__DmtpcWaveformCint_240_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("normalizeIir",1269,G__DmtpcWaveformCint_240_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("normalize",977,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n C - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_20, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n S - - 10 - in "
"g - - 0 'false' reverese", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n I - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n L - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n B - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n R - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n H - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n K - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >' 'vector<char>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >' 'vector<short>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >' 'vector<long>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_37, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n F - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_38, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n D - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_39, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n C - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_40, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n S - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_41, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n I - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_42, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n L - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_43, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n B - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_44, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n R - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_45, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n H - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_46, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n K - - 10 - in "
"D - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_47, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_48, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_49, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<char,allocator<char> >' 'vector<char>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_50, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<short,allocator<short> >' 'vector<short>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_51, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_52, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<long,allocator<long> >' 'vector<long>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_53, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_54, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_55, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_240_0_56, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("transferFunction",1707,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"d - - 0 - zr d - - 0 - zi "
"d - - 1 - ztr d - - 1 - zti", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("frequencyResponse",1825,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - w d - - 1 - re "
"d - - 1 - im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("powerAttenuation",1721,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("magnitudeAttenuation",2122,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("phaseShift",1039,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("phaseDelay",1024,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("groupDelay",1052,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IirFilter<double>", 1663, G__DmtpcWaveformCint_240_0_64, (int) ('i'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::IirFilter<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IirFilter<double>", 1789, G__DmtpcWaveformCint_240_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_240_0_66, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::IirFilter<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLWaveformVector(void) {
   /* dmtpc::waveform::WaveformVector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector));
   G__memfunc_setup("WaveformVector",1466,G__DmtpcWaveformCint_241_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector), -1, 0, 4, 1, 1, 0, 
"i - - 0 '0' n i - - 0 '0' bid "
"i - - 0 '0' cid C - - 10 '\"Pulse\"' nm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WaveformVector",1466,G__DmtpcWaveformCint_241_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::WaveformVector' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getName",705,G__DmtpcWaveformCint_241_0_4, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBoard",820,G__DmtpcWaveformCint_241_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChan",710,G__DmtpcWaveformCint_241_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBoard",808,G__DmtpcWaveformCint_241_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChan",698,G__DmtpcWaveformCint_241_0_8, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DmtpcWaveformCint_241_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__DmtpcWaveformCint_241_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::SkimWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DmtpcWaveformCint_241_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::SkimWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DmtpcWaveformCint_241_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'dmtpc::waveform::SkimWaveform' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rm",223,G__DmtpcWaveformCint_241_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearWf",708,G__DmtpcWaveformCint_241_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DmtpcWaveformCint_241_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DmtpcWaveformCint_241_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DmtpcWaveformCint_241_0_17, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::WaveformVector' - 11 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_241_0_18, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_241_0_19, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_241_0_20, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform), -1, 1, 1, 1, 1, 9, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_241_0_21, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_241_0_22, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DmtpcWaveformCint_241_0_23, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform), -1, 1, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_241_0_24, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 2, 1, 1, 9, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_241_0_25, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 2, 1, 1, 9, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DmtpcWaveformCint_241_0_26, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__DmtpcWaveformCint_241_0_27, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse), -1, 1, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcWaveformCint_241_0_28, 85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::waveform::WaveformVector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcWaveformCint_241_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::WaveformVector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcWaveformCint_241_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::waveform::WaveformVector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcWaveformCint_241_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::waveform::WaveformVector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcWaveformCint_241_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcWaveformCint_241_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::WaveformVector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcWaveformCint_241_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::WaveformVector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcWaveformCint_241_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::waveform::WaveformVector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcWaveformCint_241_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::waveform::WaveformVector::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~WaveformVector", 1592, G__DmtpcWaveformCint_241_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLIirFilterlEfloatgR(void) {
   /* dmtpc::waveform::IirFilter<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR));
   G__memfunc_setup("IirFilter<float>",1562,G__DmtpcWaveformCint_246_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IirFilter<float>",1562,G__DmtpcWaveformCint_246_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR), -1, 0, 5, 1, 1, 0, 
"k - 'size_t' 0 - nfir F - - 10 - fir "
"k - 'size_t' 0 - niir F - - 10 - iir "
"F - - 10 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IirFilter<float>",1562,G__DmtpcWaveformCint_246_0_3, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR), -1, 0, 5, 1, 1, 0, 
"k - 'size_t' 0 - nfir D - - 10 - fir "
"k - 'size_t' 0 - niir D - - 10 - iir "
"D - - 10 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IirFilter<float>",1562,G__DmtpcWaveformCint_246_0_4, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR), -1, 0, 3, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - fir u 'vector<float,allocator<float> >' 'vector<float>' 11 - iir "
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IirFilter<float>",1562,G__DmtpcWaveformCint_246_0_5, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR), -1, 0, 3, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - fir u 'vector<double,allocator<double> >' 'vector<double>' 11 - iir "
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIirCoeffs",1222,G__DmtpcWaveformCint_246_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - iir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIirCoeffs",1222,G__DmtpcWaveformCint_246_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - iir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIirCoeffs",1222,G__DmtpcWaveformCint_246_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - iir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIirCoeffs",1222,G__DmtpcWaveformCint_246_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - iir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialValues",1670,G__DmtpcWaveformCint_246_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialValues",1670,G__DmtpcWaveformCint_246_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialValues",1670,G__DmtpcWaveformCint_246_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInitialValues",1670,G__DmtpcWaveformCint_246_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - init", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("normalizeFir",1266,G__DmtpcWaveformCint_246_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("normalizeIir",1269,G__DmtpcWaveformCint_246_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("normalize",977,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_18, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n C - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_20, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n S - - 10 - in "
"g - - 0 'false' reverese", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_21, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n I - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n L - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_23, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n B - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_24, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n R - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_25, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n H - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n K - - 10 - in "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<char,allocator<char> >' 'vector<char>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<short,allocator<short> >' 'vector<short>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_32, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<long,allocator<long> >' 'vector<long>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_33, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_34, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_37, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n F - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_38, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n D - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_39, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n C - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_40, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n S - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_41, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n I - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_42, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n L - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_43, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n B - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_44, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n R - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_45, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n H - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_46, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n K - - 10 - in "
"F - - 0 - out g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_47, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_48, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_49, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<char,allocator<char> >' 'vector<char>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_50, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<short,allocator<short> >' 'vector<short>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_51, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_52, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<long,allocator<long> >' 'vector<long>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_53, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_54, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_55, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_246_0_56, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"g - - 0 'false' reverse", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("transferFunction",1707,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 8, 
"d - - 0 - zr d - - 0 - zi "
"d - - 1 - ztr d - - 1 - zti", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("frequencyResponse",1825,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"d - - 0 - w d - - 1 - re "
"d - - 1 - im", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("powerAttenuation",1721,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("magnitudeAttenuation",2122,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("phaseShift",1039,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("phaseDelay",1024,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("groupDelay",1052,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - w", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("IirFilter<float>", 1562, G__DmtpcWaveformCint_246_0_64, (int) ('i'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::IirFilter<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IirFilter<float>", 1688, G__DmtpcWaveformCint_246_0_65, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_246_0_66, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::IirFilter<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR(void) {
   /* dmtpc::waveform::RangeDomainFilter<double> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR));
   G__memfunc_setup("RangeDomainFilter<double>",2464,G__DmtpcWaveformCint_247_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RangeDomainFilter<double>",2464,G__DmtpcWaveformCint_247_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR), -1, 0, 4, 1, 1, 0, 
"k - 'size_t' 0 - nfir F - - 10 - fir "
"k - 'size_t' 0 - nrange F - - 10 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RangeDomainFilter<double>",2464,G__DmtpcWaveformCint_247_0_3, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR), -1, 0, 4, 1, 1, 0, 
"k - 'size_t' 0 - nfir D - - 10 - fir "
"k - 'size_t' 0 - nrange D - - 10 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RangeDomainFilter<double>",2464,G__DmtpcWaveformCint_247_0_4, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - fir u 'vector<float,allocator<float> >' 'vector<float>' 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RangeDomainFilter<double>",2464,G__DmtpcWaveformCint_247_0_5, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR), -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - fir u 'vector<double,allocator<double> >' 'vector<double>' 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rangeCoeffSize",1419,G__DmtpcWaveformCint_247_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRangeCoeffs",1423,G__DmtpcWaveformCint_247_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRangeCoeffs",1423,G__DmtpcWaveformCint_247_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRangeCoeffs",1423,G__DmtpcWaveformCint_247_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRangeCoeffs",1423,G__DmtpcWaveformCint_247_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_247_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - in "
"d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_247_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - in "
"d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n C - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n S - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n I - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n L - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n B - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n R - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n H - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n K - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_247_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_247_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >' 'vector<char>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >' 'vector<short>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >' 'vector<long>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_247_0_35, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n D - - 10 - in "
"D - - 0 - out d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_247_0_36, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n F - - 10 - in "
"D - - 0 - out d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n D - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n F - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n C - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n S - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n I - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n L - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n B - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n R - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n H - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n K - - 10 - in "
"D - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_247_0_47, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_247_0_48, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out "
"d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >' 'vector<char>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >' 'vector<short>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >' 'vector<long>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in u 'vector<double,allocator<double> >' 'vector<double>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("rangeCoeffs",1123,G__DmtpcWaveformCint_247_0_59, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rangeCoeffs",1123,G__DmtpcWaveformCint_247_0_60, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("RangeDomainFilter<double>", 2464, G__DmtpcWaveformCint_247_0_61, (int) ('i'), 
G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::RangeDomainFilter<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RangeDomainFilter<double>", 2590, G__DmtpcWaveformCint_247_0_62, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_247_0_63, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::RangeDomainFilter<double>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR(void) {
   /* dmtpc::waveform::RangeDomainFilter<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR));
   G__memfunc_setup("RangeDomainFilter<float>",2363,G__DmtpcWaveformCint_248_0_1, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RangeDomainFilter<float>",2363,G__DmtpcWaveformCint_248_0_2, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR), -1, 0, 4, 1, 1, 0, 
"k - 'size_t' 0 - nfir F - - 10 - fir "
"k - 'size_t' 0 - nrange F - - 10 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RangeDomainFilter<float>",2363,G__DmtpcWaveformCint_248_0_3, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR), -1, 0, 4, 1, 1, 0, 
"k - 'size_t' 0 - nfir D - - 10 - fir "
"k - 'size_t' 0 - nrange D - - 10 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RangeDomainFilter<float>",2363,G__DmtpcWaveformCint_248_0_4, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - fir u 'vector<float,allocator<float> >' 'vector<float>' 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RangeDomainFilter<float>",2363,G__DmtpcWaveformCint_248_0_5, 105, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - fir u 'vector<double,allocator<double> >' 'vector<double>' 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rangeCoeffSize",1419,G__DmtpcWaveformCint_248_0_6, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRangeCoeffs",1423,G__DmtpcWaveformCint_248_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRangeCoeffs",1423,G__DmtpcWaveformCint_248_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRangeCoeffs",1423,G__DmtpcWaveformCint_248_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRangeCoeffs",1423,G__DmtpcWaveformCint_248_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - range", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_248_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - in "
"d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_248_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - in "
"d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n D - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n F - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n C - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n S - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n I - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n L - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n B - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n R - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n H - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'size_t' 0 - n K - - 10 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_248_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_248_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<double,allocator<double> >' 'vector<double>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<char,allocator<char> >' 'vector<char>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<short,allocator<short> >' 'vector<short>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<int,allocator<int> >' 'vector<int>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<long,allocator<long> >' 'vector<long>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_248_0_35, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n D - - 10 - in "
"F - - 0 - out d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_248_0_36, 121, -1, -1, 0, 4, 1, 1, 8, 
"k - 'size_t' 0 - n F - - 10 - in "
"F - - 0 - out d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n D - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n F - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n C - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n S - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n I - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n L - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n B - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n R - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n H - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 3, 1, 1, 8, 
"k - 'size_t' 0 - n K - - 10 - in "
"F - - 0 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_248_0_47, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,G__DmtpcWaveformCint_248_0_48, 121, -1, -1, 0, 3, 1, 1, 8, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out "
"d - - 0 - diff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<double,allocator<double> >' 'vector<double>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<float,allocator<float> >' 'vector<float>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<char,allocator<char> >' 'vector<char>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<short,allocator<short> >' 'vector<short>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<int,allocator<int> >' 'vector<int>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<long,allocator<long> >' 'vector<long>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned char,allocator<unsigned char> >' 'vector<unsigned char>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned int,allocator<unsigned int> >' 'vector<unsigned int>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("apply",550,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"u 'vector<unsigned long,allocator<unsigned long> >' 'vector<unsigned long>' 11 - in u 'vector<float,allocator<float> >' 'vector<float>' 1 - out", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("rangeCoeffs",1123,G__DmtpcWaveformCint_248_0_59, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rangeCoeffs",1123,G__DmtpcWaveformCint_248_0_60, 117, G__get_linked_tagnum(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("RangeDomainFilter<float>", 2363, G__DmtpcWaveformCint_248_0_61, (int) ('i'), 
G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'dmtpc::waveform::RangeDomainFilter<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RangeDomainFilter<float>", 2489, G__DmtpcWaveformCint_248_0_62, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcWaveformCint_248_0_63, (int) ('u'), G__get_linked_tagnum(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'dmtpc::waveform::RangeDomainFilter<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDmtpcWaveformCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDmtpcWaveformCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDmtpcWaveformCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DmtpcWaveformCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEcharcOallocatorlEchargRsPgR = { "vector<char,allocator<char> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlElongcOallocatorlElonggRsPgR = { "vector<long,allocator<long> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR = { "vector<unsigned char,allocator<unsigned char> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR = { "vector<unsigned long,allocator<unsigned long> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR = { "basic_ostream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpc = { "dmtpc" , 110 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveform = { "dmtpc::waveform" , 110 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse = { "dmtpc::waveform::Pulse" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse = { "dmtpc::waveform::CspPulse" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform = { "dmtpc::waveform::CspWaveform" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgR = { "vector<dmtpc::waveform::CspPulse,allocator<dmtpc::waveform::CspPulse> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::waveform::CspPulse,allocator<dmtpc::waveform::CspPulse> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector = { "dmtpc::waveform::CspWfVector" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgR = { "vector<dmtpc::waveform::CspWaveform,allocator<dmtpc::waveform::CspWaveform> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::waveform::CspWaveform,allocator<dmtpc::waveform::CspWaveform> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse = { "dmtpc::waveform::FastPulse" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform = { "dmtpc::waveform::FastWaveform" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgR = { "vector<dmtpc::waveform::FastPulse,allocator<dmtpc::waveform::FastPulse> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::waveform::FastPulse,allocator<dmtpc::waveform::FastPulse> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector = { "dmtpc::waveform::FastWfVector" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgR = { "vector<dmtpc::waveform::FastWaveform,allocator<dmtpc::waveform::FastWaveform> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::waveform::FastWaveform,allocator<dmtpc::waveform::FastWaveform> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR = { "dmtpc::waveform::FirFilter<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR = { "dmtpc::waveform::FirFilter<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLfir = { "dmtpc::waveform::fir" , 110 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_fftw_complex = { "fftw_complex" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_fftw_plan = { "fftw_plan" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform = { "dmtpc::waveform::FourierTransform" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse = { "dmtpc::waveform::PMTPulse" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform = { "dmtpc::waveform::PMTWaveform" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgR = { "vector<dmtpc::waveform::PMTPulse,allocator<dmtpc::waveform::PMTPulse> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::waveform::PMTPulse,allocator<dmtpc::waveform::PMTPulse> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector = { "dmtpc::waveform::PMTWfVector" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgR = { "vector<dmtpc::waveform::PMTWaveform,allocator<dmtpc::waveform::PMTWaveform> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::waveform::PMTWaveform,allocator<dmtpc::waveform::PMTWaveform> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform = { "dmtpc::waveform::SkimWaveform" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgR = { "vector<dmtpc::waveform::Pulse,allocator<dmtpc::waveform::Pulse> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::waveform::Pulse,allocator<dmtpc::waveform::Pulse> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLanalysis = { "dmtpc::waveform::analysis" , 110 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR = { "dmtpc::waveform::IirFilter<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector = { "dmtpc::waveform::WaveformVector" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgR = { "vector<dmtpc::waveform::SkimWaveform,allocator<dmtpc::waveform::SkimWaveform> >" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::waveform::SkimWaveform,allocator<dmtpc::waveform::SkimWaveform> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR = { "dmtpc::waveform::IirFilter<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR = { "dmtpc::waveform::RangeDomainFilter<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR = { "dmtpc::waveform::RangeDomainFilter<float>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDmtpcWaveformCint() {
  G__DmtpcWaveformCintLN_TClass.tagnum = -1 ;
  G__DmtpcWaveformCintLN_TBuffer.tagnum = -1 ;
  G__DmtpcWaveformCintLN_TMemberInspector.tagnum = -1 ;
  G__DmtpcWaveformCintLN_TObject.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEcharcOallocatorlEchargRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlElongcOallocatorlElonggRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_string.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpc.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveform.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLfir.tagnum = -1 ;
  G__DmtpcWaveformCintLN_fftw_complex.tagnum = -1 ;
  G__DmtpcWaveformCintLN_fftw_plan.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_TH1.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLanalysis.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector.tagnum = -1 ;
  G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR.tagnum = -1 ;
  G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDmtpcWaveformCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEcharcOallocatorlEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlElongcOallocatorlElonggRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEunsignedsPcharcOallocatorlEunsignedsPchargRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEunsignedsPlongcOallocatorlEunsignedsPlonggRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_basic_ostreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_string);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpc),0,-1,0,(char*)NULL,G__setup_memvardmtpc,G__setup_memfuncdmtpc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveform),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLwaveform,G__setup_memfuncdmtpccLcLwaveform);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPulse),sizeof(dmtpc::waveform::Pulse),-1,62720,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLPulse,G__setup_memfuncdmtpccLcLwaveformcLcLPulse);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspPulse),sizeof(dmtpc::waveform::CspPulse),-1,62720,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLCspPulse,G__setup_memfuncdmtpccLcLwaveformcLcLCspPulse);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWaveform),sizeof(dmtpc::waveform::CspWaveform),-1,32512,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLCspWaveform,G__setup_memfuncdmtpccLcLwaveformcLcLCspWaveform);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspPulsecOallocatorlEdmtpccLcLwaveformcLcLCspPulsegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLCspWfVector),sizeof(dmtpc::waveform::CspWfVector),-1,32512,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLCspWfVector,G__setup_memfuncdmtpccLcLwaveformcLcLCspWfVector);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLCspWaveformcOallocatorlEdmtpccLcLwaveformcLcLCspWaveformgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastPulse),sizeof(dmtpc::waveform::FastPulse),-1,62720,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLFastPulse,G__setup_memfuncdmtpccLcLwaveformcLcLFastPulse);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWaveform),sizeof(dmtpc::waveform::FastWaveform),-1,32512,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLFastWaveform,G__setup_memfuncdmtpccLcLwaveformcLcLFastWaveform);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastPulsecOallocatorlEdmtpccLcLwaveformcLcLFastPulsegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFastWfVector),sizeof(dmtpc::waveform::FastWfVector),-1,32512,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLFastWfVector,G__setup_memfuncdmtpccLcLwaveformcLcLFastWfVector);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLFastWaveformcOallocatorlEdmtpccLcLwaveformcLcLFastWaveformgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEfloatgR),sizeof(dmtpc::waveform::FirFilter<float>),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLFirFilterlEfloatgR,G__setup_memfuncdmtpccLcLwaveformcLcLFirFilterlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFirFilterlEdoublegR),sizeof(dmtpc::waveform::FirFilter<double>),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLFirFilterlEdoublegR,G__setup_memfuncdmtpccLcLwaveformcLcLFirFilterlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLfir),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLfir,G__setup_memfuncdmtpccLcLwaveformcLcLfir);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_fftw_complex);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_fftw_plan);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLFourierTransform),sizeof(dmtpc::waveform::FourierTransform),-1,33792,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLFourierTransform,G__setup_memfuncdmtpccLcLwaveformcLcLFourierTransform);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTPulse),sizeof(dmtpc::waveform::PMTPulse),-1,62720,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLPMTPulse,G__setup_memfuncdmtpccLcLwaveformcLcLPMTPulse);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWaveform),sizeof(dmtpc::waveform::PMTWaveform),-1,32512,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLPMTWaveform,G__setup_memfuncdmtpccLcLwaveformcLcLPMTWaveform);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTPulsecOallocatorlEdmtpccLcLwaveformcLcLPMTPulsegRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLPMTWfVector),sizeof(dmtpc::waveform::PMTWfVector),-1,32512,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLPMTWfVector,G__setup_memfuncdmtpccLcLwaveformcLcLPMTWfVector);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPMTWaveformcOallocatorlEdmtpccLcLwaveformcLcLPMTWaveformgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLSkimWaveform),sizeof(dmtpc::waveform::SkimWaveform),-1,32512,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLSkimWaveform,G__setup_memfuncdmtpccLcLwaveformcLcLSkimWaveform);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLPulsecOallocatorlEdmtpccLcLwaveformcLcLPulsegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_TH1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLanalysis),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLanalysis,G__setup_memfuncdmtpccLcLwaveformcLcLanalysis);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEdoublegR),sizeof(dmtpc::waveform::IirFilter<double>),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLIirFilterlEdoublegR,G__setup_memfuncdmtpccLcLwaveformcLcLIirFilterlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLWaveformVector),sizeof(dmtpc::waveform::WaveformVector),-1,32512,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLWaveformVector,G__setup_memfuncdmtpccLcLwaveformcLcLWaveformVector);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_vectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_reverse_iteratorlEvectorlEdmtpccLcLwaveformcLcLSkimWaveformcOallocatorlEdmtpccLcLwaveformcLcLSkimWaveformgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLIirFilterlEfloatgR),sizeof(dmtpc::waveform::IirFilter<float>),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLIirFilterlEfloatgR,G__setup_memfuncdmtpccLcLwaveformcLcLIirFilterlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR),sizeof(dmtpc::waveform::RangeDomainFilter<double>),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR,G__setup_memfuncdmtpccLcLwaveformcLcLRangeDomainFilterlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcWaveformCintLN_dmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR),sizeof(dmtpc::waveform::RangeDomainFilter<float>),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR,G__setup_memfuncdmtpccLcLwaveformcLcLRangeDomainFilterlEfloatgR);
}
extern "C" void G__cpp_setupDmtpcWaveformCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupDmtpcWaveformCint()");
  G__set_cpp_environmentDmtpcWaveformCint();
  G__cpp_setup_tagtableDmtpcWaveformCint();

  G__cpp_setup_inheritanceDmtpcWaveformCint();

  G__cpp_setup_typetableDmtpcWaveformCint();

  G__cpp_setup_memvarDmtpcWaveformCint();

  G__cpp_setup_memfuncDmtpcWaveformCint();
  G__cpp_setup_globalDmtpcWaveformCint();
  G__cpp_setup_funcDmtpcWaveformCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDmtpcWaveformCint();
  return;
}
class G__cpp_setup_initDmtpcWaveformCint {
  public:
    G__cpp_setup_initDmtpcWaveformCint() { G__add_setup_func("DmtpcWaveformCint",(G__incsetup)(&G__cpp_setupDmtpcWaveformCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDmtpcWaveformCint() { G__remove_setup_func("DmtpcWaveformCint"); }
};
G__cpp_setup_initDmtpcWaveformCint G__cpp_setup_initializerDmtpcWaveformCint;

