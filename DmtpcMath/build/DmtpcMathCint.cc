//
// File generated by rootcint at Sat Jun 17 00:26:37 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME builddIDmtpcMathCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DmtpcMathCint.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace dmtpc {
namespace math {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLmath_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::math", 0 /*version*/, "./include/SpecialPoly.hh", 8,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLmath_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLmath_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace dmtpc {
namespace math {
namespace angle {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLmathcLcLangle_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::math::angle", 0 /*version*/, "./include/Angular.hh", 13,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLmathcLcLangle_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLmathcLcLangle_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}
}

namespace ROOTDict {
   void dmtpccLcLmathcLcLDistribution_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLmathcLcLDistribution_Dictionary();
   static void delete_dmtpccLcLmathcLcLDistribution(void *p);
   static void deleteArray_dmtpccLcLmathcLcLDistribution(void *p);
   static void destruct_dmtpccLcLmathcLcLDistribution(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::math::Distribution*)
   {
      ::dmtpc::math::Distribution *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::math::Distribution),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::math::Distribution", "./include/Distribution.hh", 44,
                  typeid(::dmtpc::math::Distribution), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLmathcLcLDistribution_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::math::Distribution) );
      instance.SetDelete(&delete_dmtpccLcLmathcLcLDistribution);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLmathcLcLDistribution);
      instance.SetDestructor(&destruct_dmtpccLcLmathcLcLDistribution);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::math::Distribution*)
   {
      return GenerateInitInstanceLocal((::dmtpc::math::Distribution*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::math::Distribution*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLmathcLcLDistribution_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::math::Distribution*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace dmtpc {
namespace math {
namespace dist {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLmathcLcLdist_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::math::dist", 0 /*version*/, "./include/PoissonDist.hh", 12,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLmathcLcLdist_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLmathcLcLdist_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}
}

namespace ROOTDict {
   void dmtpccLcLmathcLcLdistcLcLCrystalBall_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLmathcLcLdistcLcLCrystalBall_Dictionary();
   static void *new_dmtpccLcLmathcLcLdistcLcLCrystalBall(void *p = 0);
   static void *newArray_dmtpccLcLmathcLcLdistcLcLCrystalBall(Long_t size, void *p);
   static void delete_dmtpccLcLmathcLcLdistcLcLCrystalBall(void *p);
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLCrystalBall(void *p);
   static void destruct_dmtpccLcLmathcLcLdistcLcLCrystalBall(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::math::dist::CrystalBall*)
   {
      ::dmtpc::math::dist::CrystalBall *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::math::dist::CrystalBall),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::math::dist::CrystalBall", "./include/CrystalBallDist.hh", 31,
                  typeid(::dmtpc::math::dist::CrystalBall), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLmathcLcLdistcLcLCrystalBall_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::math::dist::CrystalBall) );
      instance.SetNew(&new_dmtpccLcLmathcLcLdistcLcLCrystalBall);
      instance.SetNewArray(&newArray_dmtpccLcLmathcLcLdistcLcLCrystalBall);
      instance.SetDelete(&delete_dmtpccLcLmathcLcLdistcLcLCrystalBall);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLmathcLcLdistcLcLCrystalBall);
      instance.SetDestructor(&destruct_dmtpccLcLmathcLcLdistcLcLCrystalBall);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::math::dist::CrystalBall*)
   {
      return GenerateInitInstanceLocal((::dmtpc::math::dist::CrystalBall*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::math::dist::CrystalBall*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLmathcLcLdistcLcLCrystalBall_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::math::dist::CrystalBall*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLmathcLcLMultivariateTest_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLmathcLcLMultivariateTest_Dictionary();
   static void delete_dmtpccLcLmathcLcLMultivariateTest(void *p);
   static void deleteArray_dmtpccLcLmathcLcLMultivariateTest(void *p);
   static void destruct_dmtpccLcLmathcLcLMultivariateTest(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::math::MultivariateTest*)
   {
      ::dmtpc::math::MultivariateTest *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::math::MultivariateTest),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::math::MultivariateTest", "./include/MultivariateTest.hh", 15,
                  typeid(::dmtpc::math::MultivariateTest), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLmathcLcLMultivariateTest_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::math::MultivariateTest) );
      instance.SetDelete(&delete_dmtpccLcLmathcLcLMultivariateTest);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLmathcLcLMultivariateTest);
      instance.SetDestructor(&destruct_dmtpccLcLmathcLcLMultivariateTest);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::math::MultivariateTest*)
   {
      return GenerateInitInstanceLocal((::dmtpc::math::MultivariateTest*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::math::MultivariateTest*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLmathcLcLMultivariateTest_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::math::MultivariateTest*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLmathcLcLEnergyTest_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLmathcLcLEnergyTest_Dictionary();
   static void delete_dmtpccLcLmathcLcLEnergyTest(void *p);
   static void deleteArray_dmtpccLcLmathcLcLEnergyTest(void *p);
   static void destruct_dmtpccLcLmathcLcLEnergyTest(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::math::EnergyTest*)
   {
      ::dmtpc::math::EnergyTest *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::math::EnergyTest),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::math::EnergyTest", "./include/EnergyTest.hh", 19,
                  typeid(::dmtpc::math::EnergyTest), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLmathcLcLEnergyTest_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::math::EnergyTest) );
      instance.SetDelete(&delete_dmtpccLcLmathcLcLEnergyTest);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLmathcLcLEnergyTest);
      instance.SetDestructor(&destruct_dmtpccLcLmathcLcLEnergyTest);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::math::EnergyTest*)
   {
      return GenerateInitInstanceLocal((::dmtpc::math::EnergyTest*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::math::EnergyTest*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLmathcLcLEnergyTest_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::math::EnergyTest*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLmathcLcLdistcLcLGaussian_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLmathcLcLdistcLcLGaussian_Dictionary();
   static void *new_dmtpccLcLmathcLcLdistcLcLGaussian(void *p = 0);
   static void *newArray_dmtpccLcLmathcLcLdistcLcLGaussian(Long_t size, void *p);
   static void delete_dmtpccLcLmathcLcLdistcLcLGaussian(void *p);
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLGaussian(void *p);
   static void destruct_dmtpccLcLmathcLcLdistcLcLGaussian(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::math::dist::Gaussian*)
   {
      ::dmtpc::math::dist::Gaussian *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::math::dist::Gaussian),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::math::dist::Gaussian", "./include/GaussianDist.hh", 30,
                  typeid(::dmtpc::math::dist::Gaussian), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLmathcLcLdistcLcLGaussian_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::math::dist::Gaussian) );
      instance.SetNew(&new_dmtpccLcLmathcLcLdistcLcLGaussian);
      instance.SetNewArray(&newArray_dmtpccLcLmathcLcLdistcLcLGaussian);
      instance.SetDelete(&delete_dmtpccLcLmathcLcLdistcLcLGaussian);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLmathcLcLdistcLcLGaussian);
      instance.SetDestructor(&destruct_dmtpccLcLmathcLcLdistcLcLGaussian);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::math::dist::Gaussian*)
   {
      return GenerateInitInstanceLocal((::dmtpc::math::dist::Gaussian*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::math::dist::Gaussian*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLmathcLcLdistcLcLGaussian_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::math::dist::Gaussian*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLmathcLcLdistcLcLInverseGaussian_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLmathcLcLdistcLcLInverseGaussian_Dictionary();
   static void *new_dmtpccLcLmathcLcLdistcLcLInverseGaussian(void *p = 0);
   static void *newArray_dmtpccLcLmathcLcLdistcLcLInverseGaussian(Long_t size, void *p);
   static void delete_dmtpccLcLmathcLcLdistcLcLInverseGaussian(void *p);
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLInverseGaussian(void *p);
   static void destruct_dmtpccLcLmathcLcLdistcLcLInverseGaussian(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::math::dist::InverseGaussian*)
   {
      ::dmtpc::math::dist::InverseGaussian *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::math::dist::InverseGaussian),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::math::dist::InverseGaussian", "./include/InverseGaussianDist.hh", 37,
                  typeid(::dmtpc::math::dist::InverseGaussian), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLmathcLcLdistcLcLInverseGaussian_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::math::dist::InverseGaussian) );
      instance.SetNew(&new_dmtpccLcLmathcLcLdistcLcLInverseGaussian);
      instance.SetNewArray(&newArray_dmtpccLcLmathcLcLdistcLcLInverseGaussian);
      instance.SetDelete(&delete_dmtpccLcLmathcLcLdistcLcLInverseGaussian);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLmathcLcLdistcLcLInverseGaussian);
      instance.SetDestructor(&destruct_dmtpccLcLmathcLcLdistcLcLInverseGaussian);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::math::dist::InverseGaussian*)
   {
      return GenerateInitInstanceLocal((::dmtpc::math::dist::InverseGaussian*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::math::dist::InverseGaussian*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLmathcLcLdistcLcLInverseGaussian_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::math::dist::InverseGaussian*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLmathcLcLdistcLcLLogNormal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLmathcLcLdistcLcLLogNormal_Dictionary();
   static void *new_dmtpccLcLmathcLcLdistcLcLLogNormal(void *p = 0);
   static void *newArray_dmtpccLcLmathcLcLdistcLcLLogNormal(Long_t size, void *p);
   static void delete_dmtpccLcLmathcLcLdistcLcLLogNormal(void *p);
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLLogNormal(void *p);
   static void destruct_dmtpccLcLmathcLcLdistcLcLLogNormal(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::math::dist::LogNormal*)
   {
      ::dmtpc::math::dist::LogNormal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::math::dist::LogNormal),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::math::dist::LogNormal", "./include/LogNormalDist.hh", 35,
                  typeid(::dmtpc::math::dist::LogNormal), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLmathcLcLdistcLcLLogNormal_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::math::dist::LogNormal) );
      instance.SetNew(&new_dmtpccLcLmathcLcLdistcLcLLogNormal);
      instance.SetNewArray(&newArray_dmtpccLcLmathcLcLdistcLcLLogNormal);
      instance.SetDelete(&delete_dmtpccLcLmathcLcLdistcLcLLogNormal);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLmathcLcLdistcLcLLogNormal);
      instance.SetDestructor(&destruct_dmtpccLcLmathcLcLdistcLcLLogNormal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::math::dist::LogNormal*)
   {
      return GenerateInitInstanceLocal((::dmtpc::math::dist::LogNormal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::math::dist::LogNormal*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLmathcLcLdistcLcLLogNormal_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::math::dist::LogNormal*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLmathcLcLdistcLcLPoisson_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLmathcLcLdistcLcLPoisson_Dictionary();
   static void *new_dmtpccLcLmathcLcLdistcLcLPoisson(void *p = 0);
   static void *newArray_dmtpccLcLmathcLcLdistcLcLPoisson(Long_t size, void *p);
   static void delete_dmtpccLcLmathcLcLdistcLcLPoisson(void *p);
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLPoisson(void *p);
   static void destruct_dmtpccLcLmathcLcLdistcLcLPoisson(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::math::dist::Poisson*)
   {
      ::dmtpc::math::dist::Poisson *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::math::dist::Poisson),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::math::dist::Poisson", "./include/PoissonDist.hh", 37,
                  typeid(::dmtpc::math::dist::Poisson), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLmathcLcLdistcLcLPoisson_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::math::dist::Poisson) );
      instance.SetNew(&new_dmtpccLcLmathcLcLdistcLcLPoisson);
      instance.SetNewArray(&newArray_dmtpccLcLmathcLcLdistcLcLPoisson);
      instance.SetDelete(&delete_dmtpccLcLmathcLcLdistcLcLPoisson);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLmathcLcLdistcLcLPoisson);
      instance.SetDestructor(&destruct_dmtpccLcLmathcLcLdistcLcLPoisson);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::math::dist::Poisson*)
   {
      return GenerateInitInstanceLocal((::dmtpc::math::dist::Poisson*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::math::dist::Poisson*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLmathcLcLdistcLcLPoisson_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::math::dist::Poisson*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLmathcLcLPrincipalComponentFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void dmtpccLcLmathcLcLPrincipalComponentFinder_Dictionary();
   static void delete_dmtpccLcLmathcLcLPrincipalComponentFinder(void *p);
   static void deleteArray_dmtpccLcLmathcLcLPrincipalComponentFinder(void *p);
   static void destruct_dmtpccLcLmathcLcLPrincipalComponentFinder(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::math::PrincipalComponentFinder*)
   {
      ::dmtpc::math::PrincipalComponentFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::dmtpc::math::PrincipalComponentFinder),0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::math::PrincipalComponentFinder", "./include/PrincipalComponentFinder.hh", 12,
                  typeid(::dmtpc::math::PrincipalComponentFinder), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &dmtpccLcLmathcLcLPrincipalComponentFinder_Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::math::PrincipalComponentFinder) );
      instance.SetDelete(&delete_dmtpccLcLmathcLcLPrincipalComponentFinder);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLmathcLcLPrincipalComponentFinder);
      instance.SetDestructor(&destruct_dmtpccLcLmathcLcLPrincipalComponentFinder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::math::PrincipalComponentFinder*)
   {
      return GenerateInitInstanceLocal((::dmtpc::math::PrincipalComponentFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::math::PrincipalComponentFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void dmtpccLcLmathcLcLPrincipalComponentFinder_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::math::PrincipalComponentFinder*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_dmtpccLcLmathcLcLDistribution(void *p) {
      delete ((::dmtpc::math::Distribution*)p);
   }
   static void deleteArray_dmtpccLcLmathcLcLDistribution(void *p) {
      delete [] ((::dmtpc::math::Distribution*)p);
   }
   static void destruct_dmtpccLcLmathcLcLDistribution(void *p) {
      typedef ::dmtpc::math::Distribution current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::math::Distribution

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLmathcLcLdistcLcLGaussian(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::Gaussian : new ::dmtpc::math::dist::Gaussian;
   }
   static void *newArray_dmtpccLcLmathcLcLdistcLcLGaussian(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::Gaussian[nElements] : new ::dmtpc::math::dist::Gaussian[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLmathcLcLdistcLcLGaussian(void *p) {
      delete ((::dmtpc::math::dist::Gaussian*)p);
   }
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLGaussian(void *p) {
      delete [] ((::dmtpc::math::dist::Gaussian*)p);
   }
   static void destruct_dmtpccLcLmathcLcLdistcLcLGaussian(void *p) {
      typedef ::dmtpc::math::dist::Gaussian current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::math::dist::Gaussian

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLmathcLcLdistcLcLCrystalBall(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::CrystalBall : new ::dmtpc::math::dist::CrystalBall;
   }
   static void *newArray_dmtpccLcLmathcLcLdistcLcLCrystalBall(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::CrystalBall[nElements] : new ::dmtpc::math::dist::CrystalBall[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLmathcLcLdistcLcLCrystalBall(void *p) {
      delete ((::dmtpc::math::dist::CrystalBall*)p);
   }
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLCrystalBall(void *p) {
      delete [] ((::dmtpc::math::dist::CrystalBall*)p);
   }
   static void destruct_dmtpccLcLmathcLcLdistcLcLCrystalBall(void *p) {
      typedef ::dmtpc::math::dist::CrystalBall current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::math::dist::CrystalBall

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLmathcLcLdistcLcLPoisson(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::Poisson : new ::dmtpc::math::dist::Poisson;
   }
   static void *newArray_dmtpccLcLmathcLcLdistcLcLPoisson(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::Poisson[nElements] : new ::dmtpc::math::dist::Poisson[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLmathcLcLdistcLcLPoisson(void *p) {
      delete ((::dmtpc::math::dist::Poisson*)p);
   }
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLPoisson(void *p) {
      delete [] ((::dmtpc::math::dist::Poisson*)p);
   }
   static void destruct_dmtpccLcLmathcLcLdistcLcLPoisson(void *p) {
      typedef ::dmtpc::math::dist::Poisson current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::math::dist::Poisson

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLmathcLcLdistcLcLLogNormal(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::LogNormal : new ::dmtpc::math::dist::LogNormal;
   }
   static void *newArray_dmtpccLcLmathcLcLdistcLcLLogNormal(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::LogNormal[nElements] : new ::dmtpc::math::dist::LogNormal[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLmathcLcLdistcLcLLogNormal(void *p) {
      delete ((::dmtpc::math::dist::LogNormal*)p);
   }
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLLogNormal(void *p) {
      delete [] ((::dmtpc::math::dist::LogNormal*)p);
   }
   static void destruct_dmtpccLcLmathcLcLdistcLcLLogNormal(void *p) {
      typedef ::dmtpc::math::dist::LogNormal current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::math::dist::LogNormal

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLmathcLcLdistcLcLInverseGaussian(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::InverseGaussian : new ::dmtpc::math::dist::InverseGaussian;
   }
   static void *newArray_dmtpccLcLmathcLcLdistcLcLInverseGaussian(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::math::dist::InverseGaussian[nElements] : new ::dmtpc::math::dist::InverseGaussian[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLmathcLcLdistcLcLInverseGaussian(void *p) {
      delete ((::dmtpc::math::dist::InverseGaussian*)p);
   }
   static void deleteArray_dmtpccLcLmathcLcLdistcLcLInverseGaussian(void *p) {
      delete [] ((::dmtpc::math::dist::InverseGaussian*)p);
   }
   static void destruct_dmtpccLcLmathcLcLdistcLcLInverseGaussian(void *p) {
      typedef ::dmtpc::math::dist::InverseGaussian current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::math::dist::InverseGaussian

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_dmtpccLcLmathcLcLPrincipalComponentFinder(void *p) {
      delete ((::dmtpc::math::PrincipalComponentFinder*)p);
   }
   static void deleteArray_dmtpccLcLmathcLcLPrincipalComponentFinder(void *p) {
      delete [] ((::dmtpc::math::PrincipalComponentFinder*)p);
   }
   static void destruct_dmtpccLcLmathcLcLPrincipalComponentFinder(void *p) {
      typedef ::dmtpc::math::PrincipalComponentFinder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::math::PrincipalComponentFinder

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_dmtpccLcLmathcLcLEnergyTest(void *p) {
      delete ((::dmtpc::math::EnergyTest*)p);
   }
   static void deleteArray_dmtpccLcLmathcLcLEnergyTest(void *p) {
      delete [] ((::dmtpc::math::EnergyTest*)p);
   }
   static void destruct_dmtpccLcLmathcLcLEnergyTest(void *p) {
      typedef ::dmtpc::math::EnergyTest current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::math::EnergyTest

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_dmtpccLcLmathcLcLMultivariateTest(void *p) {
      delete ((::dmtpc::math::MultivariateTest*)p);
   }
   static void deleteArray_dmtpccLcLmathcLcLMultivariateTest(void *p) {
      delete [] ((::dmtpc::math::MultivariateTest*)p);
   }
   static void destruct_dmtpccLcLmathcLcLMultivariateTest(void *p) {
      typedef ::dmtpc::math::MultivariateTest current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::math::MultivariateTest

/********************************************************
* build/DmtpcMathCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDmtpcMathCint();

extern "C" void G__set_cpp_environmentDmtpcMathCint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/Angular.hh");
  G__add_compiledheader("include/ConvolvedSegment.hh");
  G__add_compiledheader("include/CrystalBallDist.hh");
  G__add_compiledheader("include/Distribution.hh");
  G__add_compiledheader("include/EnergyTest.hh");
  G__add_compiledheader("include/GaussianDist.hh");
  G__add_compiledheader("include/Geometry.hh");
  G__add_compiledheader("include/InverseGaussianDist.hh");
  G__add_compiledheader("include/LandGaus.hh");
  G__add_compiledheader("include/LogNormalDist.hh");
  G__add_compiledheader("include/MathConstants.hh");
  G__add_compiledheader("include/MultiNormalSampler.hh");
  G__add_compiledheader("include/MultivariateTest.hh");
  G__add_compiledheader("include/ParametricVonMisesHTTest.hh");
  G__add_compiledheader("include/PoissonDist.hh");
  G__add_compiledheader("include/Poly.hh");
  G__add_compiledheader("include/PrincipalComponentFinder.hh");
  G__add_compiledheader("include/SpecialPoly.hh");
  G__cpp_reset_tagtableDmtpcMathCint();
}
#include <new>
extern "C" int G__cpp_dllrevDmtpcMathCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* dmtpc::math */
static int G__DmtpcMathCint_170_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::lineSegmentConvolvedWithGaussian((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::lineSegmentConvolvedWithCauchy((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::lineSegmentConvolvedWithGaussian2D((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::lineSegmentConvolvedWithCauchy2D((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::integralOfLineSegmentConvolvedWithGaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::math::lineLineIntersection(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double) G__double(libp->para[6]), (double) G__double(libp->para[7])
, (double*) G__int(libp->para[8]), (double*) G__int(libp->para[9])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) dmtpc::math::lineRectIntersectionPoints(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3])
, (double) G__double(libp->para[4]), (double) G__double(libp->para[5])
, (double*) G__int(libp->para[6]), (double*) G__int(libp->para[7])
, (double*) G__int(libp->para[8]), (double*) G__int(libp->para[9])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::math::linePlaneIntersection((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (TVector3*) G__int(libp->para[2]), (TVector3*) G__int(libp->para[3])
, (double*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::math::line3DRectIntersection((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (TVector3*) G__int(libp->para[2]), (TVector3*) G__int(libp->para[3])
, (double*) G__int(libp->para[4]), (double*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::scalarProjection((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::scalarRejection((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::math::vectorProjection((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::linePointDistance((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (TVector3*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::pointPlaneDistance((TVector3*) G__int(libp->para[0]), (TVector3*) G__int(libp->para[1])
, (TVector3*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::landgaus((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::math::makeLandGausTF1((const char*) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) dmtpc::math::doLandGausFit((TH1*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) dmtpc::math::doLandGausFit((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::legendrePoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::math::legendrePoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::legendreNorm((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::assocLegendrePoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::sphericalHarmonicLegendre((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::sphericalHarmonicSin((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::sphericalHarmonicCos((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::sphericalHarmonicNorm((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::hermitePoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::math::hermitePoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::hermiteNorm((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::laguerrePoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::math::laguerrePoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::laguerreNorm((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::chebyshevFirstPoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::math::chebyshevFirstPoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::chebyshevFirstNorm((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::chebyshevSecondPoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::math::chebyshevSecondPoly((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_170_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::chebyshevSecondNorm((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::angle */
static int G__DmtpcMathCint_171_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::normalize((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::normalize((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::normalize_axial((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::normalize_axial((double) G__double(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::delta((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::delta_axial((double) G__double(libp->para[0]), (double) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::avg((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::avg((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::avg((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::avg_axial((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::avg_axial((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::avg_axial((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::resultant((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::resultant((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::resultant((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::resultant_axial((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (double*) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::resultant_axial((size_t) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::resultant_axial((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::rayleigh((double) G__double(libp->para[0]), (size_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::var((double) G__double(libp->para[0]), (size_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::a1inv((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::von_mises_kappa_estimate((double) G__double(libp->para[0]), (size_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::von_mises_dist((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::von_mises_dist_ht((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::wrapped_normal_dist((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::wrapped_normal_dist_ht((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::ratio_distribution((double*) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::kuipers_test((unsigned int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double*) G__int(libp->para[3])
, (bool) G__int(libp->para[4])));
      break;
   case 4:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::kuipers_test((unsigned int) G__int(libp->para[0]), (double*) G__int(libp->para[1])
, (unsigned int) G__int(libp->para[2]), (double*) G__int(libp->para[3])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) dmtpc::math::angle::kuipers_test((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_171_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::kuipers_p((double) G__double(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) dmtpc::math::angle::kuipers_p((double) G__double(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::Distribution */
static int G__DmtpcMathCint_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->isDiscrete());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->hasMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->hasMedian());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->hasMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->hasVariance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->hasSkewness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->hasKurtosis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->hasCDF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->hasInverseCDF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const dmtpc::math::Distribution*) G__getstructoffset())->numberOfPars());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const dmtpc::math::Distribution*) G__getstructoffset())->getParameters((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::Distribution*) G__getstructoffset())->setParameters((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->mean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->median());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->mode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->stddev());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->variance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->skewness());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->kurtosis());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->pdf((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->cdf((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->pdf((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->cdf((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->inverseCDF((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->operator()((double) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_172_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::Distribution*) G__getstructoffset())->operator()((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::math::Distribution G__TdmtpccLcLmathcLcLDistribution;
static int G__DmtpcMathCint_172_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::math::Distribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::math::Distribution*) (soff+(sizeof(dmtpc::math::Distribution)*i)))->~G__TdmtpccLcLmathcLcLDistribution();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::math::Distribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::math::Distribution*) (soff))->~G__TdmtpccLcLmathcLcLDistribution();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcMathCint_172_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::Distribution* dest = (dmtpc::math::Distribution*) G__getstructoffset();
   *dest = *(dmtpc::math::Distribution*) libp->para[0].ref;
   const dmtpc::math::Distribution& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::dist */

/* dmtpc::math::dist::CrystalBall */
static int G__DmtpcMathCint_174_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::CrystalBall* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::CrystalBall[n];
     } else {
       p = new((void*) gvp) dmtpc::math::dist::CrystalBall[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::CrystalBall;
     } else {
       p = new((void*) gvp) dmtpc::math::dist::CrystalBall;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_174_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::CrystalBall* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::math::dist::CrystalBall(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   } else {
     p = new((void*) gvp) dmtpc::math::dist::CrystalBall(
(double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]), (double) G__double(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_174_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::CrystalBall*) G__getstructoffset())->getMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_174_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::CrystalBall*) G__getstructoffset())->setMean((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_174_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::CrystalBall*) G__getstructoffset())->getSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_174_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::CrystalBall*) G__getstructoffset())->setSigma((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_174_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::CrystalBall*) G__getstructoffset())->getAlpha());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_174_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::CrystalBall*) G__getstructoffset())->setAlpha((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_174_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::CrystalBall*) G__getstructoffset())->getN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_174_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::CrystalBall*) G__getstructoffset())->setN((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcMathCint_174_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::math::dist::CrystalBall* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::math::dist::CrystalBall(*(dmtpc::math::dist::CrystalBall*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::math::dist::CrystalBall G__TdmtpccLcLmathcLcLdistcLcLCrystalBall;
static int G__DmtpcMathCint_174_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::math::dist::CrystalBall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::math::dist::CrystalBall*) (soff+(sizeof(dmtpc::math::dist::CrystalBall)*i)))->~G__TdmtpccLcLmathcLcLdistcLcLCrystalBall();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::math::dist::CrystalBall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::math::dist::CrystalBall*) (soff))->~G__TdmtpccLcLmathcLcLdistcLcLCrystalBall();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcMathCint_174_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::CrystalBall* dest = (dmtpc::math::dist::CrystalBall*) G__getstructoffset();
   *dest = *(dmtpc::math::dist::CrystalBall*) libp->para[0].ref;
   const dmtpc::math::dist::CrystalBall& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::MultivariateTest */
static int G__DmtpcMathCint_176_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues((unsigned int) G__int(libp->para[0]), (const double* *const) G__int(libp->para[1])
, (const double* *const) G__int(libp->para[2]), (const double* *const) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues((unsigned int) G__int(libp->para[0]), (const double* *const) G__int(libp->para[1])
, (const double* *const) G__int(libp->para[2]), (const double* *const) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues((unsigned int) G__int(libp->para[0]), (const double* *const) G__int(libp->para[1])
, (const double* *const) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues((unsigned int) G__int(libp->para[0]), (const double* *const) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_176_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues((unsigned int) G__int(libp->para[0]), (const double* *const) G__int(libp->para[1])
, (const double* *const) G__int(libp->para[2]), (const double* *const) G__int(libp->para[3])
, (double*) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues((unsigned int) G__int(libp->para[0]), (const double* *const) G__int(libp->para[1])
, (const double* *const) G__int(libp->para[2]), (const double* *const) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues((unsigned int) G__int(libp->para[0]), (const double* *const) G__int(libp->para[1])
, (const double* *const) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues((unsigned int) G__int(libp->para[0]), (const double* *const) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_176_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues(
(TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2]), (const char* *const) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (bool) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2]), (const char* *const) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2]), (const char* *const) G__int(libp->para[3])
, (const char*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2]), (const char* *const) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setAValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_176_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues(
(TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2]), (const char* *const) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])
, (bool) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2]), (const char* *const) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2]), (const char* *const) G__int(libp->para[3])
, (const char*) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2]), (const char* *const) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])
, (const char* *const) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setBValues((TTree*) G__int(libp->para[0]), (const char* *const) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_176_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::MultivariateTest*) G__getstructoffset())->testStatistic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_176_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setScale((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->setScale((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_176_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->treatAsAngle((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((dmtpc::math::MultivariateTest*) G__getstructoffset())->treatAsAngle((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::math::MultivariateTest G__TdmtpccLcLmathcLcLMultivariateTest;
static int G__DmtpcMathCint_176_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::math::MultivariateTest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::math::MultivariateTest*) (soff+(sizeof(dmtpc::math::MultivariateTest)*i)))->~G__TdmtpccLcLmathcLcLMultivariateTest();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::math::MultivariateTest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::math::MultivariateTest*) (soff))->~G__TdmtpccLcLmathcLcLMultivariateTest();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::EnergyTest */
static int G__DmtpcMathCint_185_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::EnergyTest* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::EnergyTest(
(unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (dmtpc::math::EnergyTest::DistanceMetric) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) dmtpc::math::EnergyTest(
(unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1])
, (dmtpc::math::EnergyTest::DistanceMetric) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::EnergyTest((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::math::EnergyTest((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::EnergyTest((unsigned int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::math::EnergyTest((unsigned int) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_185_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::EnergyTest*) G__getstructoffset())->getAA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_185_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::EnergyTest*) G__getstructoffset())->getBB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_185_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::EnergyTest*) G__getstructoffset())->getAB());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_185_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::EnergyTest*) G__getstructoffset())->getBA());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcMathCint_185_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::math::EnergyTest* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::math::EnergyTest(*(dmtpc::math::EnergyTest*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::math::EnergyTest G__TdmtpccLcLmathcLcLEnergyTest;
static int G__DmtpcMathCint_185_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::math::EnergyTest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::math::EnergyTest*) (soff+(sizeof(dmtpc::math::EnergyTest)*i)))->~G__TdmtpccLcLmathcLcLEnergyTest();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::math::EnergyTest*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::math::EnergyTest*) (soff))->~G__TdmtpccLcLmathcLcLEnergyTest();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::dist::Gaussian */
static int G__DmtpcMathCint_187_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::Gaussian* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::Gaussian[n];
     } else {
       p = new((void*) gvp) dmtpc::math::dist::Gaussian[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::Gaussian;
     } else {
       p = new((void*) gvp) dmtpc::math::dist::Gaussian;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_187_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::Gaussian* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::math::dist::Gaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) dmtpc::math::dist::Gaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_187_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::Gaussian*) G__getstructoffset())->getMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_187_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::Gaussian*) G__getstructoffset())->setMean((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_187_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::Gaussian*) G__getstructoffset())->getSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_187_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::Gaussian*) G__getstructoffset())->setSigma((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcMathCint_187_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::math::dist::Gaussian* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::math::dist::Gaussian(*(dmtpc::math::dist::Gaussian*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::math::dist::Gaussian G__TdmtpccLcLmathcLcLdistcLcLGaussian;
static int G__DmtpcMathCint_187_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::math::dist::Gaussian*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::math::dist::Gaussian*) (soff+(sizeof(dmtpc::math::dist::Gaussian)*i)))->~G__TdmtpccLcLmathcLcLdistcLcLGaussian();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::math::dist::Gaussian*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::math::dist::Gaussian*) (soff))->~G__TdmtpccLcLmathcLcLdistcLcLGaussian();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcMathCint_187_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::Gaussian* dest = (dmtpc::math::dist::Gaussian*) G__getstructoffset();
   *dest = *(dmtpc::math::dist::Gaussian*) libp->para[0].ref;
   const dmtpc::math::dist::Gaussian& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::dist::InverseGaussian */
static int G__DmtpcMathCint_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::InverseGaussian* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::InverseGaussian[n];
     } else {
       p = new((void*) gvp) dmtpc::math::dist::InverseGaussian[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::InverseGaussian;
     } else {
       p = new((void*) gvp) dmtpc::math::dist::InverseGaussian;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::InverseGaussian* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::math::dist::InverseGaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) dmtpc::math::dist::InverseGaussian((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::InverseGaussian*) G__getstructoffset())->getMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::InverseGaussian*) G__getstructoffset())->getLambda());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_189_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::InverseGaussian*) G__getstructoffset())->setMean((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_189_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::InverseGaussian*) G__getstructoffset())->setLambda((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcMathCint_189_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::math::dist::InverseGaussian* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::math::dist::InverseGaussian(*(dmtpc::math::dist::InverseGaussian*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::math::dist::InverseGaussian G__TdmtpccLcLmathcLcLdistcLcLInverseGaussian;
static int G__DmtpcMathCint_189_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::math::dist::InverseGaussian*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::math::dist::InverseGaussian*) (soff+(sizeof(dmtpc::math::dist::InverseGaussian)*i)))->~G__TdmtpccLcLmathcLcLdistcLcLInverseGaussian();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::math::dist::InverseGaussian*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::math::dist::InverseGaussian*) (soff))->~G__TdmtpccLcLmathcLcLdistcLcLInverseGaussian();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcMathCint_189_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::InverseGaussian* dest = (dmtpc::math::dist::InverseGaussian*) G__getstructoffset();
   *dest = *(dmtpc::math::dist::InverseGaussian*) libp->para[0].ref;
   const dmtpc::math::dist::InverseGaussian& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::dist::LogNormal */
static int G__DmtpcMathCint_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::LogNormal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::LogNormal[n];
     } else {
       p = new((void*) gvp) dmtpc::math::dist::LogNormal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::LogNormal;
     } else {
       p = new((void*) gvp) dmtpc::math::dist::LogNormal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::LogNormal* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::math::dist::LogNormal((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) dmtpc::math::dist::LogNormal((double) G__double(libp->para[0]), (double) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::LogNormal*) G__getstructoffset())->getMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::LogNormal*) G__getstructoffset())->setMean((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::LogNormal*) G__getstructoffset())->getSigma());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::LogNormal*) G__getstructoffset())->setSigma((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcMathCint_191_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::math::dist::LogNormal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::math::dist::LogNormal(*(dmtpc::math::dist::LogNormal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::math::dist::LogNormal G__TdmtpccLcLmathcLcLdistcLcLLogNormal;
static int G__DmtpcMathCint_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::math::dist::LogNormal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::math::dist::LogNormal*) (soff+(sizeof(dmtpc::math::dist::LogNormal)*i)))->~G__TdmtpccLcLmathcLcLdistcLcLLogNormal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::math::dist::LogNormal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::math::dist::LogNormal*) (soff))->~G__TdmtpccLcLmathcLcLdistcLcLLogNormal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcMathCint_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::LogNormal* dest = (dmtpc::math::dist::LogNormal*) G__getstructoffset();
   *dest = *(dmtpc::math::dist::LogNormal*) libp->para[0].ref;
   const dmtpc::math::dist::LogNormal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::dist::Poisson */
static int G__DmtpcMathCint_356_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::Poisson* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::Poisson[n];
     } else {
       p = new((void*) gvp) dmtpc::math::dist::Poisson[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::dist::Poisson;
     } else {
       p = new((void*) gvp) dmtpc::math::dist::Poisson;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_356_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::Poisson* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::math::dist::Poisson((double) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) dmtpc::math::dist::Poisson((double) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_356_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::dist::Poisson*) G__getstructoffset())->getMean());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_356_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::dist::Poisson*) G__getstructoffset())->setMean((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcMathCint_356_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::math::dist::Poisson* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::math::dist::Poisson(*(dmtpc::math::dist::Poisson*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::math::dist::Poisson G__TdmtpccLcLmathcLcLdistcLcLPoisson;
static int G__DmtpcMathCint_356_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::math::dist::Poisson*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::math::dist::Poisson*) (soff+(sizeof(dmtpc::math::dist::Poisson)*i)))->~G__TdmtpccLcLmathcLcLdistcLcLPoisson();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::math::dist::Poisson*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::math::dist::Poisson*) (soff))->~G__TdmtpccLcLmathcLcLdistcLcLPoisson();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcMathCint_356_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::dist::Poisson* dest = (dmtpc::math::dist::Poisson*) G__getstructoffset();
   *dest = *(dmtpc::math::dist::Poisson*) libp->para[0].ref;
   const dmtpc::math::dist::Poisson& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::math::PrincipalComponentFinder */
static int G__DmtpcMathCint_368_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::PrincipalComponentFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::PrincipalComponentFinder((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) dmtpc::math::PrincipalComponentFinder((int) G__int(libp->para[0]), (bool) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::math::PrincipalComponentFinder((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) dmtpc::math::PrincipalComponentFinder((int) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->addPoint((double*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->reserve((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->setPointsInDim((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->setPointInDim((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->setX((int) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->setY((int) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->setZ((int) G__int(libp->para[0]), (double*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->clearPoints();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->ndim());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->isSolved());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->solve());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 68, (long) ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->getComponent((int) G__int(libp->para[0]), (double*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 68, (long) ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->getComponent((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 68, (long) ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->getComponent());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->getWeight((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->getWeight());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 100, (double) ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->getMean((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->getMean());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->asVec((int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   case 0:
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->asVec();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcMathCint_368_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const dmtpc::math::PrincipalComponentFinder*) G__getstructoffset())->asPhi((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcMathCint_368_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::math::PrincipalComponentFinder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::math::PrincipalComponentFinder(*(dmtpc::math::PrincipalComponentFinder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::math::PrincipalComponentFinder G__TdmtpccLcLmathcLcLPrincipalComponentFinder;
static int G__DmtpcMathCint_368_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::math::PrincipalComponentFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::math::PrincipalComponentFinder*) (soff+(sizeof(dmtpc::math::PrincipalComponentFinder)*i)))->~G__TdmtpccLcLmathcLcLPrincipalComponentFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::math::PrincipalComponentFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::math::PrincipalComponentFinder*) (soff))->~G__TdmtpccLcLmathcLcLPrincipalComponentFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcMathCint_368_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::math::PrincipalComponentFinder* dest = (dmtpc::math::PrincipalComponentFinder*) G__getstructoffset();
   *dest = *(dmtpc::math::PrincipalComponentFinder*) libp->para[0].ref;
   const dmtpc::math::PrincipalComponentFinder& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* dmtpc::math */

/* dmtpc::math::angle */

/* dmtpc::math::Distribution */

/* dmtpc::math::dist */

/* dmtpc::math::dist::CrystalBall */

/* dmtpc::math::MultivariateTest */

/* dmtpc::math::EnergyTest */

/* dmtpc::math::dist::Gaussian */

/* dmtpc::math::dist::InverseGaussian */

/* dmtpc::math::dist::LogNormal */

/* dmtpc::math::dist::Poisson */

/* dmtpc::math::PrincipalComponentFinder */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDmtpcMathCint {
 public:
  G__Sizep2memfuncDmtpcMathCint(): p(&G__Sizep2memfuncDmtpcMathCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDmtpcMathCint::*p)();
};

size_t G__get_sizep2memfuncDmtpcMathCint()
{
  G__Sizep2memfuncDmtpcMathCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDmtpcMathCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall))) {
     dmtpc::math::dist::CrystalBall *G__Lderived;
     G__Lderived=(dmtpc::math::dist::CrystalBall*)0x1000;
     {
       dmtpc::math::Distribution *G__Lpbase=(dmtpc::math::Distribution*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall),G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest))) {
     dmtpc::math::EnergyTest *G__Lderived;
     G__Lderived=(dmtpc::math::EnergyTest*)0x1000;
     {
       dmtpc::math::MultivariateTest *G__Lpbase=(dmtpc::math::MultivariateTest*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest),G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLMultivariateTest),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian))) {
     dmtpc::math::dist::Gaussian *G__Lderived;
     G__Lderived=(dmtpc::math::dist::Gaussian*)0x1000;
     {
       dmtpc::math::Distribution *G__Lpbase=(dmtpc::math::Distribution*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian),G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian))) {
     dmtpc::math::dist::InverseGaussian *G__Lderived;
     G__Lderived=(dmtpc::math::dist::InverseGaussian*)0x1000;
     {
       dmtpc::math::Distribution *G__Lpbase=(dmtpc::math::Distribution*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian),G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal))) {
     dmtpc::math::dist::LogNormal *G__Lderived;
     G__Lderived=(dmtpc::math::dist::LogNormal*)0x1000;
     {
       dmtpc::math::Distribution *G__Lpbase=(dmtpc::math::Distribution*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal),G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson))) {
     dmtpc::math::dist::Poisson *G__Lderived;
     G__Lderived=(dmtpc::math::dist::Poisson*)0x1000;
     {
       dmtpc::math::Distribution *G__Lpbase=(dmtpc::math::Distribution*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson),G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDmtpcMathCint() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const double*>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<double*>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<MinuitParameter>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::Minuit2::MinuitParameter>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double> >",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* dmtpc::math */
static void G__setup_memvardmtpccLcLmath(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmath));
   {
   G__memvar_setup((void*)(&dmtpc::math::npar_lineSegmentConvolvedWithGaussian),105,0,1,-1,-1,-1,1,"npar_lineSegmentConvolvedWithGaussian=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::npar_lineSegmentConvolvedWithCauchy),105,0,1,-1,-1,-1,1,"npar_lineSegmentConvolvedWithCauchy=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::npar_lineSegmentConvolvedWithGaussian2D),105,0,1,-1,-1,-1,1,"npar_lineSegmentConvolvedWithGaussian2D=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::npar_lineSegmentConvolvedWithCauchy2D),105,0,1,-1,-1,-1,1,"npar_lineSegmentConvolvedWithCauchy2D=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::npar_integralOfLineSegmentConvolvedWithGaussian),105,0,1,-1,-1,-1,1,"npar_integralOfLineSegmentConvolvedWithGaussian=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::EXP),100,0,1,-1,-1,-1,1,"EXP=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::LOG2_E),100,0,1,-1,-1,-1,1,"LOG2_E=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::LOG10_E),100,0,1,-1,-1,-1,1,"LOG10_E=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::LOG_2),100,0,1,-1,-1,-1,1,"LOG_2=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::LOG_10),100,0,1,-1,-1,-1,1,"LOG_10=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::PI),100,0,1,-1,-1,-1,1,"PI=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::PI_2),100,0,1,-1,-1,-1,1,"PI_2=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::PI_4),100,0,1,-1,-1,-1,1,"PI_4=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::INV_PI),100,0,1,-1,-1,-1,1,"INV_PI=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::TWO_PI),100,0,1,-1,-1,-1,1,"TWO_PI=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::TWO_SQRT_PI),100,0,1,-1,-1,-1,1,"TWO_SQRT_PI=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::SQRT_2),100,0,1,-1,-1,-1,1,"SQRT_2=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::SQRT_HALF),100,0,1,-1,-1,-1,1,"SQRT_HALF=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::SQRT_PI),100,0,1,-1,-1,-1,1,"SQRT_PI=",0,(char*)NULL);
   G__memvar_setup((void*)(&dmtpc::math::EULER_GAMMA),100,0,1,-1,-1,-1,1,"EULER_GAMMA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::angle */
static void G__setup_memvardmtpccLcLmathcLcLangle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLangle));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::Distribution */
static void G__setup_memvardmtpccLcLmathcLcLDistribution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution));
   { dmtpc::math::Distribution *p; p=(dmtpc::math::Distribution*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fIsDiscrete=",0,"/< true if discrete");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fHasMean=",0,"/< mean is available");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fHasMedian=",0,"/< median is available");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fHasMode=",0,"/< mode is available");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fHasVar=",0,"/< variance is available");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fHasSkew=",0,"/< skewness is available");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fHasKurt=",0,"/< kurtosis is available");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fHasCDF=",0,"/< CDF is available");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"fHasInvCDF=",0,"/< inverse CDF is available");
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::dist */
static void G__setup_memvardmtpccLcLmathcLcLdist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdist));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::dist::CrystalBall */
static void G__setup_memvardmtpccLcLmathcLcLdistcLcLCrystalBall(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall));
   { dmtpc::math::dist::CrystalBall *p; p=(dmtpc::math::dist::CrystalBall*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMean=",0,"/< the mean of the Gaussian");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSigma=",0,"/< the standard deviation of the Gaussian");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fAlpha=",0,"/< the boundary between the Gaussian and polynomial parts");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fN=",0,"/< the order of the polynomial part");
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::MultivariateTest */
static void G__setup_memvardmtpccLcLmathcLcLMultivariateTest(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLMultivariateTest));
   { dmtpc::math::MultivariateTest *p; p=(dmtpc::math::MultivariateTest*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR),G__defined_typename("vector<const double*>"),-1,2,"vals_A=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR),G__defined_typename("vector<const double*>"),-1,2,"vals_B=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR),G__defined_typename("vector<double*>"),-1,2,"tree_store_A=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR),G__defined_typename("vector<double*>"),-1,2,"tree_store_B=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,1,-1,-1,-1,2,"weights_A=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,1,-1,-1,-1,2,"weights_B=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sum_weights_A=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,2,"sum_weights_B=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR),G__defined_typename("vector<const double*>"),-1,2,"vals_A_err_up=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR),G__defined_typename("vector<const double*>"),-1,2,"vals_A_err_dn=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR),G__defined_typename("vector<const double*>"),-1,2,"vals_B_err_up=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR),G__defined_typename("vector<const double*>"),-1,2,"vals_B_err_dn=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,2,"scales=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEboolcOallocatorlEboolgRsPgR),G__defined_typename("vector<bool>"),-1,2,"isAngle=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"num_A=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"ndim=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"num_B=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"Adirty=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,2,"Bdirty=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::EnergyTest */
static void G__setup_memvardmtpccLcLmathcLcLEnergyTest(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest));
   { dmtpc::math::EnergyTest *p; p=(dmtpc::math::EnergyTest*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTestcLcLDistanceMetric),-1,-2,1,G__FastAllocString(2048).Format("SIMPLE=%lldLL",(long long)dmtpc::math::EnergyTest::SIMPLE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTestcLcLDistanceMetric),-1,-2,1,G__FastAllocString(2048).Format("ERRORS_IN_QUADTRATURE=%lldLL",(long long)dmtpc::math::EnergyTest::ERRORS_IN_QUADTRATURE).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTestcLcLDistanceMetric),-1,-2,1,G__FastAllocString(2048).Format("AVERAGE_ERROR_DISTANCE=%lldLL",(long long)dmtpc::math::EnergyTest::AVERAGE_ERROR_DISTANCE).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"alpha=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"last_AA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"last_AB=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"last_BA=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"last_BB=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTestcLcLDistanceMetric),-1,-1,4,"metric=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::dist::Gaussian */
static void G__setup_memvardmtpccLcLmathcLcLdistcLcLGaussian(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian));
   { dmtpc::math::dist::Gaussian *p; p=(dmtpc::math::dist::Gaussian*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMean=",0,"/< the mean");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSigma=",0,"/< the standard deviation");
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::dist::InverseGaussian */
static void G__setup_memvardmtpccLcLmathcLcLdistcLcLInverseGaussian(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian));
   { dmtpc::math::dist::InverseGaussian *p; p=(dmtpc::math::dist::InverseGaussian*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMean=",0,"/< the mean");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fLambda=",0,"/< the width");
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::dist::LogNormal */
static void G__setup_memvardmtpccLcLmathcLcLdistcLcLLogNormal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal));
   { dmtpc::math::dist::LogNormal *p; p=(dmtpc::math::dist::LogNormal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMean=",0,"/< the mean log(x)");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fSigma=",0,"/< the std deviation of log(x)");
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::dist::Poisson */
static void G__setup_memvardmtpccLcLmathcLcLdistcLcLPoisson(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson));
   { dmtpc::math::dist::Poisson *p; p=(dmtpc::math::dist::Poisson*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"fMean=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::math::PrincipalComponentFinder */
static void G__setup_memvardmtpccLcLmathcLcLPrincipalComponentFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder));
   { dmtpc::math::PrincipalComponentFinder *p; p=(dmtpc::math::PrincipalComponentFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,4,"points=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,4,"components=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"means=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcMathCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"weights=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"solved=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fast=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDmtpcMathCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdmtpccLcLmath(void) {
   /* dmtpc::math */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmath));
   G__memfunc_setup("lineSegmentConvolvedWithGaussian",3330,G__DmtpcMathCint_170_0_1, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - pars", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::lineSegmentConvolvedWithGaussian) ), 0);
   G__memfunc_setup("lineSegmentConvolvedWithCauchy",3108,G__DmtpcMathCint_170_0_2, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - pars", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::lineSegmentConvolvedWithCauchy) ), 0);
   G__memfunc_setup("lineSegmentConvolvedWithGaussian2D",3448,G__DmtpcMathCint_170_0_3, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - pars", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::lineSegmentConvolvedWithGaussian2D) ), 0);
   G__memfunc_setup("lineSegmentConvolvedWithCauchy2D",3226,G__DmtpcMathCint_170_0_4, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - pars", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::lineSegmentConvolvedWithCauchy2D) ), 0);
   G__memfunc_setup("integralOfLineSegmentConvolvedWithGaussian",4333,G__DmtpcMathCint_170_0_5, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - y0 d - - 0 - y1 "
"D - - 0 - pars", (char*)NULL, (void*) G__func2void( (double (*)(double, double, double*))(&dmtpc::math::integralOfLineSegmentConvolvedWithGaussian) ), 0);
   G__memfunc_setup("lineLineIntersection",2087,G__DmtpcMathCint_170_0_6, 105, -1, -1, 0, 10, 1, 1, 0, 
"d - - 0 - x1 d - - 0 - y1 "
"d - - 0 - x2 d - - 0 - y2 "
"d - - 0 - x3 d - - 0 - y3 "
"d - - 0 - x4 d - - 0 - y4 "
"D - - 0 - xint D - - 0 - yint", (char*)NULL, (void*) G__func2void( (int (*)(double, double, double, double, double, double, double, double, double*, double*))(&dmtpc::math::lineLineIntersection) ), 0);
   G__memfunc_setup("lineRectIntersectionPoints",2730,G__DmtpcMathCint_170_0_7, 103, -1, -1, 0, 10, 1, 1, 0, 
"d - - 0 - line_theta d - - 0 - line_r "
"d - - 0 - rect_xmin d - - 0 - rect_xmax "
"d - - 0 - rect_ymin d - - 0 - rect_ymax "
"D - - 0 - x0 D - - 0 - y0 "
"D - - 0 - x1 D - - 0 - y1", (char*)NULL, (void*) G__func2void( (bool (*)(double, double, double, double, double, double, double*, double*, double*, double*))(&dmtpc::math::lineRectIntersectionPoints) ), 0);
   G__memfunc_setup("linePlaneIntersection",2191,G__DmtpcMathCint_170_0_8, 105, -1, -1, 0, 5, 1, 1, 0, 
"U 'TVector3' - 10 - l0 U 'TVector3' - 10 - l "
"U 'TVector3' - 10 - p0 U 'TVector3' - 10 - n "
"D - - 0 - t", (char*)NULL, (void*) G__func2void( (int (*)(const TVector3*, const TVector3*, const TVector3*, const TVector3*, double*))(&dmtpc::math::linePlaneIntersection) ), 0);
   G__memfunc_setup("line3DRectIntersection",2212,G__DmtpcMathCint_170_0_9, 105, -1, -1, 0, 6, 1, 1, 0, 
"U 'TVector3' - 10 - l0 U 'TVector3' - 10 - l "
"U 'TVector3' - 10 - r0 U 'TVector3' - 10 - r1 "
"D - - 0 - t0 D - - 0 - t1", (char*)NULL, (void*) G__func2void( (int (*)(const TVector3*, const TVector3*, const TVector3*, const TVector3*, double*, double*))(&dmtpc::math::line3DRectIntersection) ), 0);
   G__memfunc_setup("scalarProjection",1683,G__DmtpcMathCint_170_0_10, 100, -1, -1, 0, 2, 1, 1, 0, 
"U 'TVector3' - 10 - a U 'TVector3' - 10 - b", (char*)NULL, (void*) G__func2void( (double (*)(const TVector3*, const TVector3*))(&dmtpc::math::scalarProjection) ), 0);
   G__memfunc_setup("scalarRejection",1561,G__DmtpcMathCint_170_0_11, 100, -1, -1, 0, 2, 1, 1, 0, 
"U 'TVector3' - 10 - a U 'TVector3' - 10 - b", (char*)NULL, (void*) G__func2void( (double (*)(const TVector3*, const TVector3*))(&dmtpc::math::scalarRejection) ), 0);
   G__memfunc_setup("vectorProjection",1712,G__DmtpcMathCint_170_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TVector3' - 0 - a U 'TVector3' - 10 - b", (char*)NULL, (void*) G__func2void( (void (*)(TVector3*, const TVector3*))(&dmtpc::math::vectorProjection) ), 0);
   G__memfunc_setup("linePointDistance",1757,G__DmtpcMathCint_170_0_13, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TVector3' - 10 - pt U 'TVector3' - 10 - s0 "
"U 'TVector3' - 10 - v", (char*)NULL, (void*) G__func2void( (double (*)(const TVector3*, const TVector3*, const TVector3*))(&dmtpc::math::linePointDistance) ), 0);
   G__memfunc_setup("pointPlaneDistance",1861,G__DmtpcMathCint_170_0_14, 100, -1, -1, 0, 3, 1, 1, 0, 
"U 'TVector3' - 10 - pt U 'TVector3' - 10 - p0 "
"U 'TVector3' - 10 - pn", (char*)NULL, (void*) G__func2void( (double (*)(const TVector3*, const TVector3*, const TVector3*))(&dmtpc::math::pointPlaneDistance) ), 0);
   G__memfunc_setup("landgaus",847,G__DmtpcMathCint_170_0_15, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::landgaus) ), 0);
   G__memfunc_setup("makeLandGausTF1",1400,G__DmtpcMathCint_170_0_16, 85, G__get_linked_tagnum(&G__DmtpcMathCintLN_TF1), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name d - - 0 - min "
"d - - 0 - max", (char*)NULL, (void*) G__func2void( (TF1* (*)(const char*, double, double))(&dmtpc::math::makeLandGausTF1) ), 0);
   G__memfunc_setup("doLandGausFit",1285,G__DmtpcMathCint_170_0_17, 85, G__get_linked_tagnum(&G__DmtpcMathCintLN_TF1), -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 0 - hist C - - 10 '\"LME\"' fitopt", (char*)NULL, (void*) G__func2void( (TF1* (*)(TH1*, const char*))(&dmtpc::math::doLandGausFit) ), 0);
   G__memfunc_setup("legendrePoly",1258,G__DmtpcMathCint_170_0_18, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x i - - 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, int))(&dmtpc::math::legendrePoly) ), 0);
   G__memfunc_setup("legendrePoly",1258,G__DmtpcMathCint_170_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x i - - 0 - nmax "
"D - - 0 - out", (char*)NULL, (void*) G__func2void( (void (*)(double, int, double*))(&dmtpc::math::legendrePoly) ), 0);
   G__memfunc_setup("legendreNorm",1250,G__DmtpcMathCint_170_0_20, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n1 i - - 0 - n2", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&dmtpc::math::legendreNorm) ), 0);
   G__memfunc_setup("assocLegendrePoly",1763,G__DmtpcMathCint_170_0_21, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x i - - 0 - l "
"i - - 0 - m", (char*)NULL, (void*) G__func2void( (double (*)(double, int, int))(&dmtpc::math::assocLegendrePoly) ), 0);
   G__memfunc_setup("sphericalHarmonicLegendre",2578,G__DmtpcMathCint_170_0_22, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - theta i - - 0 - l "
"i - - 0 - m", (char*)NULL, (void*) G__func2void( (double (*)(double, int, int))(&dmtpc::math::sphericalHarmonicLegendre) ), 0);
   G__memfunc_setup("sphericalHarmonicSin",2070,G__DmtpcMathCint_170_0_23, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - theta d - - 0 - phi "
"i - - 0 - l i - - 0 - m", (char*)NULL, (void*) G__func2void( (double (*)(double, double, int, int))(&dmtpc::math::sphericalHarmonicSin) ), 0);
   G__memfunc_setup("sphericalHarmonicCos",2065,G__DmtpcMathCint_170_0_24, 100, -1, -1, 0, 4, 1, 1, 0, 
"d - - 0 - theta d - - 0 - phi "
"i - - 0 - l i - - 0 - m", (char*)NULL, (void*) G__func2void( (double (*)(double, double, int, int))(&dmtpc::math::sphericalHarmonicCos) ), 0);
   G__memfunc_setup("sphericalHarmonicNorm",2184,G__DmtpcMathCint_170_0_25, 100, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - l1 i - - 0 - l2 "
"i - - 0 - m1 i - - 0 - m2", (char*)NULL, (void*) G__func2void( (double (*)(int, int, int, int))(&dmtpc::math::sphericalHarmonicNorm) ), 0);
   G__memfunc_setup("hermitePoly",1170,G__DmtpcMathCint_170_0_26, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x i - - 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, int))(&dmtpc::math::hermitePoly) ), 0);
   G__memfunc_setup("hermitePoly",1170,G__DmtpcMathCint_170_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x i - - 0 - nmax "
"D - - 0 - out", (char*)NULL, (void*) G__func2void( (void (*)(double, int, double*))(&dmtpc::math::hermitePoly) ), 0);
   G__memfunc_setup("hermiteNorm",1162,G__DmtpcMathCint_170_0_28, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n1 i - - 0 - n2", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&dmtpc::math::hermiteNorm) ), 0);
   G__memfunc_setup("laguerrePoly",1275,G__DmtpcMathCint_170_0_29, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x i - - 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, int))(&dmtpc::math::laguerrePoly) ), 0);
   G__memfunc_setup("laguerrePoly",1275,G__DmtpcMathCint_170_0_30, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x i - - 0 - nmax "
"D - - 0 - out", (char*)NULL, (void*) G__func2void( (void (*)(double, int, double*))(&dmtpc::math::laguerrePoly) ), 0);
   G__memfunc_setup("laguerreNorm",1267,G__DmtpcMathCint_170_0_31, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n1 i - - 0 - n2", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&dmtpc::math::laguerreNorm) ), 0);
   G__memfunc_setup("chebyshevFirstPoly",1901,G__DmtpcMathCint_170_0_32, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x i - - 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, int))(&dmtpc::math::chebyshevFirstPoly) ), 0);
   G__memfunc_setup("chebyshevFirstPoly",1901,G__DmtpcMathCint_170_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x i - - 0 - nmax "
"D - - 0 - out", (char*)NULL, (void*) G__func2void( (void (*)(double, int, double*))(&dmtpc::math::chebyshevFirstPoly) ), 0);
   G__memfunc_setup("chebyshevFirstNorm",1893,G__DmtpcMathCint_170_0_34, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n1 i - - 0 - n2", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&dmtpc::math::chebyshevFirstNorm) ), 0);
   G__memfunc_setup("chebyshevSecondPoly",1985,G__DmtpcMathCint_170_0_35, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - x i - - 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, int))(&dmtpc::math::chebyshevSecondPoly) ), 0);
   G__memfunc_setup("chebyshevSecondPoly",1985,G__DmtpcMathCint_170_0_36, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - x i - - 0 - nmax "
"D - - 0 - out", (char*)NULL, (void*) G__func2void( (void (*)(double, int, double*))(&dmtpc::math::chebyshevSecondPoly) ), 0);
   G__memfunc_setup("chebyshevSecondNorm",1977,G__DmtpcMathCint_170_0_37, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n1 i - - 0 - n2", (char*)NULL, (void*) G__func2void( (double (*)(int, int))(&dmtpc::math::chebyshevSecondNorm) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLangle(void) {
   /* dmtpc::math::angle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLangle));
   G__memfunc_setup("normalize",977,G__DmtpcMathCint_171_0_1, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - phi d - - 0 '0' center", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&dmtpc::math::angle::normalize) ), 0);
   G__memfunc_setup("normalize_axial",1599,G__DmtpcMathCint_171_0_2, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - phi d - - 0 '0' center", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&dmtpc::math::angle::normalize_axial) ), 0);
   G__memfunc_setup("delta",522,G__DmtpcMathCint_171_0_3, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - phi0 d - - 0 - phi1", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&dmtpc::math::angle::delta) ), 0);
   G__memfunc_setup("delta_axial",1144,G__DmtpcMathCint_171_0_4, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - phi0 d - - 0 - phi1", (char*)NULL, (void*) G__func2void( (double (*)(double, double))(&dmtpc::math::angle::delta_axial) ), 0);
   G__memfunc_setup("avg",318,G__DmtpcMathCint_171_0_5, 100, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - nangles D - - 10 - angles "
"D - - 10 '0' weights", (char*)NULL, (void*) G__func2void( (double (*)(size_t, const double*, const double*))(&dmtpc::math::angle::avg) ), 0);
   G__memfunc_setup("avg",318,G__DmtpcMathCint_171_0_6, 100, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 10 - hist", (char*)NULL, (void*) G__func2void( (double (*)(const TH1*))(&dmtpc::math::angle::avg) ), 0);
   G__memfunc_setup("avg_axial",940,G__DmtpcMathCint_171_0_7, 100, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - nangles D - - 10 - angles "
"D - - 10 '0' weights", (char*)NULL, (void*) G__func2void( (double (*)(size_t, const double*, const double*))(&dmtpc::math::angle::avg_axial) ), 0);
   G__memfunc_setup("avg_axial",940,G__DmtpcMathCint_171_0_8, 100, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 10 - hist", (char*)NULL, (void*) G__func2void( (double (*)(const TH1*))(&dmtpc::math::angle::avg_axial) ), 0);
   G__memfunc_setup("resultant",994,G__DmtpcMathCint_171_0_9, 100, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - nangles D - - 10 - angles "
"D - - 10 '0' weights", (char*)NULL, (void*) G__func2void( (double (*)(size_t, const double*, const double*))(&dmtpc::math::angle::resultant) ), 0);
   G__memfunc_setup("resultant",994,G__DmtpcMathCint_171_0_10, 100, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 10 - hist", (char*)NULL, (void*) G__func2void( (double (*)(const TH1*))(&dmtpc::math::angle::resultant) ), 0);
   G__memfunc_setup("resultant_axial",1616,G__DmtpcMathCint_171_0_11, 100, -1, -1, 0, 3, 1, 1, 0, 
"k - 'size_t' 0 - nangles D - - 10 - angles "
"D - - 10 '0' weights", (char*)NULL, (void*) G__func2void( (double (*)(size_t, const double*, const double*))(&dmtpc::math::angle::resultant_axial) ), 0);
   G__memfunc_setup("resultant_axial",1616,G__DmtpcMathCint_171_0_12, 100, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 10 - hist", (char*)NULL, (void*) G__func2void( (double (*)(const TH1*))(&dmtpc::math::angle::resultant_axial) ), 0);
   G__memfunc_setup("rayleigh",853,G__DmtpcMathCint_171_0_13, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - resultant k - 'size_t' 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, size_t))(&dmtpc::math::angle::rayleigh) ), 0);
   G__memfunc_setup("var",329,G__DmtpcMathCint_171_0_14, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - resultant k - 'size_t' 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, size_t))(&dmtpc::math::angle::var) ), 0);
   G__memfunc_setup("a1inv",479,G__DmtpcMathCint_171_0_15, 100, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - x", (char*)NULL, (void*) G__func2void( (double (*)(double))(&dmtpc::math::angle::a1inv) ), 0);
   G__memfunc_setup("von_mises_kappa_estimate",2554,G__DmtpcMathCint_171_0_16, 100, -1, -1, 0, 2, 1, 1, 0, 
"d - - 0 - resultant k - 'size_t' 0 - n", (char*)NULL, (void*) G__func2void( (double (*)(double, size_t))(&dmtpc::math::angle::von_mises_kappa_estimate) ), 0);
   G__memfunc_setup("von_mises_dist",1510,G__DmtpcMathCint_171_0_17, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::angle::von_mises_dist) ), 0);
   G__memfunc_setup("von_mises_dist_ht",1825,G__DmtpcMathCint_171_0_18, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::angle::von_mises_dist_ht) ), 0);
   G__memfunc_setup("wrapped_normal_dist",2030,G__DmtpcMathCint_171_0_19, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::angle::wrapped_normal_dist) ), 0);
   G__memfunc_setup("wrapped_normal_dist_ht",2345,G__DmtpcMathCint_171_0_20, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::angle::wrapped_normal_dist_ht) ), 0);
   G__memfunc_setup("ratio_distribution",1950,G__DmtpcMathCint_171_0_21, 100, -1, -1, 0, 2, 1, 1, 0, 
"D - - 0 - x D - - 0 - par", (char*)NULL, (void*) G__func2void( (double (*)(double*, double*))(&dmtpc::math::angle::ratio_distribution) ), 0);
   G__memfunc_setup("kuipers_test",1314,G__DmtpcMathCint_171_0_22, 100, -1, -1, 0, 5, 1, 1, 0, 
"h - - 0 - - D - - 10 - A "
"h - - 0 - - D - - 10 - B "
"g - - 0 'false' isSorted", (char*)NULL, (void*) G__func2void( (double (*)(unsigned int, const double*, unsigned int, const double*, bool))(&dmtpc::math::angle::kuipers_test) ), 0);
   G__memfunc_setup("kuipers_test",1314,G__DmtpcMathCint_171_0_23, 100, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1' - 10 - A U 'TH1' - 10 - B", (char*)NULL, (void*) G__func2void( (double (*)(const TH1*, const TH1*))(&dmtpc::math::angle::kuipers_test) ), 0);
   G__memfunc_setup("kuipers_p",978,G__DmtpcMathCint_171_0_24, 100, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - V i - - 0 - m "
"i - - 0 '0' n", (char*)NULL, (void*) G__func2void( (double (*)(double, int, int))(&dmtpc::math::angle::kuipers_p) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLDistribution(void) {
   /* dmtpc::math::Distribution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution));
   G__memfunc_setup("isDiscrete",1039,G__DmtpcMathCint_172_0_2, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasMean",701,G__DmtpcMathCint_172_0_3, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasMedian",906,G__DmtpcMathCint_172_0_4, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasMode",705,G__DmtpcMathCint_172_0_5, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasVariance",1125,G__DmtpcMathCint_172_0_6, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasSkewness",1167,G__DmtpcMathCint_172_0_7, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasKurtosis",1184,G__DmtpcMathCint_172_0_8, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasCDF",521,G__DmtpcMathCint_172_0_9, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasInverseCDF",1253,G__DmtpcMathCint_172_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPars",1236,G__DmtpcMathCint_172_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("getParameters",1364,G__DmtpcMathCint_172_0_12, 121, -1, -1, 0, 1, 1, 1, 8, "D - - 0 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("setParameters",1376,G__DmtpcMathCint_172_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("mean",417,G__DmtpcMathCint_172_0_14, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("median",622,G__DmtpcMathCint_172_0_15, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("mode",421,G__DmtpcMathCint_172_0_16, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("stddev",650,G__DmtpcMathCint_172_0_17, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("variance",841,G__DmtpcMathCint_172_0_18, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("skewness",883,G__DmtpcMathCint_172_0_19, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("kurtosis",900,G__DmtpcMathCint_172_0_20, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("pdf",314,G__DmtpcMathCint_172_0_21, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("cdf",301,G__DmtpcMathCint_172_0_22, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("pdf",314,G__DmtpcMathCint_172_0_23, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,G__DmtpcMathCint_172_0_24, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("inverseCDF",969,G__DmtpcMathCint_172_0_25, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("operator()",957,G__DmtpcMathCint_172_0_26, 100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator()",957,G__DmtpcMathCint_172_0_27, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   // automatic destructor
   G__memfunc_setup("~Distribution", 1406, G__DmtpcMathCint_172_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcMathCint_172_0_29, (int) ('u'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution), -1, 1, 1, 1, 1, 0, "u 'dmtpc::math::Distribution' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLdist(void) {
   /* dmtpc::math::dist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdist));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLdistcLcLCrystalBall(void) {
   /* dmtpc::math::dist::CrystalBall */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall));
   G__memfunc_setup("CrystalBall",1117,G__DmtpcMathCint_174_0_1, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CrystalBall",1117,G__DmtpcMathCint_174_0_2, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall), -1, 0, 4, 1, 1, 0, 
"d - - 0 - mean d - - 0 - sigma "
"d - - 0 - alpha d - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPars",1236,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParameters",1364,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMean",705,G__DmtpcMathCint_174_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMean",717,G__DmtpcMathCint_174_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigma",817,G__DmtpcMathCint_174_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigma",829,G__DmtpcMathCint_174_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAlpha",806,G__DmtpcMathCint_174_0_9, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAlpha",818,G__DmtpcMathCint_174_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getN",398,G__DmtpcMathCint_174_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setN",410,G__DmtpcMathCint_174_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParameters",1376,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mean",417,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("median",622,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mode",421,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stddev",650,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("variance",841,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("skewness",883,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("kurtosis",900,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("inverseCDF",969,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("CrystalBall", 1117, G__DmtpcMathCint_174_0_26, (int) ('i'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall), -1, 0, 1, 1, 1, 0, "u 'dmtpc::math::dist::CrystalBall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~CrystalBall", 1243, G__DmtpcMathCint_174_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcMathCint_174_0_28, (int) ('u'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall), -1, 1, 1, 1, 1, 0, "u 'dmtpc::math::dist::CrystalBall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLMultivariateTest(void) {
   /* dmtpc::math::MultivariateTest */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLMultivariateTest));
   G__memfunc_setup("setAValues",1021,G__DmtpcMathCint_176_0_1, 121, -1, -1, 0, 5, 1, 1, 0, 
"h - - 0 - - D - - 52 - x "
"D - - 52 '0' xerr_dn D - - 52 '0' xerr_up "
"D - - 10 '0' weights", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBValues",1022,G__DmtpcMathCint_176_0_2, 121, -1, -1, 0, 5, 1, 1, 0, 
"h - - 0 - - D - - 52 - x "
"D - - 52 '0' xerr_dn D - - 52 '0' xerr_up "
"D - - 10 '0' weights", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAValues",1021,G__DmtpcMathCint_176_0_3, 105, -1, -1, 0, 7, 1, 1, 0, 
"U 'TTree' - 0 - t C - - 52 - xnames "
"C - - 52 '0' xerr_dn_names C - - 52 '0' xerr_up_names "
"C - - 10 '0' weight_names C - - 10 '\"\"' cut "
"g - - 0 'false' append", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBValues",1022,G__DmtpcMathCint_176_0_4, 105, -1, -1, 0, 7, 1, 1, 0, 
"U 'TTree' - 0 - t C - - 52 - xnames "
"C - - 52 '0' xerr_dn_names C - - 52 '0' xerr_up_names "
"C - - 10 '0' weight_names C - - 10 '\"\"' cut "
"g - - 0 'false' append", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("testStatistic",1400,G__DmtpcMathCint_176_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("setScale",820,G__DmtpcMathCint_176_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - - d - - 0 '1' scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("treatAsAngle",1211,G__DmtpcMathCint_176_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - dim g - - 0 'true' treat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setValues",956,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 8, 1, 4, 0, 
"c - - 0 - which U 'TTree' - 0 - t "
"C - - 52 - xnames C - - 52 '0' xerr_dn_names "
"C - - 52 '0' xerr_up_names C - - 10 '0' weight_names "
"C - - 10 '\"\"' cut g - - 0 'false' append", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MultivariateTest", 1813, G__DmtpcMathCint_176_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLEnergyTest(void) {
   /* dmtpc::math::EnergyTest */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest));
   G__memfunc_setup("EnergyTest",1034,G__DmtpcMathCint_185_0_1, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest), -1, 0, 3, 1, 1, 0, 
"h - - 0 - - d - - 0 '1' alpha "
"i 'dmtpc::math::EnergyTest::DistanceMetric' - 0 'AVERAGE_ERROR_DISTANCE' metric", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("testStatistic",1400,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getAA",450,G__DmtpcMathCint_185_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBB",452,G__DmtpcMathCint_185_0_4, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAB",451,G__DmtpcMathCint_185_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBA",451,G__DmtpcMathCint_185_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dist",436,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 8, 
"c - - 0 - - c - - 0 - -", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("EnergyTest", 1034, G__DmtpcMathCint_185_0_8, (int) ('i'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest), -1, 0, 1, 1, 1, 0, "u 'dmtpc::math::EnergyTest' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EnergyTest", 1160, G__DmtpcMathCint_185_0_9, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLdistcLcLGaussian(void) {
   /* dmtpc::math::dist::Gaussian */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian));
   G__memfunc_setup("Gaussian",827,G__DmtpcMathCint_187_0_1, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gaussian",827,G__DmtpcMathCint_187_0_2, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian), -1, 0, 2, 1, 1, 0, 
"d - - 0 - mean d - - 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPars",1236,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParameters",1364,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMean",705,G__DmtpcMathCint_187_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMean",717,G__DmtpcMathCint_187_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigma",817,G__DmtpcMathCint_187_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigma",829,G__DmtpcMathCint_187_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParameters",1376,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mean",417,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("median",622,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mode",421,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stddev",650,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("variance",841,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("skewness",883,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("kurtosis",900,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("inverseCDF",969,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("Gaussian", 827, G__DmtpcMathCint_187_0_22, (int) ('i'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian), -1, 0, 1, 1, 1, 0, "u 'dmtpc::math::dist::Gaussian' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Gaussian", 953, G__DmtpcMathCint_187_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcMathCint_187_0_24, (int) ('u'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian), -1, 1, 1, 1, 1, 0, "u 'dmtpc::math::dist::Gaussian' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLdistcLcLInverseGaussian(void) {
   /* dmtpc::math::dist::InverseGaussian */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian));
   G__memfunc_setup("InverseGaussian",1559,G__DmtpcMathCint_189_0_1, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InverseGaussian",1559,G__DmtpcMathCint_189_0_2, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian), -1, 0, 2, 1, 1, 0, 
"d - - 0 - mean d - - 0 - lambda", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPars",1236,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParameters",1364,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMean",705,G__DmtpcMathCint_189_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLambda",897,G__DmtpcMathCint_189_0_6, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMean",717,G__DmtpcMathCint_189_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLambda",909,G__DmtpcMathCint_189_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParameters",1376,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mean",417,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("median",622,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mode",421,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stddev",650,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("variance",841,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("skewness",883,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("kurtosis",900,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("inverseCDF",969,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("InverseGaussian", 1559, G__DmtpcMathCint_189_0_22, (int) ('i'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian), -1, 0, 1, 1, 1, 0, "u 'dmtpc::math::dist::InverseGaussian' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~InverseGaussian", 1685, G__DmtpcMathCint_189_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcMathCint_189_0_24, (int) ('u'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian), -1, 1, 1, 1, 1, 0, "u 'dmtpc::math::dist::InverseGaussian' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLdistcLcLLogNormal(void) {
   /* dmtpc::math::dist::LogNormal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal));
   G__memfunc_setup("LogNormal",907,G__DmtpcMathCint_191_0_1, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LogNormal",907,G__DmtpcMathCint_191_0_2, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal), -1, 0, 2, 1, 1, 0, 
"d - - 0 - mean d - - 0 - sigma", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPars",1236,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParameters",1364,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMean",705,G__DmtpcMathCint_191_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMean",717,G__DmtpcMathCint_191_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigma",817,G__DmtpcMathCint_191_0_7, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigma",829,G__DmtpcMathCint_191_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParameters",1376,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mean",417,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("median",622,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mode",421,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stddev",650,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("variance",841,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("skewness",883,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("kurtosis",900,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("inverseCDF",969,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("LogNormal", 907, G__DmtpcMathCint_191_0_22, (int) ('i'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal), -1, 0, 1, 1, 1, 0, "u 'dmtpc::math::dist::LogNormal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~LogNormal", 1033, G__DmtpcMathCint_191_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcMathCint_191_0_24, (int) ('u'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal), -1, 1, 1, 1, 1, 0, "u 'dmtpc::math::dist::LogNormal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLdistcLcLPoisson(void) {
   /* dmtpc::math::dist::Poisson */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson));
   G__memfunc_setup("Poisson",747,G__DmtpcMathCint_356_0_1, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Poisson",747,G__DmtpcMathCint_356_0_2, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson), -1, 0, 1, 1, 1, 0, "d - - 0 - mean", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("numberOfPars",1236,(G__InterfaceMethod) NULL,105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParameters",1364,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "D - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMean",705,G__DmtpcMathCint_356_0_5, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMean",717,G__DmtpcMathCint_356_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParameters",1376,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mean",417,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("median",622,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("mode",421,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("stddev",650,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("variance",841,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("skewness",883,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("kurtosis",900,(G__InterfaceMethod) NULL,100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("pdf",314,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cdf",301,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - x", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("inverseCDF",969,(G__InterfaceMethod) NULL,100, -1, -1, 0, 1, 1, 1, 8, "d - - 0 - x", (char*)NULL, (void*) NULL, 1);
   // automatic copy constructor
   G__memfunc_setup("Poisson", 747, G__DmtpcMathCint_356_0_20, (int) ('i'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson), -1, 0, 1, 1, 1, 0, "u 'dmtpc::math::dist::Poisson' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Poisson", 873, G__DmtpcMathCint_356_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcMathCint_356_0_22, (int) ('u'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson), -1, 1, 1, 1, 1, 0, "u 'dmtpc::math::dist::Poisson' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLmathcLcLPrincipalComponentFinder(void) {
   /* dmtpc::math::PrincipalComponentFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder));
   G__memfunc_setup("PrincipalComponentFinder",2477,G__DmtpcMathCint_368_0_1, 105, G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder), -1, 0, 2, 1, 1, 0, 
"i - - 0 - ndim g - - 0 'false' fast", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPoint",819,G__DmtpcMathCint_368_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "D - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DmtpcMathCint_368_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPointsInDim",1434,G__DmtpcMathCint_368_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - dim i - - 0 - n "
"D - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPointInDim",1319,G__DmtpcMathCint_368_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - dim i - - 0 - i "
"d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX",420,G__DmtpcMathCint_368_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n D - - 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY",421,G__DmtpcMathCint_368_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n D - - 10 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__DmtpcMathCint_368_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - n D - - 10 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearPoints",1156,G__DmtpcMathCint_368_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ndim",424,G__DmtpcMathCint_368_0_10, 104, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSolved",841,G__DmtpcMathCint_368_0_11, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("solve",553,G__DmtpcMathCint_368_0_12, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getComponent",1267,G__DmtpcMathCint_368_0_13, 68, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 '0' component D - - 0 '0' dest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWeight",936,G__DmtpcMathCint_368_0_14, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' component", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMean",705,G__DmtpcMathCint_368_0_15, 100, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' dim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("asVec",498,G__DmtpcMathCint_368_0_16, 117, G__get_linked_tagnum(&G__DmtpcMathCintLN_TVector3), -1, 0, 1, 1, 1, 8, "i - - 0 '0' component", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("asPhi",501,G__DmtpcMathCint_368_0_17, 100, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - component", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("solveFast",951,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("PrincipalComponentFinder", 2477, G__DmtpcMathCint_368_0_19, (int) ('i'), 
G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder), -1, 0, 1, 1, 1, 0, "u 'dmtpc::math::PrincipalComponentFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PrincipalComponentFinder", 2603, G__DmtpcMathCint_368_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcMathCint_368_0_21, (int) ('u'), G__get_linked_tagnum(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder), -1, 1, 1, 1, 1, 0, "u 'dmtpc::math::PrincipalComponentFinder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDmtpcMathCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDmtpcMathCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDmtpcMathCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DmtpcMathCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_vectorlEboolcOallocatorlEboolgRsPgR = { "vector<bool,allocator<bool> >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpc = { "dmtpc" , 110 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmath = { "dmtpc::math" , 110 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLangle = { "dmtpc::math::angle" , 110 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution = { "dmtpc::math::Distribution" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLdist = { "dmtpc::math::dist" , 110 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall = { "dmtpc::math::dist::CrystalBall" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLMultivariateTest = { "dmtpc::math::MultivariateTest" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR = { "vector<const double*,allocator<const double*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const double*,allocator<const double*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR = { "vector<double*,allocator<double*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<double*,allocator<double*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest = { "dmtpc::math::EnergyTest" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTestcLcLDistanceMetric = { "dmtpc::math::EnergyTest::DistanceMetric" , 101 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian = { "dmtpc::math::dist::Gaussian" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian = { "dmtpc::math::dist::InverseGaussian" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal = { "dmtpc::math::dist::LogNormal" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_vectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgR = { "vector<ROOT::Minuit2::MinuitParameter,allocator<ROOT::Minuit2::MinuitParameter> >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::Minuit2::MinuitParameter,allocator<ROOT::Minuit2::MinuitParameter> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson = { "dmtpc::math::dist::Poisson" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder = { "dmtpc::math::PrincipalComponentFinder" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__DmtpcMathCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDmtpcMathCint() {
  G__DmtpcMathCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_vectorlEboolcOallocatorlEboolgRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TH1.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpc.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmath.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLangle.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLdist.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall.tagnum = -1 ;
  G__DmtpcMathCintLN_TTree.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLMultivariateTest.tagnum = -1 ;
  G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcMathCintLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTestcLcLDistanceMetric.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian.tagnum = -1 ;
  G__DmtpcMathCintLN_TVector3.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian.tagnum = -1 ;
  G__DmtpcMathCintLN_TF1.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_vectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder.tagnum = -1 ;
  G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__DmtpcMathCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDmtpcMathCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlEboolcOallocatorlEboolgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TH1);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmath),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLmath,G__setup_memfuncdmtpccLcLmath);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLangle),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLangle,G__setup_memfuncdmtpccLcLmathcLcLangle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLDistribution),sizeof(dmtpc::math::Distribution),-1,1293,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLDistribution,G__setup_memfuncdmtpccLcLmathcLcLDistribution);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdist),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLdist,G__setup_memfuncdmtpccLcLmathcLcLdist);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLCrystalBall),sizeof(dmtpc::math::dist::CrystalBall),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLdistcLcLCrystalBall,G__setup_memfuncdmtpccLcLmathcLcLdistcLcLCrystalBall);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLMultivariateTest),sizeof(dmtpc::math::MultivariateTest),-1,33793,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLMultivariateTest,G__setup_memfuncdmtpccLcLmathcLcLMultivariateTest);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEconstsPdoublemUcOallocatorlEconstsPdoublemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlEdoublemUcOallocatorlEdoublemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEdoublemUcOallocatorlEdoublemUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTest),sizeof(dmtpc::math::EnergyTest),-1,32768,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLEnergyTest,G__setup_memfuncdmtpccLcLmathcLcLEnergyTest);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLEnergyTestcLcLDistanceMetric);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLGaussian),sizeof(dmtpc::math::dist::Gaussian),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLdistcLcLGaussian,G__setup_memfuncdmtpccLcLmathcLcLdistcLcLGaussian);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLInverseGaussian),sizeof(dmtpc::math::dist::InverseGaussian),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLdistcLcLInverseGaussian,G__setup_memfuncdmtpccLcLmathcLcLdistcLcLInverseGaussian);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TF1);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLLogNormal),sizeof(dmtpc::math::dist::LogNormal),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLdistcLcLLogNormal,G__setup_memfuncdmtpccLcLmathcLcLdistcLcLLogNormal);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEROOTcLcLMinuit2cLcLMinuitParametercOallocatorlEROOTcLcLMinuit2cLcLMinuitParametergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLdistcLcLPoisson),sizeof(dmtpc::math::dist::Poisson),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLdistcLcLPoisson,G__setup_memfuncdmtpccLcLmathcLcLdistcLcLPoisson);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_dmtpccLcLmathcLcLPrincipalComponentFinder),sizeof(dmtpc::math::PrincipalComponentFinder),-1,32768,(char*)NULL,G__setup_memvardmtpccLcLmathcLcLPrincipalComponentFinder,G__setup_memfuncdmtpccLcLmathcLcLPrincipalComponentFinder);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcMathCintLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupDmtpcMathCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupDmtpcMathCint()");
  G__set_cpp_environmentDmtpcMathCint();
  G__cpp_setup_tagtableDmtpcMathCint();

  G__cpp_setup_inheritanceDmtpcMathCint();

  G__cpp_setup_typetableDmtpcMathCint();

  G__cpp_setup_memvarDmtpcMathCint();

  G__cpp_setup_memfuncDmtpcMathCint();
  G__cpp_setup_globalDmtpcMathCint();
  G__cpp_setup_funcDmtpcMathCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDmtpcMathCint();
  return;
}
class G__cpp_setup_initDmtpcMathCint {
  public:
    G__cpp_setup_initDmtpcMathCint() { G__add_setup_func("DmtpcMathCint",(G__incsetup)(&G__cpp_setupDmtpcMathCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDmtpcMathCint() { G__remove_setup_func("DmtpcMathCint"); }
};
G__cpp_setup_initDmtpcMathCint G__cpp_setup_initializerDmtpcMathCint;

