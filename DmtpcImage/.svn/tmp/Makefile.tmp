#If cfitsio is not available, set ENABLE_FITS to 0 
ENABLE_FITS=1


CXX=g++
LDFLAGS=`root-config --libs` -lgsl 
CXXFLAGS= `root-config --cflags` -fPIC -O3 -g  
LDFLAGS+= -Wl,-z,defs



VPATH=src:include:build
LIBDIR=lib
BUILDDIR=build
INCLUDEDIR=include
BINDIR=bin



OBJS := $(addprefix $(BUILDDIR)/, DmtpcImageCint.o Transforms.o Interpolation.o LensCorrection.o StitchInfo.o Processing.o Pixel.o Tools.o IO.o Calculations.o Palettes.o)
INCLUDES := $(addprefix $(INCLUDEDIR)/, $(shell ls $(INCLUDEDIR)))

ifeq ($(ENABLE_FITS),1)
	LDFLAGS += -L/scratch1/darkmatter/dmtpc/projects/DarkMatter/cfitsio -lcfitsio
else
	CXXFLAGS += -DDMTPC_NO_FITS
endif 

all: shared

shared: $(LIBDIR)/libDmtpcImage.so

$(LIBDIR)/libDmtpcImage.so: $(OBJS) | $(LIBDIR)
	@echo Building shared library $@
	@$(CXX) $(LDFLAGS) $(OBJS) -g -shared -o $@

$(OBJS): | $(BUILDDIR)

$(LIBDIR): 
	mkdir -p $(LIBDIR)

$(BUILDDIR): 
	mkdir -p $(BUILDDIR)

$(BUILDDIR)/DmtpcImageCint.cc: $(INCLUDES) LinkDef.h | $(BUILDDIR)
	@echo Running rootcint
	@rootcint -f $(BUILDDIR)/DmtpcImageCint.cc -c $(INCLUDES) LinkDef.h

$(BUILDDIR)/%.o: %.cc $(INCLUDES) Makefile | $(BUILDDIR) 
	@echo Compiling  $< 
	@$(CXX) $(CXXFLAGS) -I./include -I./ -o $@ -c $< 

clean:
	rm -rf build
	rm -rf lib



