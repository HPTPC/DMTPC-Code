//
// File generated by rootcint at Sat Jun 17 00:27:41 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME builddIDmtpcQualityCint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DmtpcQualityCint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace dmtpc {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpc_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc", 0 /*version*/, "./include/MySQL.hh", 22,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpc_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpc_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace dmtpc {
namespace Quality {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLQuality_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::Quality", 0 /*version*/, "./include/MySQL.hh", 24,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLQuality_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLQuality_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void dmtpccLcLQualitycLcLSQLite_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLQualitycLcLSQLite(void *p = 0);
   static void *newArray_dmtpccLcLQualitycLcLSQLite(Long_t size, void *p);
   static void delete_dmtpccLcLQualitycLcLSQLite(void *p);
   static void deleteArray_dmtpccLcLQualitycLcLSQLite(void *p);
   static void destruct_dmtpccLcLQualitycLcLSQLite(void *p);
   static void streamer_dmtpccLcLQualitycLcLSQLite(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::Quality::SQLite*)
   {
      ::dmtpc::Quality::SQLite *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::Quality::SQLite >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::Quality::SQLite", ::dmtpc::Quality::SQLite::Class_Version(), "./include/SQLite.hh", 27,
                  typeid(::dmtpc::Quality::SQLite), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::Quality::SQLite::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::Quality::SQLite) );
      instance.SetNew(&new_dmtpccLcLQualitycLcLSQLite);
      instance.SetNewArray(&newArray_dmtpccLcLQualitycLcLSQLite);
      instance.SetDelete(&delete_dmtpccLcLQualitycLcLSQLite);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLQualitycLcLSQLite);
      instance.SetDestructor(&destruct_dmtpccLcLQualitycLcLSQLite);
      instance.SetStreamerFunc(&streamer_dmtpccLcLQualitycLcLSQLite);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::Quality::SQLite*)
   {
      return GenerateInitInstanceLocal((::dmtpc::Quality::SQLite*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::Quality::SQLite*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLQualitycLcLRunQuality_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLQualitycLcLRunQuality(void *p = 0);
   static void *newArray_dmtpccLcLQualitycLcLRunQuality(Long_t size, void *p);
   static void delete_dmtpccLcLQualitycLcLRunQuality(void *p);
   static void deleteArray_dmtpccLcLQualitycLcLRunQuality(void *p);
   static void destruct_dmtpccLcLQualitycLcLRunQuality(void *p);
   static void streamer_dmtpccLcLQualitycLcLRunQuality(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::Quality::RunQuality*)
   {
      ::dmtpc::Quality::RunQuality *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::Quality::RunQuality >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::Quality::RunQuality", ::dmtpc::Quality::RunQuality::Class_Version(), "./include/RunQuality.hh", 20,
                  typeid(::dmtpc::Quality::RunQuality), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::Quality::RunQuality::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::Quality::RunQuality) );
      instance.SetNew(&new_dmtpccLcLQualitycLcLRunQuality);
      instance.SetNewArray(&newArray_dmtpccLcLQualitycLcLRunQuality);
      instance.SetDelete(&delete_dmtpccLcLQualitycLcLRunQuality);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLQualitycLcLRunQuality);
      instance.SetDestructor(&destruct_dmtpccLcLQualitycLcLRunQuality);
      instance.SetStreamerFunc(&streamer_dmtpccLcLQualitycLcLRunQuality);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::Quality::RunQuality*)
   {
      return GenerateInitInstanceLocal((::dmtpc::Quality::RunQuality*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::Quality::RunQuality*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLQualitycLcLMySQL_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLQualitycLcLMySQL(void *p = 0);
   static void *newArray_dmtpccLcLQualitycLcLMySQL(Long_t size, void *p);
   static void delete_dmtpccLcLQualitycLcLMySQL(void *p);
   static void deleteArray_dmtpccLcLQualitycLcLMySQL(void *p);
   static void destruct_dmtpccLcLQualitycLcLMySQL(void *p);
   static void streamer_dmtpccLcLQualitycLcLMySQL(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::Quality::MySQL*)
   {
      ::dmtpc::Quality::MySQL *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::Quality::MySQL >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::Quality::MySQL", ::dmtpc::Quality::MySQL::Class_Version(), "./include/MySQL.hh", 26,
                  typeid(::dmtpc::Quality::MySQL), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::Quality::MySQL::Dictionary, isa_proxy, 0,
                  sizeof(::dmtpc::Quality::MySQL) );
      instance.SetNew(&new_dmtpccLcLQualitycLcLMySQL);
      instance.SetNewArray(&newArray_dmtpccLcLQualitycLcLMySQL);
      instance.SetDelete(&delete_dmtpccLcLQualitycLcLMySQL);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLQualitycLcLMySQL);
      instance.SetDestructor(&destruct_dmtpccLcLQualitycLcLMySQL);
      instance.SetStreamerFunc(&streamer_dmtpccLcLQualitycLcLMySQL);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::Quality::MySQL*)
   {
      return GenerateInitInstanceLocal((::dmtpc::Quality::MySQL*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::Quality::MySQL*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

      namespace dmtpc {
         namespace Quality {
//______________________________________________________________________________
atomic_TClass_ptr SQLite::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *SQLite::Class_Name()
{
   return "dmtpc::Quality::SQLite";
}

//______________________________________________________________________________
const char *SQLite::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::SQLite*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SQLite::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::SQLite*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SQLite::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::SQLite*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SQLite::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::SQLite*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::Quality
} // namespace dmtpc::Quality
      namespace dmtpc {
         namespace Quality {
//______________________________________________________________________________
atomic_TClass_ptr RunQuality::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RunQuality::Class_Name()
{
   return "dmtpc::Quality::RunQuality";
}

//______________________________________________________________________________
const char *RunQuality::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::RunQuality*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RunQuality::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::RunQuality*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RunQuality::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::RunQuality*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RunQuality::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::RunQuality*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::Quality
} // namespace dmtpc::Quality
      namespace dmtpc {
         namespace Quality {
//______________________________________________________________________________
atomic_TClass_ptr MySQL::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MySQL::Class_Name()
{
   return "dmtpc::Quality::MySQL";
}

//______________________________________________________________________________
const char *MySQL::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::MySQL*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MySQL::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::MySQL*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MySQL::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::MySQL*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MySQL::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::Quality::MySQL*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::Quality
} // namespace dmtpc::Quality
      namespace dmtpc {
         namespace Quality {
//______________________________________________________________________________
void MySQL::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::Quality::MySQL.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::Quality::MySQL thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> _db;
      R__b.StreamObject(&(_db_access),typeid(dmtpc::Quality::MySQL::db_access));
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << _db;
      R__b.StreamObject(&(_db_access),typeid(dmtpc::Quality::MySQL::db_access));
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::Quality
} // namespace dmtpc::Quality
//______________________________________________________________________________
      namespace dmtpc {
         namespace Quality {
void MySQL::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::Quality::MySQL.
      TClass *R__cl = ::dmtpc::Quality::MySQL::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_db", &_db);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_db_access", (void*)&_db_access);
      R__insp.InspectMember("dmtpc::Quality::MySQL::db_access", (void*)&_db_access, "_db_access.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::Quality
} // namespace dmtpc::Quality
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLQualitycLcLMySQL(void *p) {
      return  p ? new(p) ::dmtpc::Quality::MySQL : new ::dmtpc::Quality::MySQL;
   }
   static void *newArray_dmtpccLcLQualitycLcLMySQL(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::Quality::MySQL[nElements] : new ::dmtpc::Quality::MySQL[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLQualitycLcLMySQL(void *p) {
      delete ((::dmtpc::Quality::MySQL*)p);
   }
   static void deleteArray_dmtpccLcLQualitycLcLMySQL(void *p) {
      delete [] ((::dmtpc::Quality::MySQL*)p);
   }
   static void destruct_dmtpccLcLQualitycLcLMySQL(void *p) {
      typedef ::dmtpc::Quality::MySQL current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLQualitycLcLMySQL(TBuffer &buf, void *obj) {
      ((::dmtpc::Quality::MySQL*)obj)->::dmtpc::Quality::MySQL::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::Quality::MySQL

      namespace dmtpc {
         namespace Quality {
//______________________________________________________________________________
void SQLite::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::Quality::SQLite.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::Quality::SQLite thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      _db_name.Streamer(R__b);
      R__b >> _rc;
      _cmd.Streamer(R__b);
      R__b >> _exp;
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      _db_name.Streamer(R__b);
      R__b << _rc;
      _cmd.Streamer(R__b);
      R__b << _exp;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::Quality
} // namespace dmtpc::Quality
//______________________________________________________________________________
      namespace dmtpc {
         namespace Quality {
void SQLite::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::Quality::SQLite.
      TClass *R__cl = ::dmtpc::Quality::SQLite::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_db_name", &_db_name);
      R__insp.InspectMember(_db_name, "_db_name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_rc", &_rc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cmd", &_cmd);
      R__insp.InspectMember(_cmd, "_cmd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_exp", &_exp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*_tail", &_tail);
}

} // namespace dmtpc::Quality
} // namespace dmtpc::Quality
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLQualitycLcLSQLite(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::Quality::SQLite : new ::dmtpc::Quality::SQLite;
   }
   static void *newArray_dmtpccLcLQualitycLcLSQLite(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::dmtpc::Quality::SQLite[nElements] : new ::dmtpc::Quality::SQLite[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLQualitycLcLSQLite(void *p) {
      delete ((::dmtpc::Quality::SQLite*)p);
   }
   static void deleteArray_dmtpccLcLQualitycLcLSQLite(void *p) {
      delete [] ((::dmtpc::Quality::SQLite*)p);
   }
   static void destruct_dmtpccLcLQualitycLcLSQLite(void *p) {
      typedef ::dmtpc::Quality::SQLite current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLQualitycLcLSQLite(TBuffer &buf, void *obj) {
      ((::dmtpc::Quality::SQLite*)obj)->::dmtpc::Quality::SQLite::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::Quality::SQLite

      namespace dmtpc {
         namespace Quality {
//______________________________________________________________________________
void RunQuality::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::Quality::RunQuality.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::dmtpc::Quality::RunQuality thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.StreamObject(&(_d),typeid(dmtpc::core::Dataset));
      _sql.Streamer(R__b);
      _db_name.Streamer(R__b);
      _cmd.Streamer(R__b);
      R__b >> _nchannel;
      R__b >> _use_raw_file;
      _run_id.Streamer(R__b);
      R__b >> _nevents;
      R__b >> _nbias;
      R__b >> _run_start_s;
      R__b >> _run_start_ns;
      R__b >> _run_end_s;
      R__b >> _run_end_ns;
      R__b >> _exp;
      R__b >> _readtime;
      R__b >> debug;
      _run_condition.Streamer(R__b);
      _table.Streamer(R__b);
      _column.Streamer(R__b);
      _condition.Streamer(R__b);
      R__b >> _min_current;
      {
         vector<std::vector<int> > &R__stl =  _spark_events;
         R__stl.clear();
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<int,allocator<int> >));
         if (R__tcl1==0) {
            Error("_spark_events streamer","Missing the TClass object for vector<int,allocator<int> >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            vector<int,allocator<int> > R__t;
            R__b.StreamObject(&R__t,R__tcl1);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.StreamObject(&(_d),typeid(dmtpc::core::Dataset));
      _sql.Streamer(R__b);
      _db_name.Streamer(R__b);
      _cmd.Streamer(R__b);
      R__b << _nchannel;
      R__b << _use_raw_file;
      _run_id.Streamer(R__b);
      R__b << _nevents;
      R__b << _nbias;
      R__b << _run_start_s;
      R__b << _run_start_ns;
      R__b << _run_end_s;
      R__b << _run_end_ns;
      R__b << _exp;
      R__b << _readtime;
      R__b << debug;
      _run_condition.Streamer(R__b);
      _table.Streamer(R__b);
      _column.Streamer(R__b);
      _condition.Streamer(R__b);
      R__b << _min_current;
      {
         vector<std::vector<int> > &R__stl =  _spark_events;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl1 = TBuffer::GetClass(typeid(vector<int,allocator<int> >));
         if (R__tcl1==0) {
            Error("_spark_events streamer","Missing the TClass object for vector<int,allocator<int> >!");
            return;
         }
            vector<std::vector<int> >::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b.StreamObject((vector<int,allocator<int> >*)&(*R__k),R__tcl1);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace dmtpc::Quality
} // namespace dmtpc::Quality
//______________________________________________________________________________
      namespace dmtpc {
         namespace Quality {
void RunQuality::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::Quality::RunQuality.
      TClass *R__cl = ::dmtpc::Quality::RunQuality::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_d", (void*)&_d);
      R__insp.InspectMember("dmtpc::core::Dataset", (void*)&_d, "_d.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_sql", &_sql);
      R__insp.InspectMember(_sql, "_sql.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_db_name", &_db_name);
      R__insp.InspectMember(_db_name, "_db_name.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_cmd", &_cmd);
      R__insp.InspectMember(_cmd, "_cmd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nchannel", &_nchannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_use_raw_file", &_use_raw_file);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_run_id", &_run_id);
      R__insp.InspectMember(_run_id, "_run_id.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nevents", &_nevents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_nbias", &_nbias);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_run_start_s", &_run_start_s);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_run_start_ns", &_run_start_ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_run_end_s", &_run_end_s);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_run_end_ns", &_run_end_ns);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_exp", &_exp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_readtime", &_readtime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "debug", &debug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_run_condition", &_run_condition);
      R__insp.InspectMember(_run_condition, "_run_condition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_table", &_table);
      R__insp.InspectMember(_table, "_table.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_column", &_column);
      R__insp.InspectMember(_column, "_column.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_condition", &_condition);
      R__insp.InspectMember(_condition, "_condition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_min_current", &_min_current);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_spark_events", (void*)&_spark_events);
      R__insp.InspectMember("vector<std::vector<int> >", (void*)&_spark_events, "_spark_events.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::Quality
} // namespace dmtpc::Quality
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLQualitycLcLRunQuality(void *p) {
      return  p ? new(p) ::dmtpc::Quality::RunQuality : new ::dmtpc::Quality::RunQuality;
   }
   static void *newArray_dmtpccLcLQualitycLcLRunQuality(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::Quality::RunQuality[nElements] : new ::dmtpc::Quality::RunQuality[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLQualitycLcLRunQuality(void *p) {
      delete ((::dmtpc::Quality::RunQuality*)p);
   }
   static void deleteArray_dmtpccLcLQualitycLcLRunQuality(void *p) {
      delete [] ((::dmtpc::Quality::RunQuality*)p);
   }
   static void destruct_dmtpccLcLQualitycLcLRunQuality(void *p) {
      typedef ::dmtpc::Quality::RunQuality current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_dmtpccLcLQualitycLcLRunQuality(TBuffer &buf, void *obj) {
      ((::dmtpc::Quality::RunQuality*)obj)->::dmtpc::Quality::RunQuality::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::dmtpc::Quality::RunQuality

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/usr/lib64/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "/usr/lib64/root/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<vector<int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<int> >

/********************************************************
* build/DmtpcQualityCint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDmtpcQualityCint();

extern "C" void G__set_cpp_environmentDmtpcQualityCint() {
  G__cpp_reset_tagtableDmtpcQualityCint();
}
#include <new>
extern "C" int G__cpp_dllrevDmtpcQualityCint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* dmtpc */

/* dmtpc::Quality */

/* dmtpc::Quality::SQLite */
static int G__DmtpcQualityCint_191_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::Quality::SQLite* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::Quality::SQLite[n];
     } else {
       p = new((void*) gvp) dmtpc::Quality::SQLite[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::Quality::SQLite;
     } else {
       p = new((void*) gvp) dmtpc::Quality::SQLite;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::Quality::SQLite* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::Quality::SQLite(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) dmtpc::Quality::SQLite(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->setName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->createDatabase();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->createTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->createSparkTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->createRunTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->createEventTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->createSparkEventTable();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->storeValues(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->open();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->open(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::Quality::SQLite*) G__getstructoffset())->isOpen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::Quality::SQLite*) G__getstructoffset())->getIValue(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dmtpc::Quality::SQLite*) G__getstructoffset())->getDValue(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->setCommand(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<int>* pobj;
         vector<int> xobj = ((dmtpc::Quality::SQLite*) G__getstructoffset())->getIValues(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
         pobj = new vector<int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::Quality::SQLite*) G__getstructoffset())->getMaxIValue(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((dmtpc::Quality::SQLite*) G__getstructoffset())->getDValues(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::Quality::SQLite::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::Quality::SQLite::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::Quality::SQLite::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::Quality::SQLite::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const dmtpc::Quality::SQLite*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::SQLite*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::Quality::SQLite::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::Quality::SQLite::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::Quality::SQLite::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_191_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::Quality::SQLite::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcQualityCint_191_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::Quality::SQLite* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::Quality::SQLite(*(dmtpc::Quality::SQLite*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::Quality::SQLite G__TdmtpccLcLQualitycLcLSQLite;
static int G__DmtpcQualityCint_191_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::Quality::SQLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::Quality::SQLite*) (soff+(sizeof(dmtpc::Quality::SQLite)*i)))->~G__TdmtpccLcLQualitycLcLSQLite();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::Quality::SQLite*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::Quality::SQLite*) (soff))->~G__TdmtpccLcLQualitycLcLSQLite();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::Quality::RunQuality */
static int G__DmtpcQualityCint_521_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::Quality::RunQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::Quality::RunQuality[n];
     } else {
       p = new((void*) gvp) dmtpc::Quality::RunQuality[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::Quality::RunQuality;
     } else {
       p = new((void*) gvp) dmtpc::Quality::RunQuality;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::Quality::RunQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::Quality::RunQuality(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) dmtpc::Quality::RunQuality(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::Quality::RunQuality* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::Quality::RunQuality((int) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) dmtpc::Quality::RunQuality((int) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::RunQuality*) G__getstructoffset())->setRunId(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::RunQuality*) G__getstructoffset())->init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::RunQuality*) G__getstructoffset())->setDataFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::RunQuality*) G__getstructoffset())->setNChannels((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::RunQuality*) G__getstructoffset())->openDB(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         dmtpc::core::Dataset* pobj;
         dmtpc::core::Dataset xobj = ((dmtpc::Quality::RunQuality*) G__getstructoffset())->getDataset();
         pobj = new dmtpc::core::Dataset(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::RunQuality*) G__getstructoffset())->setDebug();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::Quality::RunQuality*) G__getstructoffset())->runid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::Quality::RunQuality*) G__getstructoffset())->estart((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::Quality::RunQuality*) G__getstructoffset())->nevents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::Quality::RunQuality*) G__getstructoffset())->nbias());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::RunQuality*) G__getstructoffset())->printRunInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::Quality::RunQuality*) G__getstructoffset())->noInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::Quality::RunQuality*) G__getstructoffset())->isSpark((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((dmtpc::Quality::RunQuality*) G__getstructoffset())->isSpark((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::RunQuality*) G__getstructoffset())->loadSparkTaggedEvents();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<std::vector<int> >* pobj;
         vector<std::vector<int> > xobj = ((dmtpc::Quality::RunQuality*) G__getstructoffset())->getSparkTaggedEvents();
         pobj = new vector<std::vector<int> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dmtpc::Quality::RunQuality*) G__getstructoffset())->getLastCurrent((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::Quality::RunQuality*) G__getstructoffset())->getLastCurrentTime((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::Quality::RunQuality::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::Quality::RunQuality::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::Quality::RunQuality::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::Quality::RunQuality::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::RunQuality*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::Quality::RunQuality::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::Quality::RunQuality::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::Quality::RunQuality::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_521_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::Quality::RunQuality::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcQualityCint_521_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::Quality::RunQuality* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::Quality::RunQuality(*(dmtpc::Quality::RunQuality*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::Quality::RunQuality G__TdmtpccLcLQualitycLcLRunQuality;
static int G__DmtpcQualityCint_521_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::Quality::RunQuality*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::Quality::RunQuality*) (soff+(sizeof(dmtpc::Quality::RunQuality)*i)))->~G__TdmtpccLcLQualitycLcLRunQuality();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::Quality::RunQuality*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::Quality::RunQuality*) (soff))->~G__TdmtpccLcLQualitycLcLRunQuality();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::Quality::MySQL */
static int G__DmtpcQualityCint_565_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::Quality::MySQL* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::Quality::MySQL[n];
     } else {
       p = new((void*) gvp) dmtpc::Quality::MySQL[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::Quality::MySQL;
     } else {
       p = new((void*) gvp) dmtpc::Quality::MySQL;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::MySQL*) G__getstructoffset())->initialiseDB((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1])
, (char*) G__int(libp->para[2]), (char*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dmtpc::Quality::MySQL*) G__getstructoffset())->getValue(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((dmtpc::Quality::MySQL*) G__getstructoffset())->getMaxValue(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *(TTimeStamp*) libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<double>* pobj;
         vector<double> xobj = ((dmtpc::Quality::MySQL*) G__getstructoffset())->getValues(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (bool) G__int(libp->para[3])
, *(vector<std::pair<uint32_t,uint32_t> >*) libp->para[4].ref);
         pobj = new vector<double>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::Quality::MySQL::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::Quality::MySQL::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::Quality::MySQL::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::Quality::MySQL::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::Quality::MySQL*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::Quality::MySQL::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::Quality::MySQL::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::Quality::MySQL::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DmtpcQualityCint_565_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::Quality::MySQL::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DmtpcQualityCint_565_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::Quality::MySQL* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::Quality::MySQL(*(dmtpc::Quality::MySQL*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::Quality::MySQL G__TdmtpccLcLQualitycLcLMySQL;
static int G__DmtpcQualityCint_565_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::Quality::MySQL*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::Quality::MySQL*) (soff+(sizeof(dmtpc::Quality::MySQL)*i)))->~G__TdmtpccLcLQualitycLcLMySQL();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::Quality::MySQL*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::Quality::MySQL*) (soff))->~G__TdmtpccLcLQualitycLcLMySQL();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DmtpcQualityCint_565_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::Quality::MySQL* dest = (dmtpc::Quality::MySQL*) G__getstructoffset();
   *dest = *(dmtpc::Quality::MySQL*) libp->para[0].ref;
   const dmtpc::Quality::MySQL& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* dmtpc */

/* dmtpc::Quality */

/* dmtpc::Quality::SQLite */

/* dmtpc::Quality::RunQuality */

/* dmtpc::Quality::MySQL */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDmtpcQualityCint {
 public:
  G__Sizep2memfuncDmtpcQualityCint(): p(&G__Sizep2memfuncDmtpcQualityCint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDmtpcQualityCint::*p)();
};

size_t G__get_sizep2memfuncDmtpcQualityCint()
{
  G__Sizep2memfuncDmtpcQualityCint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDmtpcQualityCint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality))) {
     dmtpc::Quality::RunQuality *G__Lderived;
     G__Lderived=(dmtpc::Quality::RunQuality*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality),G__get_linked_tagnum(&G__DmtpcQualityCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL))) {
     dmtpc::Quality::MySQL *G__Lderived;
     G__Lderived=(dmtpc::Quality::MySQL*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL),G__get_linked_tagnum(&G__DmtpcQualityCintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDmtpcQualityCint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Image*>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::core::Image*>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH2*>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int> >",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<uint32_t,uint32_t>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_pairlEunsignedsPintcOunsignedsPintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<uint32_t,uint32_t> >",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<uint32_t,uint32_t> >",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,unsigned int> >",117,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* dmtpc */
static void G__setup_memvardmtpc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpc));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::Quality */
static void G__setup_memvardmtpccLcLQuality(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQuality));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::Quality::SQLite */
static void G__setup_memvardmtpccLcLQualitycLcLSQLite(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite));
   { dmtpc::Quality::SQLite *p; p=(dmtpc::Quality::SQLite*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TString),-1,-1,4,"_db_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_rc=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TString),-1,-1,4,"_cmd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_exp=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,4,"_tail=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::Quality::RunQuality */
static void G__setup_memvardmtpccLcLQualitycLcLRunQuality(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality));
   { dmtpc::Quality::RunQuality *p; p=(dmtpc::Quality::RunQuality*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLcorecLcLDataset),-1,-1,4,"_d=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite),-1,-1,4,"_sql=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TString),-1,-1,4,"_db_name=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TString),-1,-1,4,"_cmd=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_nchannel=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"_use_raw_file=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TString),-1,-1,4,"_run_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_nevents=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_nbias=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_run_start_s=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_run_start_ns=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_run_end_s=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_run_end_ns=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_exp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_readtime=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"debug=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TString),-1,-1,4,"_run_condition=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TString),-1,-1,4,"_table=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TString),-1,-1,4,"_column=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TString),-1,-1,4,"_condition=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"_min_current=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<int> >"),-1,4,"_spark_events=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::Quality::MySQL */
static void G__setup_memvardmtpccLcLQualitycLcLMySQL(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL));
   { dmtpc::Quality::MySQL *p; p=(dmtpc::Quality::MySQL*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_st_mysql),G__defined_typename("MYSQL"),-1,4,"_db=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQLcLcLdb_access),-1,-1,4,"_db_access=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DmtpcQualityCintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDmtpcQualityCint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncdmtpc(void) {
   /* dmtpc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpc));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLQuality(void) {
   /* dmtpc::Quality */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQuality));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLQualitycLcLSQLite(void) {
   /* dmtpc::Quality::SQLite */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite));
   G__memfunc_setup("SQLite",562,G__DmtpcQualityCint_191_0_1, 105, G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SQLite",562,G__DmtpcQualityCint_191_0_2, 105, G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - db_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setName",717,G__DmtpcQualityCint_191_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - db_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createDatabase",1417,G__DmtpcQualityCint_191_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createTable",1116,G__DmtpcQualityCint_191_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createSparkTable",1629,G__DmtpcQualityCint_191_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createRunTable",1425,G__DmtpcQualityCint_191_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createEventTable",1630,G__DmtpcQualityCint_191_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createSparkEventTable",2143,G__DmtpcQualityCint_191_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("storeValues",1181,G__DmtpcQualityCint_191_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - cmd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__DmtpcQualityCint_191_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__DmtpcQualityCint_191_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - dbName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isOpen",622,G__DmtpcQualityCint_191_0_13, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIValue",902,G__DmtpcQualityCint_191_0_14, 105, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - table u 'TString' - 0 - column "
"u 'TString' - 0 - condition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDValue",897,G__DmtpcQualityCint_191_0_15, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - table u 'TString' - 0 - column "
"u 'TString' - 0 - condition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCommand",1035,G__DmtpcQualityCint_191_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - cmd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIValues",1017,G__DmtpcQualityCint_191_0_17, 117, G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 0, 3, 1, 1, 0, 
"u 'TString' - 0 - table u 'TString' - 0 - column "
"u 'TString' - 0 - condition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxIValue",1196,G__DmtpcQualityCint_191_0_18, 105, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - table u 'TString' - 0 - column "
"u 'TString' - 0 - condition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDValues",1012,G__DmtpcQualityCint_191_0_19, 117, G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 3, 1, 1, 0, 
"u 'TString' - 0 - table u 'TString' - 0 - column "
"u 'TString' - 0 - condition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIResult",1032,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDResult",1027,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("callback",813,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 4, 3, 4, 0, 
"Y - - 0 - notUsed i - - 0 - argc "
"C - - 2 - argv C - - 2 - azColName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcQualityCint_191_0_23, 85, G__get_linked_tagnum(&G__DmtpcQualityCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::Quality::SQLite::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcQualityCint_191_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::Quality::SQLite::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcQualityCint_191_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::Quality::SQLite::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcQualityCint_191_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::Quality::SQLite::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DmtpcQualityCint_191_0_27, 85, G__get_linked_tagnum(&G__DmtpcQualityCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DmtpcQualityCint_191_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DmtpcQualityCint_191_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcQualityCint_191_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcQualityCint_191_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::Quality::SQLite::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcQualityCint_191_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::Quality::SQLite::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcQualityCint_191_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::Quality::SQLite::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcQualityCint_191_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::Quality::SQLite::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SQLite", 562, G__DmtpcQualityCint_191_0_35, (int) ('i'), G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite), -1, 0, 1, 1, 1, 0, "u 'dmtpc::Quality::SQLite' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SQLite", 688, G__DmtpcQualityCint_191_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLQualitycLcLRunQuality(void) {
   /* dmtpc::Quality::RunQuality */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality));
   G__memfunc_setup("RunQuality",1054,G__DmtpcQualityCint_521_0_1, 105, G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunQuality",1054,G__DmtpcQualityCint_521_0_2, 105, G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality), -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - run u 'TString' - 0 - DBName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RunQuality",1054,G__DmtpcQualityCint_521_0_3, 105, G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality), -1, 0, 2, 1, 1, 0, 
"i - - 0 - run u 'TString' - 0 - DBname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunId",814,G__DmtpcQualityCint_521_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - runId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__DmtpcQualityCint_521_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDataFile",1094,G__DmtpcQualityCint_521_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - dataFileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNChannels",1222,G__DmtpcQualityCint_521_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - nchan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openDB",568,G__DmtpcQualityCint_521_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - dbName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDataset",1030,G__DmtpcQualityCint_521_0_9, 117, G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLcorecLcLDataset), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDebug",819,G__DmtpcQualityCint_521_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("runid",546,G__DmtpcQualityCint_521_0_11, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("estart",659,G__DmtpcQualityCint_521_0_12, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ev_num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nevents",771,G__DmtpcQualityCint_521_0_13, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nbias",525,G__DmtpcQualityCint_521_0_14, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printRunInfo",1262,G__DmtpcQualityCint_521_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("noInfo",617,G__DmtpcQualityCint_521_0_16, 103, -1, -1, 0, 0, 1, 1, 0, "", "true if run not in provided database", (void*) NULL, 0);
   G__memfunc_setup("isSpark",733,G__DmtpcQualityCint_521_0_17, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ev_num i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSpark",733,G__DmtpcQualityCint_521_0_18, 103, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - ev_num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loadSparkTaggedEvents",2146,G__DmtpcQualityCint_521_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSparkTaggedEvents",2050,G__DmtpcQualityCint_521_0_20, 117, G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR), G__defined_typename("vector<std::vector<int> >"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastCurrent",1463,G__DmtpcQualityCint_521_0_21, 100, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ev i - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLastCurrentTime",1862,G__DmtpcQualityCint_521_0_22, 105, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - ev i - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunTimes",1155,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setExposure",1191,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNEvents",1039,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNBias",793,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEStart",915,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - ev_num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSpark",733,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"U 'dmtpc::core::Event' - 10 - ev i - - 0 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcQualityCint_521_0_29, 85, G__get_linked_tagnum(&G__DmtpcQualityCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::Quality::RunQuality::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcQualityCint_521_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::Quality::RunQuality::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcQualityCint_521_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::Quality::RunQuality::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcQualityCint_521_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::Quality::RunQuality::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcQualityCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcQualityCint_521_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcQualityCint_521_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::Quality::RunQuality::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcQualityCint_521_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::Quality::RunQuality::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcQualityCint_521_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::Quality::RunQuality::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcQualityCint_521_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::Quality::RunQuality::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RunQuality", 1054, G__DmtpcQualityCint_521_0_41, (int) ('i'), G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality), -1, 0, 1, 1, 1, 0, "u 'dmtpc::Quality::RunQuality' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RunQuality", 1180, G__DmtpcQualityCint_521_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLQualitycLcLMySQL(void) {
   /* dmtpc::Quality::MySQL */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL));
   G__memfunc_setup("MySQL",438,G__DmtpcQualityCint_565_0_1, 105, G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initialiseDB",1201,G__DmtpcQualityCint_565_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"C - - 0 - server C - - 0 - user "
"C - - 0 - pass C - - 0 - db_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getValue",829,G__DmtpcQualityCint_565_0_3, 100, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - table u 'TString' - 0 - column "
"u 'TString' - 0 - condition", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxValue",1123,G__DmtpcQualityCint_565_0_4, 100, -1, -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - channel u 'TString' - 0 - minTime "
"u 'TString' - 0 - maxTime u 'TTimeStamp' - 1 - timestamp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getValues",944,G__DmtpcQualityCint_565_0_5, 117, G__get_linked_tagnum(&G__DmtpcQualityCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<double>"), 0, 5, 1, 1, 0, 
"u 'TString' - 0 - table u 'TString' - 0 - column "
"u 'TString' - 0 - condition g - - 0 - storeTimes "
"u 'vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >' 'vector<std::pair<uint32_t,uint32_t> >' 1 - timestamps", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init_access",1157,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"C - - 0 - server C - - 0 - user "
"C - - 0 - pass C - - 0 - db_name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DmtpcQualityCint_565_0_7, 85, G__get_linked_tagnum(&G__DmtpcQualityCintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::Quality::MySQL::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DmtpcQualityCint_565_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::Quality::MySQL::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DmtpcQualityCint_565_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::Quality::MySQL::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DmtpcQualityCint_565_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::Quality::MySQL::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DmtpcQualityCintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DmtpcQualityCint_565_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DmtpcQualityCint_565_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::Quality::MySQL::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DmtpcQualityCint_565_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::Quality::MySQL::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DmtpcQualityCint_565_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::Quality::MySQL::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DmtpcQualityCint_565_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::Quality::MySQL::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("MySQL", 438, G__DmtpcQualityCint_565_0_19, (int) ('i'), G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL), -1, 0, 1, 1, 1, 0, "u 'dmtpc::Quality::MySQL' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MySQL", 564, G__DmtpcQualityCint_565_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DmtpcQualityCint_565_0_21, (int) ('u'), G__get_linked_tagnum(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL), -1, 1, 1, 1, 1, 0, "u 'dmtpc::Quality::MySQL' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDmtpcQualityCint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDmtpcQualityCint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDmtpcQualityCint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DmtpcQualityCintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_dmtpc = { "dmtpc" , 110 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_dmtpccLcLcore = { "dmtpc::core" , 110 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_dmtpccLcLcorecLcLDataset = { "dmtpc::core::Dataset" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_dmtpccLcLcorecLcLEvent = { "dmtpc::core::Event" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_dmtpccLcLQuality = { "dmtpc::Quality" , 110 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite = { "dmtpc::Quality::SQLite" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR = { "vector<dmtpc::core::Image*,allocator<dmtpc::core::Image*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::core::Image*,allocator<dmtpc::core::Image*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR = { "vector<TH2*,allocator<TH2*> >" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH2*,allocator<TH2*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality = { "dmtpc::Quality::RunQuality" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_st_mysql = { "st_mysql" , 115 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL = { "dmtpc::Quality::MySQL" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_pairlEunsignedsPintcOunsignedsPintgR = { "pair<unsigned int,unsigned int>" , 115 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR = { "vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,unsigned int>,allocator<pair<unsigned int,unsigned int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQLcLcLdb_access = { "dmtpc::Quality::MySQL::db_access" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDmtpcQualityCint() {
  G__DmtpcQualityCintLN_TClass.tagnum = -1 ;
  G__DmtpcQualityCintLN_TBuffer.tagnum = -1 ;
  G__DmtpcQualityCintLN_TMemberInspector.tagnum = -1 ;
  G__DmtpcQualityCintLN_TObject.tagnum = -1 ;
  G__DmtpcQualityCintLN_TString.tagnum = -1 ;
  G__DmtpcQualityCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_TTimeStamp.tagnum = -1 ;
  G__DmtpcQualityCintLN_dmtpc.tagnum = -1 ;
  G__DmtpcQualityCintLN_dmtpccLcLcore.tagnum = -1 ;
  G__DmtpcQualityCintLN_dmtpccLcLcorecLcLDataset.tagnum = -1 ;
  G__DmtpcQualityCintLN_dmtpccLcLcorecLcLEvent.tagnum = -1 ;
  G__DmtpcQualityCintLN_dmtpccLcLQuality.tagnum = -1 ;
  G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite.tagnum = -1 ;
  G__DmtpcQualityCintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality.tagnum = -1 ;
  G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_st_mysql.tagnum = -1 ;
  G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL.tagnum = -1 ;
  G__DmtpcQualityCintLN_pairlEunsignedsPintcOunsignedsPintgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQLcLcLdb_access.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDmtpcQualityCint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_TClass);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_TObject);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_TString);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_TTimeStamp);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_dmtpc),0,-1,0,(char*)NULL,G__setup_memvardmtpc,G__setup_memfuncdmtpc);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_dmtpccLcLcore);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_dmtpccLcLcorecLcLDataset);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_dmtpccLcLcorecLcLEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_dmtpccLcLQuality),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLQuality,G__setup_memfuncdmtpccLcLQuality);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLSQLite),sizeof(dmtpc::Quality::SQLite),-1,34048,(char*)NULL,G__setup_memvardmtpccLcLQualitycLcLSQLite,G__setup_memfuncdmtpccLcLQualitycLcLSQLite);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_vectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEdmtpccLcLcorecLcLImagemUcOallocatorlEdmtpccLcLcorecLcLImagemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_vectorlETH2mUcOallocatorlETH2mUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlETH2mUcOallocatorlETH2mUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLRunQuality),sizeof(dmtpc::Quality::RunQuality),-1,62720,(char*)NULL,G__setup_memvardmtpccLcLQualitycLcLRunQuality,G__setup_memfuncdmtpccLcLQualitycLcLRunQuality);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_st_mysql);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQL),sizeof(dmtpc::Quality::MySQL),-1,29952,(char*)NULL,G__setup_memvardmtpccLcLQualitycLcLMySQL,G__setup_memfuncdmtpccLcLQualitycLcLMySQL);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_pairlEunsignedsPintcOunsignedsPintgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_vectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOunsignedsPintgRcOallocatorlEpairlEunsignedsPintcOunsignedsPintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DmtpcQualityCintLN_dmtpccLcLQualitycLcLMySQLcLcLdb_access);
}
extern "C" void G__cpp_setupDmtpcQualityCint(void) {
  G__check_setup_version(30051515,"G__cpp_setupDmtpcQualityCint()");
  G__set_cpp_environmentDmtpcQualityCint();
  G__cpp_setup_tagtableDmtpcQualityCint();

  G__cpp_setup_inheritanceDmtpcQualityCint();

  G__cpp_setup_typetableDmtpcQualityCint();

  G__cpp_setup_memvarDmtpcQualityCint();

  G__cpp_setup_memfuncDmtpcQualityCint();
  G__cpp_setup_globalDmtpcQualityCint();
  G__cpp_setup_funcDmtpcQualityCint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDmtpcQualityCint();
  return;
}
class G__cpp_setup_initDmtpcQualityCint {
  public:
    G__cpp_setup_initDmtpcQualityCint() { G__add_setup_func("DmtpcQualityCint",(G__incsetup)(&G__cpp_setupDmtpcQualityCint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDmtpcQualityCint() { G__remove_setup_func("DmtpcQualityCint"); }
};
G__cpp_setup_initDmtpcQualityCint G__cpp_setup_initializerDmtpcQualityCint;

