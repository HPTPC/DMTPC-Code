//
// File generated by rootcint at Thu Apr 21 13:35:41 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME builddIJanAnalysis2016Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "JanAnalysis2016Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void M3JanEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_M3JanEvent(void *p = 0);
   static void *newArray_M3JanEvent(Long_t size, void *p);
   static void delete_M3JanEvent(void *p);
   static void deleteArray_M3JanEvent(void *p);
   static void destruct_M3JanEvent(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::M3JanEvent*)
   {
      ::M3JanEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::M3JanEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("M3JanEvent", ::M3JanEvent::Class_Version(), "./include/M3JanEvent.hh", 104,
                  typeid(::M3JanEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::M3JanEvent::Dictionary, isa_proxy, 4,
                  sizeof(::M3JanEvent) );
      instance.SetNew(&new_M3JanEvent);
      instance.SetNewArray(&newArray_M3JanEvent);
      instance.SetDelete(&delete_M3JanEvent);
      instance.SetDeleteArray(&deleteArray_M3JanEvent);
      instance.SetDestructor(&destruct_M3JanEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::M3JanEvent*)
   {
      return GenerateInitInstanceLocal((::M3JanEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::M3JanEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace dmtpc {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpc_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc", 0 /*version*/, "./include/M3CcdPedMaker.hh", 14,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpc_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpc_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace dmtpc {
namespace ped {
   namespace ROOTDict {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void dmtpccLcLped_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("dmtpc::ped", 0 /*version*/, "./include/M3CcdPedMaker.hh", 16,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &dmtpccLcLped_Dictionary, 0);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void dmtpccLcLped_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}
}

namespace ROOTDict {
   void dmtpccLcLpedcLcLPixelTrace_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLpedcLcLPixelTrace(void *p = 0);
   static void *newArray_dmtpccLcLpedcLcLPixelTrace(Long_t size, void *p);
   static void delete_dmtpccLcLpedcLcLPixelTrace(void *p);
   static void deleteArray_dmtpccLcLpedcLcLPixelTrace(void *p);
   static void destruct_dmtpccLcLpedcLcLPixelTrace(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::ped::PixelTrace*)
   {
      ::dmtpc::ped::PixelTrace *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::ped::PixelTrace >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::ped::PixelTrace", ::dmtpc::ped::PixelTrace::Class_Version(), "./include/PixelTrace.hh", 12,
                  typeid(::dmtpc::ped::PixelTrace), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::ped::PixelTrace::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::ped::PixelTrace) );
      instance.SetNew(&new_dmtpccLcLpedcLcLPixelTrace);
      instance.SetNewArray(&newArray_dmtpccLcLpedcLcLPixelTrace);
      instance.SetDelete(&delete_dmtpccLcLpedcLcLPixelTrace);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLpedcLcLPixelTrace);
      instance.SetDestructor(&destruct_dmtpccLcLpedcLcLPixelTrace);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::ped::PixelTrace*)
   {
      return GenerateInitInstanceLocal((::dmtpc::ped::PixelTrace*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::ped::PixelTrace*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLpedcLcLPixelCorrel_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLpedcLcLPixelCorrel(void *p = 0);
   static void *newArray_dmtpccLcLpedcLcLPixelCorrel(Long_t size, void *p);
   static void delete_dmtpccLcLpedcLcLPixelCorrel(void *p);
   static void deleteArray_dmtpccLcLpedcLcLPixelCorrel(void *p);
   static void destruct_dmtpccLcLpedcLcLPixelCorrel(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::ped::PixelCorrel*)
   {
      ::dmtpc::ped::PixelCorrel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::ped::PixelCorrel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::ped::PixelCorrel", ::dmtpc::ped::PixelCorrel::Class_Version(), "./include/PixelCorrel.hh", 12,
                  typeid(::dmtpc::ped::PixelCorrel), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::ped::PixelCorrel::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::ped::PixelCorrel) );
      instance.SetNew(&new_dmtpccLcLpedcLcLPixelCorrel);
      instance.SetNewArray(&newArray_dmtpccLcLpedcLcLPixelCorrel);
      instance.SetDelete(&delete_dmtpccLcLpedcLcLPixelCorrel);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLpedcLcLPixelCorrel);
      instance.SetDestructor(&destruct_dmtpccLcLpedcLcLPixelCorrel);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::ped::PixelCorrel*)
   {
      return GenerateInitInstanceLocal((::dmtpc::ped::PixelCorrel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::ped::PixelCorrel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLpedcLcLM3CcdClusterMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLpedcLcLM3CcdClusterMaker(void *p = 0);
   static void *newArray_dmtpccLcLpedcLcLM3CcdClusterMaker(Long_t size, void *p);
   static void delete_dmtpccLcLpedcLcLM3CcdClusterMaker(void *p);
   static void deleteArray_dmtpccLcLpedcLcLM3CcdClusterMaker(void *p);
   static void destruct_dmtpccLcLpedcLcLM3CcdClusterMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::ped::M3CcdClusterMaker*)
   {
      ::dmtpc::ped::M3CcdClusterMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::ped::M3CcdClusterMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::ped::M3CcdClusterMaker", ::dmtpc::ped::M3CcdClusterMaker::Class_Version(), "./include/M3CcdClusterMaker.hh", 20,
                  typeid(::dmtpc::ped::M3CcdClusterMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::ped::M3CcdClusterMaker::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::ped::M3CcdClusterMaker) );
      instance.SetNew(&new_dmtpccLcLpedcLcLM3CcdClusterMaker);
      instance.SetNewArray(&newArray_dmtpccLcLpedcLcLM3CcdClusterMaker);
      instance.SetDelete(&delete_dmtpccLcLpedcLcLM3CcdClusterMaker);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLpedcLcLM3CcdClusterMaker);
      instance.SetDestructor(&destruct_dmtpccLcLpedcLcLM3CcdClusterMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::ped::M3CcdClusterMaker*)
   {
      return GenerateInitInstanceLocal((::dmtpc::ped::M3CcdClusterMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdClusterMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLpedcLcLM3CcdCalibMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLpedcLcLM3CcdCalibMaker(void *p = 0);
   static void *newArray_dmtpccLcLpedcLcLM3CcdCalibMaker(Long_t size, void *p);
   static void delete_dmtpccLcLpedcLcLM3CcdCalibMaker(void *p);
   static void deleteArray_dmtpccLcLpedcLcLM3CcdCalibMaker(void *p);
   static void destruct_dmtpccLcLpedcLcLM3CcdCalibMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::ped::M3CcdCalibMaker*)
   {
      ::dmtpc::ped::M3CcdCalibMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::ped::M3CcdCalibMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::ped::M3CcdCalibMaker", ::dmtpc::ped::M3CcdCalibMaker::Class_Version(), "./include/M3CcdCalibMaker.hh", 20,
                  typeid(::dmtpc::ped::M3CcdCalibMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::ped::M3CcdCalibMaker::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::ped::M3CcdCalibMaker) );
      instance.SetNew(&new_dmtpccLcLpedcLcLM3CcdCalibMaker);
      instance.SetNewArray(&newArray_dmtpccLcLpedcLcLM3CcdCalibMaker);
      instance.SetDelete(&delete_dmtpccLcLpedcLcLM3CcdCalibMaker);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLpedcLcLM3CcdCalibMaker);
      instance.SetDestructor(&destruct_dmtpccLcLpedcLcLM3CcdCalibMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::ped::M3CcdCalibMaker*)
   {
      return GenerateInitInstanceLocal((::dmtpc::ped::M3CcdCalibMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdCalibMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void M3ImageCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_M3ImageCluster(void *p = 0);
   static void *newArray_M3ImageCluster(Long_t size, void *p);
   static void delete_M3ImageCluster(void *p);
   static void deleteArray_M3ImageCluster(void *p);
   static void destruct_M3ImageCluster(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::M3ImageCluster*)
   {
      ::M3ImageCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::M3ImageCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("M3ImageCluster", ::M3ImageCluster::Class_Version(), "./include/M3JanEvent.hh", 36,
                  typeid(::M3ImageCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::M3ImageCluster::Dictionary, isa_proxy, 4,
                  sizeof(::M3ImageCluster) );
      instance.SetNew(&new_M3ImageCluster);
      instance.SetNewArray(&newArray_M3ImageCluster);
      instance.SetDelete(&delete_M3ImageCluster);
      instance.SetDeleteArray(&deleteArray_M3ImageCluster);
      instance.SetDestructor(&destruct_M3ImageCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::M3ImageCluster*)
   {
      return GenerateInitInstanceLocal((::M3ImageCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::M3ImageCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void M3ImageCell_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_M3ImageCell(void *p = 0);
   static void *newArray_M3ImageCell(Long_t size, void *p);
   static void delete_M3ImageCell(void *p);
   static void deleteArray_M3ImageCell(void *p);
   static void destruct_M3ImageCell(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::M3ImageCell*)
   {
      ::M3ImageCell *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::M3ImageCell >(0);
      static ::ROOT::TGenericClassInfo 
         instance("M3ImageCell", ::M3ImageCell::Class_Version(), "./include/M3JanEvent.hh", 12,
                  typeid(::M3ImageCell), ::ROOT::DefineBehavior(ptr, ptr),
                  &::M3ImageCell::Dictionary, isa_proxy, 4,
                  sizeof(::M3ImageCell) );
      instance.SetNew(&new_M3ImageCell);
      instance.SetNewArray(&newArray_M3ImageCell);
      instance.SetDelete(&delete_M3ImageCell);
      instance.SetDeleteArray(&deleteArray_M3ImageCell);
      instance.SetDestructor(&destruct_M3ImageCell);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::M3ImageCell*)
   {
      return GenerateInitInstanceLocal((::M3ImageCell*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::M3ImageCell*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLpedcLcLM3CcdImageUtil_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLpedcLcLM3CcdImageUtil(void *p = 0);
   static void *newArray_dmtpccLcLpedcLcLM3CcdImageUtil(Long_t size, void *p);
   static void delete_dmtpccLcLpedcLcLM3CcdImageUtil(void *p);
   static void deleteArray_dmtpccLcLpedcLcLM3CcdImageUtil(void *p);
   static void destruct_dmtpccLcLpedcLcLM3CcdImageUtil(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::ped::M3CcdImageUtil*)
   {
      ::dmtpc::ped::M3CcdImageUtil *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::ped::M3CcdImageUtil >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::ped::M3CcdImageUtil", ::dmtpc::ped::M3CcdImageUtil::Class_Version(), "./include/M3CcdImageUtil.hh", 15,
                  typeid(::dmtpc::ped::M3CcdImageUtil), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::ped::M3CcdImageUtil::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::ped::M3CcdImageUtil) );
      instance.SetNew(&new_dmtpccLcLpedcLcLM3CcdImageUtil);
      instance.SetNewArray(&newArray_dmtpccLcLpedcLcLM3CcdImageUtil);
      instance.SetDelete(&delete_dmtpccLcLpedcLcLM3CcdImageUtil);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLpedcLcLM3CcdImageUtil);
      instance.SetDestructor(&destruct_dmtpccLcLpedcLcLM3CcdImageUtil);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::ped::M3CcdImageUtil*)
   {
      return GenerateInitInstanceLocal((::dmtpc::ped::M3CcdImageUtil*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdImageUtil*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void dmtpccLcLpedcLcLM3CcdPedMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_dmtpccLcLpedcLcLM3CcdPedMaker(void *p = 0);
   static void *newArray_dmtpccLcLpedcLcLM3CcdPedMaker(Long_t size, void *p);
   static void delete_dmtpccLcLpedcLcLM3CcdPedMaker(void *p);
   static void deleteArray_dmtpccLcLpedcLcLM3CcdPedMaker(void *p);
   static void destruct_dmtpccLcLpedcLcLM3CcdPedMaker(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::dmtpc::ped::M3CcdPedMaker*)
   {
      ::dmtpc::ped::M3CcdPedMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::dmtpc::ped::M3CcdPedMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("dmtpc::ped::M3CcdPedMaker", ::dmtpc::ped::M3CcdPedMaker::Class_Version(), "./include/M3CcdPedMaker.hh", 37,
                  typeid(::dmtpc::ped::M3CcdPedMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::dmtpc::ped::M3CcdPedMaker::Dictionary, isa_proxy, 4,
                  sizeof(::dmtpc::ped::M3CcdPedMaker) );
      instance.SetNew(&new_dmtpccLcLpedcLcLM3CcdPedMaker);
      instance.SetNewArray(&newArray_dmtpccLcLpedcLcLM3CcdPedMaker);
      instance.SetDelete(&delete_dmtpccLcLpedcLcLM3CcdPedMaker);
      instance.SetDeleteArray(&deleteArray_dmtpccLcLpedcLcLM3CcdPedMaker);
      instance.SetDestructor(&destruct_dmtpccLcLpedcLcLM3CcdPedMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::dmtpc::ped::M3CcdPedMaker*)
   {
      return GenerateInitInstanceLocal((::dmtpc::ped::M3CcdPedMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdPedMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr M3JanEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *M3JanEvent::Class_Name()
{
   return "M3JanEvent";
}

//______________________________________________________________________________
const char *M3JanEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::M3JanEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int M3JanEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::M3JanEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void M3JanEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::M3JanEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *M3JanEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::M3JanEvent*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
atomic_TClass_ptr PixelTrace::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PixelTrace::Class_Name()
{
   return "dmtpc::ped::PixelTrace";
}

//______________________________________________________________________________
const char *PixelTrace::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::PixelTrace*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PixelTrace::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::PixelTrace*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PixelTrace::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::PixelTrace*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PixelTrace::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::PixelTrace*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
atomic_TClass_ptr PixelCorrel::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PixelCorrel::Class_Name()
{
   return "dmtpc::ped::PixelCorrel";
}

//______________________________________________________________________________
const char *PixelCorrel::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::PixelCorrel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PixelCorrel::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::PixelCorrel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PixelCorrel::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::PixelCorrel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PixelCorrel::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::PixelCorrel*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
atomic_TClass_ptr M3CcdClusterMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *M3CcdClusterMaker::Class_Name()
{
   return "dmtpc::ped::M3CcdClusterMaker";
}

//______________________________________________________________________________
const char *M3CcdClusterMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdClusterMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int M3CcdClusterMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdClusterMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void M3CcdClusterMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdClusterMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *M3CcdClusterMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdClusterMaker*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
atomic_TClass_ptr M3CcdCalibMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *M3CcdCalibMaker::Class_Name()
{
   return "dmtpc::ped::M3CcdCalibMaker";
}

//______________________________________________________________________________
const char *M3CcdCalibMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdCalibMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int M3CcdCalibMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdCalibMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void M3CcdCalibMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdCalibMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *M3CcdCalibMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdCalibMaker*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
//______________________________________________________________________________
atomic_TClass_ptr M3ImageCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *M3ImageCluster::Class_Name()
{
   return "M3ImageCluster";
}

//______________________________________________________________________________
const char *M3ImageCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::M3ImageCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int M3ImageCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::M3ImageCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void M3ImageCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::M3ImageCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *M3ImageCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::M3ImageCluster*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr M3ImageCell::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *M3ImageCell::Class_Name()
{
   return "M3ImageCell";
}

//______________________________________________________________________________
const char *M3ImageCell::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::M3ImageCell*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int M3ImageCell::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::M3ImageCell*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void M3ImageCell::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::M3ImageCell*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *M3ImageCell::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::M3ImageCell*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
atomic_TClass_ptr M3CcdImageUtil::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *M3CcdImageUtil::Class_Name()
{
   return "dmtpc::ped::M3CcdImageUtil";
}

//______________________________________________________________________________
const char *M3CcdImageUtil::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdImageUtil*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int M3CcdImageUtil::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdImageUtil*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void M3CcdImageUtil::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdImageUtil*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *M3CcdImageUtil::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdImageUtil*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
atomic_TClass_ptr M3CcdPedMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *M3CcdPedMaker::Class_Name()
{
   return "dmtpc::ped::M3CcdPedMaker";
}

//______________________________________________________________________________
const char *M3CcdPedMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdPedMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int M3CcdPedMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdPedMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void M3CcdPedMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdPedMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *M3CcdPedMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::dmtpc::ped::M3CcdPedMaker*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
void M3CcdPedMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::ped::M3CcdPedMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::ped::M3CcdPedMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::ped::M3CcdPedMaker::Class(),this);
   }
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
//______________________________________________________________________________
      namespace dmtpc {
         namespace ped {
void M3CcdPedMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::ped::M3CcdPedMaker.
      TClass *R__cl = ::dmtpc::ped::M3CcdPedMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NtotEve", &NtotEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runId", &runId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coreName", &coreName);
      R__insp.InspectMember(coreName, "coreName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camSN", &camSN);
      R__insp.InspectMember(camSN, "camSN.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nchX", &nchX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nchY", &nchY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camId", &camId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camSrc", &camSrc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxMbin", &maxMbin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nReb", &nReb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fullNumPix", &fullNumPix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hA[32]", &hA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hBigPed", &hBigPed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2Dtempl", &h2Dtempl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h1Dped", &h1Dped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2GarbCol", &h2GarbCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_fixRawHistDims", &par_fixRawHistDims);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hAvr", &hAvr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hStat", &hStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hRms", &hRms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "actLim", (void*)&actLim);
      R__insp.InspectMember("dmtpc::ped::M3CcdPedMaker::ActiveImageLimit1N", (void*)&actLim, "actLim.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_pedWindowHalf", &par_pedWindowHalf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_aduLo", &par_aduLo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_pedAvrHi", &cut_pedAvrHi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_peakSum", &cut_peakSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_pedRmsL", &cut_pedRmsL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_pedRmsH", &cut_pedRmsH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_pedValH", &cut_pedValH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdfName[7]", pdfName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdfFract[7]", pdfFract);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*can", &can);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLpedcLcLM3CcdPedMaker(void *p) {
      return  p ? new(p) ::dmtpc::ped::M3CcdPedMaker : new ::dmtpc::ped::M3CcdPedMaker;
   }
   static void *newArray_dmtpccLcLpedcLcLM3CcdPedMaker(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::ped::M3CcdPedMaker[nElements] : new ::dmtpc::ped::M3CcdPedMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLpedcLcLM3CcdPedMaker(void *p) {
      delete ((::dmtpc::ped::M3CcdPedMaker*)p);
   }
   static void deleteArray_dmtpccLcLpedcLcLM3CcdPedMaker(void *p) {
      delete [] ((::dmtpc::ped::M3CcdPedMaker*)p);
   }
   static void destruct_dmtpccLcLpedcLcLM3CcdPedMaker(void *p) {
      typedef ::dmtpc::ped::M3CcdPedMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::ped::M3CcdPedMaker

      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
void M3CcdImageUtil::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::ped::M3CcdImageUtil.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::ped::M3CcdImageUtil::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::ped::M3CcdImageUtil::Class(),this);
   }
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
//______________________________________________________________________________
      namespace dmtpc {
         namespace ped {
void M3CcdImageUtil::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::ped::M3CcdImageUtil.
      TClass *R__cl = ::dmtpc::ped::M3CcdImageUtil::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLpedcLcLM3CcdImageUtil(void *p) {
      return  p ? new(p) ::dmtpc::ped::M3CcdImageUtil : new ::dmtpc::ped::M3CcdImageUtil;
   }
   static void *newArray_dmtpccLcLpedcLcLM3CcdImageUtil(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::ped::M3CcdImageUtil[nElements] : new ::dmtpc::ped::M3CcdImageUtil[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLpedcLcLM3CcdImageUtil(void *p) {
      delete ((::dmtpc::ped::M3CcdImageUtil*)p);
   }
   static void deleteArray_dmtpccLcLpedcLcLM3CcdImageUtil(void *p) {
      delete [] ((::dmtpc::ped::M3CcdImageUtil*)p);
   }
   static void destruct_dmtpccLcLpedcLcLM3CcdImageUtil(void *p) {
      typedef ::dmtpc::ped::M3CcdImageUtil current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::ped::M3CcdImageUtil

      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
void M3CcdCalibMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::ped::M3CcdCalibMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::ped::M3CcdCalibMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::ped::M3CcdCalibMaker::Class(),this);
   }
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
//______________________________________________________________________________
      namespace dmtpc {
         namespace ped {
void M3CcdCalibMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::ped::M3CcdCalibMaker.
      TClass *R__cl = ::dmtpc::ped::M3CcdCalibMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NtotEve", &NtotEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coreName", &coreName);
      R__insp.InspectMember(coreName, "coreName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camId", &camId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camSrc", &camSrc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*jEve", &jEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2Dlight", &h2Dlight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2DlightRot", &h2DlightRot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "traceV", (void*)&traceV);
      R__insp.InspectMember("vector<PixelTrace>", (void*)&traceV, "traceV.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "correlV", (void*)&correlV);
      R__insp.InspectMember("vector<PixelCorrel>", (void*)&correlV, "correlV.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2GarbCol", &h2GarbCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hA[16]", &hA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_bin2mm_4shutter_1x1", &par_bin2mm_4shutter_1x1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_fixRawHistDims", &par_fixRawHistDims);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_userRebin", &par_userRebin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPedAvr", &hPedAvr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPedStat", &hPedStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2Dtempl", &h2Dtempl);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLpedcLcLM3CcdCalibMaker(void *p) {
      return  p ? new(p) ::dmtpc::ped::M3CcdCalibMaker : new ::dmtpc::ped::M3CcdCalibMaker;
   }
   static void *newArray_dmtpccLcLpedcLcLM3CcdCalibMaker(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::ped::M3CcdCalibMaker[nElements] : new ::dmtpc::ped::M3CcdCalibMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLpedcLcLM3CcdCalibMaker(void *p) {
      delete ((::dmtpc::ped::M3CcdCalibMaker*)p);
   }
   static void deleteArray_dmtpccLcLpedcLcLM3CcdCalibMaker(void *p) {
      delete [] ((::dmtpc::ped::M3CcdCalibMaker*)p);
   }
   static void destruct_dmtpccLcLpedcLcLM3CcdCalibMaker(void *p) {
      typedef ::dmtpc::ped::M3CcdCalibMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::ped::M3CcdCalibMaker

      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
void M3CcdClusterMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::ped::M3CcdClusterMaker.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::ped::M3CcdClusterMaker::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::ped::M3CcdClusterMaker::Class(),this);
   }
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
//______________________________________________________________________________
      namespace dmtpc {
         namespace ped {
void M3CcdClusterMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::ped::M3CcdClusterMaker.
      TClass *R__cl = ::dmtpc::ped::M3CcdClusterMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coreName", &coreName);
      R__insp.InspectMember(coreName, "coreName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "camId", &camId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dbg", &dbg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*can", &can);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pdfName", &pdfName);
      R__insp.InspectMember(pdfName, "pdfName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdCSV", &fdCSV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*jEve", &jEve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2Dlight", &h2Dlight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hPedStat", &hPedStat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h2DlightRot", &h2DlightRot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "abortFrame", &abortFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listPiSpark", &listPiSpark);
      R__insp.InspectMember(listPiSpark, "listPiSpark.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listStarSpark", &listStarSpark);
      R__insp.InspectMember(listStarSpark, "listStarSpark.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPromise", &nPromise);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hUtil", &hUtil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hA[32]", &hA);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_nSigThr1", &par_nSigThr1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_nSigThr2", &par_nSigThr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_cellCountL", &cut_cellCountL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_clustLightL", &cut_clustLightL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_clustDiagL", &cut_clustDiagL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_pcaRatioH", &cut_pcaRatioH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_fiduC", &cut_fiduC);
      R__insp.InspectMember(cut_fiduC, "cut_fiduC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_fiduPhi1", &cut_fiduPhi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_fiduPhi2", &cut_fiduPhi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_fiduR2max", &cut_fiduR2max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_fiduBandPix", &par_fiduBandPix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cut_factHadrRec", &cut_factHadrRec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_starSparkLight", &par_starSparkLight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_piSparkLtDens", &par_piSparkLtDens);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_piSparkDiag", &par_piSparkDiag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "par_piSparkNcell", &par_piSparkNcell);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLpedcLcLM3CcdClusterMaker(void *p) {
      return  p ? new(p) ::dmtpc::ped::M3CcdClusterMaker : new ::dmtpc::ped::M3CcdClusterMaker;
   }
   static void *newArray_dmtpccLcLpedcLcLM3CcdClusterMaker(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::ped::M3CcdClusterMaker[nElements] : new ::dmtpc::ped::M3CcdClusterMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLpedcLcLM3CcdClusterMaker(void *p) {
      delete ((::dmtpc::ped::M3CcdClusterMaker*)p);
   }
   static void deleteArray_dmtpccLcLpedcLcLM3CcdClusterMaker(void *p) {
      delete [] ((::dmtpc::ped::M3CcdClusterMaker*)p);
   }
   static void destruct_dmtpccLcLpedcLcLM3CcdClusterMaker(void *p) {
      typedef ::dmtpc::ped::M3CcdClusterMaker current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::ped::M3CcdClusterMaker

      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
void PixelTrace::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::ped::PixelTrace.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::ped::PixelTrace::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::ped::PixelTrace::Class(),this);
   }
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
//______________________________________________________________________________
      namespace dmtpc {
         namespace ped {
void PixelTrace::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::ped::PixelTrace.
      TClass *R__cl = ::dmtpc::ped::PixelTrace::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBin", &mBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valErr", &valErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coreName", &coreName);
      R__insp.InspectMember(coreName, "coreName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hT", &hT);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLpedcLcLPixelTrace(void *p) {
      return  p ? new(p) ::dmtpc::ped::PixelTrace : new ::dmtpc::ped::PixelTrace;
   }
   static void *newArray_dmtpccLcLpedcLcLPixelTrace(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::ped::PixelTrace[nElements] : new ::dmtpc::ped::PixelTrace[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLpedcLcLPixelTrace(void *p) {
      delete ((::dmtpc::ped::PixelTrace*)p);
   }
   static void deleteArray_dmtpccLcLpedcLcLPixelTrace(void *p) {
      delete [] ((::dmtpc::ped::PixelTrace*)p);
   }
   static void destruct_dmtpccLcLpedcLcLPixelTrace(void *p) {
      typedef ::dmtpc::ped::PixelTrace current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::ped::PixelTrace

      namespace dmtpc {
         namespace ped {
//______________________________________________________________________________
void PixelCorrel::Streamer(TBuffer &R__b)
{
   // Stream an object of class dmtpc::ped::PixelCorrel.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(dmtpc::ped::PixelCorrel::Class(),this);
   } else {
      R__b.WriteClassBuffer(dmtpc::ped::PixelCorrel::Class(),this);
   }
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
//______________________________________________________________________________
      namespace dmtpc {
         namespace ped {
void PixelCorrel::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class dmtpc::ped::PixelCorrel.
      TClass *R__cl = ::dmtpc::ped::PixelCorrel::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBin1", &mBin1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mBin2", &mBin2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valErr1", &valErr1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "valErr2", &valErr2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "coreName", &coreName);
      R__insp.InspectMember(coreName, "coreName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hC", &hC);
      TObject::ShowMembers(R__insp);
}

} // namespace dmtpc::ped
} // namespace dmtpc::ped
namespace ROOTDict {
   // Wrappers around operator new
   static void *new_dmtpccLcLpedcLcLPixelCorrel(void *p) {
      return  p ? new(p) ::dmtpc::ped::PixelCorrel : new ::dmtpc::ped::PixelCorrel;
   }
   static void *newArray_dmtpccLcLpedcLcLPixelCorrel(Long_t nElements, void *p) {
      return p ? new(p) ::dmtpc::ped::PixelCorrel[nElements] : new ::dmtpc::ped::PixelCorrel[nElements];
   }
   // Wrapper around operator delete
   static void delete_dmtpccLcLpedcLcLPixelCorrel(void *p) {
      delete ((::dmtpc::ped::PixelCorrel*)p);
   }
   static void deleteArray_dmtpccLcLpedcLcLPixelCorrel(void *p) {
      delete [] ((::dmtpc::ped::PixelCorrel*)p);
   }
   static void destruct_dmtpccLcLpedcLcLPixelCorrel(void *p) {
      typedef ::dmtpc::ped::PixelCorrel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::dmtpc::ped::PixelCorrel

//______________________________________________________________________________
void M3JanEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class M3JanEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(M3JanEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(M3JanEvent::Class(),this);
   }
}

//______________________________________________________________________________
void M3JanEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class M3JanEvent.
      TClass *R__cl = ::M3JanEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "frameId", &frameId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runId", &runId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clusterV[4]", clusterV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "light[4]", light);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_M3JanEvent(void *p) {
      return  p ? new(p) ::M3JanEvent : new ::M3JanEvent;
   }
   static void *newArray_M3JanEvent(Long_t nElements, void *p) {
      return p ? new(p) ::M3JanEvent[nElements] : new ::M3JanEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_M3JanEvent(void *p) {
      delete ((::M3JanEvent*)p);
   }
   static void deleteArray_M3JanEvent(void *p) {
      delete [] ((::M3JanEvent*)p);
   }
   static void destruct_M3JanEvent(void *p) {
      typedef ::M3JanEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::M3JanEvent

//______________________________________________________________________________
void M3ImageCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class M3ImageCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(M3ImageCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(M3ImageCluster::Class(),this);
   }
}

//______________________________________________________________________________
void M3ImageCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class M3ImageCluster.
      TClass *R__cl = ::M3ImageCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellV", (void*)&cellV);
      R__insp.InspectMember("vector<M3ImageCell>", (void*)&cellV, "cellV.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBody", &nBody);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSkin", &nSkin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jxL", &jxL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jyL", &jyL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jxH", &jxH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jyH", &jyH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bin2mm", &bin2mm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cmJx", &cmJx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cmJy", &cmJy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "light", &light);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Imin", &Imin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Imax", &Imax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ialpha", &Ialpha);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_M3ImageCluster(void *p) {
      return  p ? new(p) ::M3ImageCluster : new ::M3ImageCluster;
   }
   static void *newArray_M3ImageCluster(Long_t nElements, void *p) {
      return p ? new(p) ::M3ImageCluster[nElements] : new ::M3ImageCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_M3ImageCluster(void *p) {
      delete ((::M3ImageCluster*)p);
   }
   static void deleteArray_M3ImageCluster(void *p) {
      delete [] ((::M3ImageCluster*)p);
   }
   static void destruct_M3ImageCluster(void *p) {
      typedef ::M3ImageCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::M3ImageCluster

//______________________________________________________________________________
void M3ImageCell::Streamer(TBuffer &R__b)
{
   // Stream an object of class M3ImageCell.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(M3ImageCell::Class(),this);
   } else {
      R__b.WriteClassBuffer(M3ImageCell::Class(),this);
   }
}

//______________________________________________________________________________
void M3ImageCell::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class M3ImageCell.
      TClass *R__cl = ::M3ImageCell::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jx", &jx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "jy", &jy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "light", &light);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigLight", &sigLight);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_M3ImageCell(void *p) {
      return  p ? new(p) ::M3ImageCell : new ::M3ImageCell;
   }
   static void *newArray_M3ImageCell(Long_t nElements, void *p) {
      return p ? new(p) ::M3ImageCell[nElements] : new ::M3ImageCell[nElements];
   }
   // Wrapper around operator delete
   static void delete_M3ImageCell(void *p) {
      delete ((::M3ImageCell*)p);
   }
   static void deleteArray_M3ImageCell(void *p) {
      delete [] ((::M3ImageCell*)p);
   }
   static void destruct_M3ImageCell(void *p) {
      typedef ::M3ImageCell current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::M3ImageCell

namespace ROOTDict {
   void vectorlEM3ImageCellgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEM3ImageCellgR_Dictionary();
   static void *new_vectorlEM3ImageCellgR(void *p = 0);
   static void *newArray_vectorlEM3ImageCellgR(Long_t size, void *p);
   static void delete_vectorlEM3ImageCellgR(void *p);
   static void deleteArray_vectorlEM3ImageCellgR(void *p);
   static void destruct_vectorlEM3ImageCellgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<M3ImageCell>*)
   {
      vector<M3ImageCell> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<M3ImageCell>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<M3ImageCell>", -2, "prec_stl/vector", 49,
                  typeid(vector<M3ImageCell>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEM3ImageCellgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<M3ImageCell>) );
      instance.SetNew(&new_vectorlEM3ImageCellgR);
      instance.SetNewArray(&newArray_vectorlEM3ImageCellgR);
      instance.SetDelete(&delete_vectorlEM3ImageCellgR);
      instance.SetDeleteArray(&deleteArray_vectorlEM3ImageCellgR);
      instance.SetDestructor(&destruct_vectorlEM3ImageCellgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<M3ImageCell> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<M3ImageCell>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEM3ImageCellgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<M3ImageCell>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEM3ImageCellgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<M3ImageCell> : new vector<M3ImageCell>;
   }
   static void *newArray_vectorlEM3ImageCellgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<M3ImageCell>[nElements] : new vector<M3ImageCell>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEM3ImageCellgR(void *p) {
      delete ((vector<M3ImageCell>*)p);
   }
   static void deleteArray_vectorlEM3ImageCellgR(void *p) {
      delete [] ((vector<M3ImageCell>*)p);
   }
   static void destruct_vectorlEM3ImageCellgR(void *p) {
      typedef vector<M3ImageCell> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<M3ImageCell>

namespace ROOTDict {
   void vectorlEM3ImageClustergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEM3ImageClustergR_Dictionary();
   static void *new_vectorlEM3ImageClustergR(void *p = 0);
   static void *newArray_vectorlEM3ImageClustergR(Long_t size, void *p);
   static void delete_vectorlEM3ImageClustergR(void *p);
   static void deleteArray_vectorlEM3ImageClustergR(void *p);
   static void destruct_vectorlEM3ImageClustergR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<M3ImageCluster>*)
   {
      vector<M3ImageCluster> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<M3ImageCluster>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<M3ImageCluster>", -2, "prec_stl/vector", 49,
                  typeid(vector<M3ImageCluster>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEM3ImageClustergR_Dictionary, isa_proxy, 0,
                  sizeof(vector<M3ImageCluster>) );
      instance.SetNew(&new_vectorlEM3ImageClustergR);
      instance.SetNewArray(&newArray_vectorlEM3ImageClustergR);
      instance.SetDelete(&delete_vectorlEM3ImageClustergR);
      instance.SetDeleteArray(&deleteArray_vectorlEM3ImageClustergR);
      instance.SetDestructor(&destruct_vectorlEM3ImageClustergR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<M3ImageCluster> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<M3ImageCluster>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEM3ImageClustergR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<M3ImageCluster>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEM3ImageClustergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<M3ImageCluster> : new vector<M3ImageCluster>;
   }
   static void *newArray_vectorlEM3ImageClustergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<M3ImageCluster>[nElements] : new vector<M3ImageCluster>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEM3ImageClustergR(void *p) {
      delete ((vector<M3ImageCluster>*)p);
   }
   static void deleteArray_vectorlEM3ImageClustergR(void *p) {
      delete [] ((vector<M3ImageCluster>*)p);
   }
   static void destruct_vectorlEM3ImageClustergR(void *p) {
      typedef vector<M3ImageCluster> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<M3ImageCluster>

namespace ROOTDict {
   void vectorlEdmtpccLcLpedcLcLPixelCorrelgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLpedcLcLPixelCorrelgR_Dictionary();
   static void *new_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(void *p);
   static void deleteArray_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(void *p);
   static void destruct_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::ped::PixelCorrel>*)
   {
      vector<dmtpc::ped::PixelCorrel> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::ped::PixelCorrel>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::ped::PixelCorrel>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::ped::PixelCorrel>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLpedcLcLPixelCorrelgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::ped::PixelCorrel>) );
      instance.SetNew(&new_vectorlEdmtpccLcLpedcLcLPixelCorrelgR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLpedcLcLPixelCorrelgR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLpedcLcLPixelCorrelgR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLpedcLcLPixelCorrelgR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLpedcLcLPixelCorrelgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::ped::PixelCorrel> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::ped::PixelCorrel>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLpedcLcLPixelCorrelgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::ped::PixelCorrel>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::ped::PixelCorrel> : new vector<dmtpc::ped::PixelCorrel>;
   }
   static void *newArray_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::ped::PixelCorrel>[nElements] : new vector<dmtpc::ped::PixelCorrel>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(void *p) {
      delete ((vector<dmtpc::ped::PixelCorrel>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(void *p) {
      delete [] ((vector<dmtpc::ped::PixelCorrel>*)p);
   }
   static void destruct_vectorlEdmtpccLcLpedcLcLPixelCorrelgR(void *p) {
      typedef vector<dmtpc::ped::PixelCorrel> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::ped::PixelCorrel>

namespace ROOTDict {
   void vectorlEdmtpccLcLpedcLcLPixelTracegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdmtpccLcLpedcLcLPixelTracegR_Dictionary();
   static void *new_vectorlEdmtpccLcLpedcLcLPixelTracegR(void *p = 0);
   static void *newArray_vectorlEdmtpccLcLpedcLcLPixelTracegR(Long_t size, void *p);
   static void delete_vectorlEdmtpccLcLpedcLcLPixelTracegR(void *p);
   static void deleteArray_vectorlEdmtpccLcLpedcLcLPixelTracegR(void *p);
   static void destruct_vectorlEdmtpccLcLpedcLcLPixelTracegR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<dmtpc::ped::PixelTrace>*)
   {
      vector<dmtpc::ped::PixelTrace> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<dmtpc::ped::PixelTrace>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<dmtpc::ped::PixelTrace>", -2, "prec_stl/vector", 49,
                  typeid(vector<dmtpc::ped::PixelTrace>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEdmtpccLcLpedcLcLPixelTracegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<dmtpc::ped::PixelTrace>) );
      instance.SetNew(&new_vectorlEdmtpccLcLpedcLcLPixelTracegR);
      instance.SetNewArray(&newArray_vectorlEdmtpccLcLpedcLcLPixelTracegR);
      instance.SetDelete(&delete_vectorlEdmtpccLcLpedcLcLPixelTracegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdmtpccLcLpedcLcLPixelTracegR);
      instance.SetDestructor(&destruct_vectorlEdmtpccLcLpedcLcLPixelTracegR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<dmtpc::ped::PixelTrace> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<dmtpc::ped::PixelTrace>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdmtpccLcLpedcLcLPixelTracegR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<dmtpc::ped::PixelTrace>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEdmtpccLcLpedcLcLPixelTracegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::ped::PixelTrace> : new vector<dmtpc::ped::PixelTrace>;
   }
   static void *newArray_vectorlEdmtpccLcLpedcLcLPixelTracegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<dmtpc::ped::PixelTrace>[nElements] : new vector<dmtpc::ped::PixelTrace>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdmtpccLcLpedcLcLPixelTracegR(void *p) {
      delete ((vector<dmtpc::ped::PixelTrace>*)p);
   }
   static void deleteArray_vectorlEdmtpccLcLpedcLcLPixelTracegR(void *p) {
      delete [] ((vector<dmtpc::ped::PixelTrace>*)p);
   }
   static void destruct_vectorlEdmtpccLcLpedcLcLPixelTracegR(void *p) {
      typedef vector<dmtpc::ped::PixelTrace> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<dmtpc::ped::PixelTrace>

/********************************************************
* build/JanAnalysis2016Cint.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableJanAnalysis2016Cint();

extern "C" void G__set_cpp_environmentJanAnalysis2016Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("include/M3CcdCalibMaker.hh");
  G__add_compiledheader("include/M3CcdClusterMaker.hh");
  G__add_compiledheader("include/M3CcdImageUtil.hh");
  G__add_compiledheader("include/M3CcdPedMaker.hh");
  G__add_compiledheader("include/M3JanEvent.hh");
  G__add_compiledheader("include/PixelCorrel.hh");
  G__add_compiledheader("include/PixelTrace.hh");
  G__cpp_reset_tagtableJanAnalysis2016Cint();
}
#include <new>
extern "C" int G__cpp_dllrevJanAnalysis2016Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* M3JanEvent */
static int G__JanAnalysis2016Cint_189_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   M3JanEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new M3JanEvent[n];
     } else {
       p = new((void*) gvp) M3JanEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new M3JanEvent;
     } else {
       p = new((void*) gvp) M3JanEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((M3JanEvent*) G__getstructoffset())->clearFrame();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((M3JanEvent*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((M3JanEvent*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) M3JanEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) M3JanEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) M3JanEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      M3JanEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((M3JanEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) M3JanEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) M3JanEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) M3JanEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_189_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) M3JanEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JanAnalysis2016Cint_189_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   M3JanEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new M3JanEvent(*(M3JanEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef M3JanEvent G__TM3JanEvent;
static int G__JanAnalysis2016Cint_189_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (M3JanEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((M3JanEvent*) (soff+(sizeof(M3JanEvent)*i)))->~G__TM3JanEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (M3JanEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((M3JanEvent*) (soff))->~G__TM3JanEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JanAnalysis2016Cint_189_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   M3JanEvent* dest = (M3JanEvent*) G__getstructoffset();
   *dest = *(M3JanEvent*) libp->para[0].ref;
   const M3JanEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc */

/* dmtpc::ped */

/* dmtpc::ped::PixelTrace */
static int G__JanAnalysis2016Cint_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::PixelTrace* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::PixelTrace[n];
     } else {
       p = new((void*) gvp) dmtpc::ped::PixelTrace[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::PixelTrace;
     } else {
       p = new((void*) gvp) dmtpc::ped::PixelTrace;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::PixelTrace* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::ped::PixelTrace(
*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) dmtpc::ped::PixelTrace(
*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::PixelTrace*) G__getstructoffset())->saveHisto((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::PixelTrace*) G__getstructoffset())->fillFrom((TH2I*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::ped::PixelTrace::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::PixelTrace::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::ped::PixelTrace::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::ped::PixelTrace::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::PixelTrace*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::PixelTrace::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::PixelTrace::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::PixelTrace::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::PixelTrace::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JanAnalysis2016Cint_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::ped::PixelTrace* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::ped::PixelTrace(*(dmtpc::ped::PixelTrace*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::ped::PixelTrace G__TdmtpccLcLpedcLcLPixelTrace;
static int G__JanAnalysis2016Cint_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::ped::PixelTrace*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::ped::PixelTrace*) (soff+(sizeof(dmtpc::ped::PixelTrace)*i)))->~G__TdmtpccLcLpedcLcLPixelTrace();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::ped::PixelTrace*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::ped::PixelTrace*) (soff))->~G__TdmtpccLcLpedcLcLPixelTrace();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JanAnalysis2016Cint_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::PixelTrace* dest = (dmtpc::ped::PixelTrace*) G__getstructoffset();
   *dest = *(dmtpc::ped::PixelTrace*) libp->para[0].ref;
   const dmtpc::ped::PixelTrace& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::ped::PixelCorrel */
static int G__JanAnalysis2016Cint_194_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::PixelCorrel* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::PixelCorrel[n];
     } else {
       p = new((void*) gvp) dmtpc::ped::PixelCorrel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::PixelCorrel;
     } else {
       p = new((void*) gvp) dmtpc::ped::PixelCorrel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::PixelCorrel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new dmtpc::ped::PixelCorrel(
*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]));
   } else {
     p = new((void*) gvp) dmtpc::ped::PixelCorrel(
*((TString*) G__int(libp->para[0])), (int) G__int(libp->para[1])
, (float) G__double(libp->para[2]), (int) G__int(libp->para[3])
, (float) G__double(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::PixelCorrel*) G__getstructoffset())->saveHisto((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::PixelCorrel*) G__getstructoffset())->fillFrom((TH2I*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::ped::PixelCorrel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::PixelCorrel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::ped::PixelCorrel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::ped::PixelCorrel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::PixelCorrel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::PixelCorrel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::PixelCorrel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::PixelCorrel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_194_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::PixelCorrel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JanAnalysis2016Cint_194_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::ped::PixelCorrel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::ped::PixelCorrel(*(dmtpc::ped::PixelCorrel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::ped::PixelCorrel G__TdmtpccLcLpedcLcLPixelCorrel;
static int G__JanAnalysis2016Cint_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::ped::PixelCorrel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::ped::PixelCorrel*) (soff+(sizeof(dmtpc::ped::PixelCorrel)*i)))->~G__TdmtpccLcLpedcLcLPixelCorrel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::ped::PixelCorrel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::ped::PixelCorrel*) (soff))->~G__TdmtpccLcLpedcLcLPixelCorrel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JanAnalysis2016Cint_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::PixelCorrel* dest = (dmtpc::ped::PixelCorrel*) G__getstructoffset();
   *dest = *(dmtpc::ped::PixelCorrel*) libp->para[0].ref;
   const dmtpc::ped::PixelCorrel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::ped::M3CcdClusterMaker */
static int G__JanAnalysis2016Cint_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::M3CcdClusterMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::M3CcdClusterMaker[n];
     } else {
       p = new((void*) gvp) dmtpc::ped::M3CcdClusterMaker[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::M3CcdClusterMaker;
     } else {
       p = new((void*) gvp) dmtpc::ped::M3CcdClusterMaker;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->saveHisto((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->initHisto();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->findSeedClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->hasPiSpark());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->measureClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->bestTrack();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->display();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->isFiducial((float) G__double(libp->para[0]), (float) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->attachSkinToClusters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->setDebug((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->setCuts((float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->setHadrRecCut((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->setDrawings((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->setCSVreport(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->setJanEve((M3JanEvent*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->setNsigThres12((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->setFiducial((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::ped::M3CcdClusterMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdClusterMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::ped::M3CcdClusterMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::ped::M3CcdClusterMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdClusterMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::M3CcdClusterMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdClusterMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_198_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::M3CcdClusterMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JanAnalysis2016Cint_198_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::ped::M3CcdClusterMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::ped::M3CcdClusterMaker(*(dmtpc::ped::M3CcdClusterMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::ped::M3CcdClusterMaker G__TdmtpccLcLpedcLcLM3CcdClusterMaker;
static int G__JanAnalysis2016Cint_198_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::ped::M3CcdClusterMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::ped::M3CcdClusterMaker*) (soff+(sizeof(dmtpc::ped::M3CcdClusterMaker)*i)))->~G__TdmtpccLcLpedcLcLM3CcdClusterMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::ped::M3CcdClusterMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::ped::M3CcdClusterMaker*) (soff))->~G__TdmtpccLcLpedcLcLM3CcdClusterMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JanAnalysis2016Cint_198_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::M3CcdClusterMaker* dest = (dmtpc::ped::M3CcdClusterMaker*) G__getstructoffset();
   *dest = *(dmtpc::ped::M3CcdClusterMaker*) libp->para[0].ref;
   const dmtpc::ped::M3CcdClusterMaker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::ped::M3CcdCalibMaker */
static int G__JanAnalysis2016Cint_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::M3CcdCalibMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::M3CcdCalibMaker[n];
     } else {
       p = new((void*) gvp) dmtpc::ped::M3CcdCalibMaker[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::M3CcdCalibMaker;
     } else {
       p = new((void*) gvp) dmtpc::ped::M3CcdCalibMaker;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset())->load_pedStat(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset())->calibrateImage((dmtpc::core::Event*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset())->initDims((dmtpc::core::Dataset*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset())->addPixTrace((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset())->addPixCorrel((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset())->saveHisto((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset())->setUserRebin((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset())->setJanEve((M3JanEvent*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::ped::M3CcdCalibMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdCalibMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::ped::M3CcdCalibMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::ped::M3CcdCalibMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdCalibMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::M3CcdCalibMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdCalibMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_199_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::M3CcdCalibMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JanAnalysis2016Cint_199_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::ped::M3CcdCalibMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::ped::M3CcdCalibMaker(*(dmtpc::ped::M3CcdCalibMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::ped::M3CcdCalibMaker G__TdmtpccLcLpedcLcLM3CcdCalibMaker;
static int G__JanAnalysis2016Cint_199_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::ped::M3CcdCalibMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::ped::M3CcdCalibMaker*) (soff+(sizeof(dmtpc::ped::M3CcdCalibMaker)*i)))->~G__TdmtpccLcLpedcLcLM3CcdCalibMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::ped::M3CcdCalibMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::ped::M3CcdCalibMaker*) (soff))->~G__TdmtpccLcLpedcLcLM3CcdCalibMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JanAnalysis2016Cint_199_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::M3CcdCalibMaker* dest = (dmtpc::ped::M3CcdCalibMaker*) G__getstructoffset();
   *dest = *(dmtpc::ped::M3CcdCalibMaker*) libp->para[0].ref;
   const dmtpc::ped::M3CcdCalibMaker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* M3ImageCluster */
static int G__JanAnalysis2016Cint_210_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   M3ImageCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new M3ImageCluster((float) G__double(libp->para[0]));
   } else {
     p = new((void*) gvp) M3ImageCluster((float) G__double(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   M3ImageCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new M3ImageCluster[n];
     } else {
       p = new((void*) gvp) M3ImageCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new M3ImageCluster;
     } else {
       p = new((void*) gvp) M3ImageCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((M3ImageCluster*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((M3ImageCluster*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((M3ImageCluster*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((M3ImageCluster*) G__getstructoffset())->getDiagonal_mm());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((M3ImageCluster*) G__getstructoffset())->getDiagonal_bin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((M3ImageCluster*) G__getstructoffset())->log10CellCount());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((M3ImageCluster*) G__getstructoffset())->log10Light());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) M3ImageCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) M3ImageCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) M3ImageCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      M3ImageCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((M3ImageCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) M3ImageCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) M3ImageCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) M3ImageCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_210_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) M3ImageCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JanAnalysis2016Cint_210_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   M3ImageCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new M3ImageCluster(*(M3ImageCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef M3ImageCluster G__TM3ImageCluster;
static int G__JanAnalysis2016Cint_210_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (M3ImageCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((M3ImageCluster*) (soff+(sizeof(M3ImageCluster)*i)))->~G__TM3ImageCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (M3ImageCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((M3ImageCluster*) (soff))->~G__TM3ImageCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JanAnalysis2016Cint_210_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   M3ImageCluster* dest = (M3ImageCluster*) G__getstructoffset();
   *dest = *(M3ImageCluster*) libp->para[0].ref;
   const M3ImageCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* M3ImageCell */
static int G__JanAnalysis2016Cint_211_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   M3ImageCell* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new M3ImageCell[n];
     } else {
       p = new((void*) gvp) M3ImageCell[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new M3ImageCell;
     } else {
       p = new((void*) gvp) M3ImageCell;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCell));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((M3ImageCell*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((M3ImageCell*) G__getstructoffset())->print((int) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((M3ImageCell*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) M3ImageCell::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) M3ImageCell::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) M3ImageCell::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      M3ImageCell::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((M3ImageCell*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) M3ImageCell::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) M3ImageCell::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) M3ImageCell::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_211_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) M3ImageCell::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JanAnalysis2016Cint_211_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   M3ImageCell* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new M3ImageCell(*(M3ImageCell*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCell));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef M3ImageCell G__TM3ImageCell;
static int G__JanAnalysis2016Cint_211_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (M3ImageCell*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((M3ImageCell*) (soff+(sizeof(M3ImageCell)*i)))->~G__TM3ImageCell();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (M3ImageCell*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((M3ImageCell*) (soff))->~G__TM3ImageCell();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JanAnalysis2016Cint_211_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   M3ImageCell* dest = (M3ImageCell*) G__getstructoffset();
   *dest = *(M3ImageCell*) libp->para[0].ref;
   const M3ImageCell& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::ped::M3CcdImageUtil */
static int G__JanAnalysis2016Cint_213_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::M3CcdImageUtil* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::M3CcdImageUtil[n];
     } else {
       p = new((void*) gvp) dmtpc::ped::M3CcdImageUtil[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::M3CcdImageUtil;
     } else {
       p = new((void*) gvp) dmtpc::ped::M3CcdImageUtil;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::ped::M3CcdImageUtil::convert764toOS((TH2I*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::ped::M3CcdImageUtil::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdImageUtil::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::ped::M3CcdImageUtil::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::ped::M3CcdImageUtil::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdImageUtil*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdImageUtil::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::M3CcdImageUtil::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdImageUtil::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_213_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::M3CcdImageUtil::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JanAnalysis2016Cint_213_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::ped::M3CcdImageUtil* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::ped::M3CcdImageUtil(*(dmtpc::ped::M3CcdImageUtil*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::ped::M3CcdImageUtil G__TdmtpccLcLpedcLcLM3CcdImageUtil;
static int G__JanAnalysis2016Cint_213_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::ped::M3CcdImageUtil*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::ped::M3CcdImageUtil*) (soff+(sizeof(dmtpc::ped::M3CcdImageUtil)*i)))->~G__TdmtpccLcLpedcLcLM3CcdImageUtil();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::ped::M3CcdImageUtil*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::ped::M3CcdImageUtil*) (soff))->~G__TdmtpccLcLpedcLcLM3CcdImageUtil();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JanAnalysis2016Cint_213_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::M3CcdImageUtil* dest = (dmtpc::ped::M3CcdImageUtil*) G__getstructoffset();
   *dest = *(dmtpc::ped::M3CcdImageUtil*) libp->para[0].ref;
   const dmtpc::ped::M3CcdImageUtil& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* dmtpc::ped::M3CcdPedMaker */
static int G__JanAnalysis2016Cint_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::M3CcdPedMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::M3CcdPedMaker[n];
     } else {
       p = new((void*) gvp) dmtpc::ped::M3CcdPedMaker[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new dmtpc::ped::M3CcdPedMaker;
     } else {
       p = new((void*) gvp) dmtpc::ped::M3CcdPedMaker;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdPedMaker*) G__getstructoffset())->accumulatePed((dmtpc::core::Event*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdPedMaker*) G__getstructoffset())->initDims((dmtpc::core::Dataset*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdPedMaker*) G__getstructoffset())->saveHisto((TFile*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdPedMaker*) G__getstructoffset())->ingest_pedSpecBig(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((dmtpc::ped::M3CcdPedMaker*) G__getstructoffset())->computePed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdPedMaker*) G__getstructoffset())->setPar((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) dmtpc::ped::M3CcdPedMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdPedMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) dmtpc::ped::M3CcdPedMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      dmtpc::ped::M3CcdPedMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((dmtpc::ped::M3CcdPedMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdPedMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::M3CcdPedMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) dmtpc::ped::M3CcdPedMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__JanAnalysis2016Cint_218_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) dmtpc::ped::M3CcdPedMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__JanAnalysis2016Cint_218_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   dmtpc::ped::M3CcdPedMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new dmtpc::ped::M3CcdPedMaker(*(dmtpc::ped::M3CcdPedMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef dmtpc::ped::M3CcdPedMaker G__TdmtpccLcLpedcLcLM3CcdPedMaker;
static int G__JanAnalysis2016Cint_218_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (dmtpc::ped::M3CcdPedMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((dmtpc::ped::M3CcdPedMaker*) (soff+(sizeof(dmtpc::ped::M3CcdPedMaker)*i)))->~G__TdmtpccLcLpedcLcLM3CcdPedMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (dmtpc::ped::M3CcdPedMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((dmtpc::ped::M3CcdPedMaker*) (soff))->~G__TdmtpccLcLpedcLcLM3CcdPedMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__JanAnalysis2016Cint_218_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   dmtpc::ped::M3CcdPedMaker* dest = (dmtpc::ped::M3CcdPedMaker*) G__getstructoffset();
   *dest = *(dmtpc::ped::M3CcdPedMaker*) libp->para[0].ref;
   const dmtpc::ped::M3CcdPedMaker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* M3JanEvent */

/* dmtpc */

/* dmtpc::ped */

/* dmtpc::ped::PixelTrace */

/* dmtpc::ped::PixelCorrel */

/* dmtpc::ped::M3CcdClusterMaker */

/* dmtpc::ped::M3CcdCalibMaker */

/* M3ImageCluster */

/* M3ImageCell */

/* dmtpc::ped::M3CcdImageUtil */

/* dmtpc::ped::M3CcdPedMaker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncJanAnalysis2016Cint {
 public:
  G__Sizep2memfuncJanAnalysis2016Cint(): p(&G__Sizep2memfuncJanAnalysis2016Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncJanAnalysis2016Cint::*p)();
};

size_t G__get_sizep2memfuncJanAnalysis2016Cint()
{
  G__Sizep2memfuncJanAnalysis2016Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceJanAnalysis2016Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent))) {
     M3JanEvent *G__Lderived;
     G__Lderived=(M3JanEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent),G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace))) {
     dmtpc::ped::PixelTrace *G__Lderived;
     G__Lderived=(dmtpc::ped::PixelTrace*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace),G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel))) {
     dmtpc::ped::PixelCorrel *G__Lderived;
     G__Lderived=(dmtpc::ped::PixelCorrel*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel),G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker))) {
     dmtpc::ped::M3CcdClusterMaker *G__Lderived;
     G__Lderived=(dmtpc::ped::M3CcdClusterMaker*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker),G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker))) {
     dmtpc::ped::M3CcdCalibMaker *G__Lderived;
     G__Lderived=(dmtpc::ped::M3CcdCalibMaker*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker),G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster))) {
     M3ImageCluster *G__Lderived;
     G__Lderived=(M3ImageCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster),G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCell))) {
     M3ImageCell *G__Lderived;
     G__Lderived=(M3ImageCell*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCell),G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil))) {
     dmtpc::ped::M3CcdImageUtil *G__Lderived;
     G__Lderived=(dmtpc::ped::M3CcdImageUtil*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil),G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker))) {
     dmtpc::ped::M3CcdPedMaker *G__Lderived;
     G__Lderived=(dmtpc::ped::M3CcdPedMaker*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker),G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableJanAnalysis2016Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PixelTrace>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::ped::PixelTrace>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<PixelCorrel>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<dmtpc::ped::PixelCorrel>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<M3ImageCell>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<M3ImageCluster>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* M3JanEvent */
static void G__setup_memvarM3JanEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent));
   { M3JanEvent *p; p=(M3JanEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEventcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("mxCam=%lldLL",(long long)M3JanEvent::mxCam).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->frameId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"frameId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->runId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"runId=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->clusterV)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgR),G__defined_typename("vector<M3ImageCluster>"),-1,1,"clusterV[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->light)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_CcdLight),-1,-1,1,"light[4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc */
static void G__setup_memvardmtpc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpc));
   {
   }
   G__tag_memvar_reset();
}


   /* dmtpc::ped */
static void G__setup_memvardmtpccLcLped(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLped));
   {
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("isGood=%lldLL",(long long)dmtpc::ped::isGood).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("bad_isOff=%lldLL",(long long)dmtpc::ped::bad_isOff).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("bad_lowSum=%lldLL",(long long)dmtpc::ped::bad_lowSum).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("bad_pedRmsLo=%lldLL",(long long)dmtpc::ped::bad_pedRmsLo).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("bad_pedRmsHi=%lldLL",(long long)dmtpc::ped::bad_pedRmsHi).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLdA),-1,-2,1,G__FastAllocString(2048).Format("bad_pedAvrHi=%lldLL",(long long)dmtpc::ped::bad_pedAvrHi).data(),0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::ped::PixelTrace */
static void G__setup_memvardmtpccLcLpedcLcLPixelTrace(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace));
   { dmtpc::ped::PixelTrace *p; p=(dmtpc::ped::PixelTrace*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mBin=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"valErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"coreName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH1I),-1,-1,4,"hT=",0,"trace of ADU for this pixel");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::ped::PixelCorrel */
static void G__setup_memvardmtpccLcLpedcLcLPixelCorrel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel));
   { dmtpc::ped::PixelCorrel *p; p=(dmtpc::ped::PixelCorrel*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mBin1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"mBin2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"valErr1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"valErr2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"coreName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"hC=",0,"correlation between pixels");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::ped::M3CcdClusterMaker */
static void G__setup_memvardmtpccLcLpedcLcLM3CcdClusterMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker));
   { dmtpc::ped::M3CcdClusterMaker *p; p=(dmtpc::ped::M3CcdClusterMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMakercLcLFrameType),-1,-2,4,"frmHealthy=0LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMakercLcLFrameType),-1,-2,4,"frmStarSpark=-1LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMakercLcLFrameType),-1,-2,4,"frmPiSpark=-2LL",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMakercLcLFrameType),-1,-2,4,"frmPromise=1LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"coreName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"camId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"dbg=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TCanvas),-1,-1,4,"can=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"pdfName=",0,(char*)NULL);
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,4,"fdCSV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent),-1,-1,4,"jEve=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"h2Dlight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"hPedStat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"h2DlightRot=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"abortFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"listPiSpark=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"listStarSpark=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nPromise=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"hUtil=",0,"helping build clusters");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"mxH=32LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH1),-1,-1,4,"hA[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_nSigThr1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_nSigThr2=",0,"defines pixel threshold = ped+nSig*rms");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cut_cellCountL=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cut_clustLightL=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cut_clustDiagL=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cut_pcaRatioH=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TVector2),-1,-1,4,"cut_fiduC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cut_fiduPhi1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cut_fiduPhi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cut_fiduR2max=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"par_fiduBandPix=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"cut_factHadrRec=",0,"set >0 to activate ");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_starSparkLight=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_piSparkLtDens=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_piSparkDiag=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_piSparkNcell=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::ped::M3CcdCalibMaker */
static void G__setup_memvardmtpccLcLpedcLcLM3CcdCalibMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker));
   { dmtpc::ped::M3CcdCalibMaker *p; p=(dmtpc::ped::M3CcdCalibMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NtotEve=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"coreName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"camId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"camSrc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent),-1,-1,4,"jEve=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"h2Dlight=",0,"CCD image corrected for pedestal &mask, form 1 camera");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"h2DlightRot=",0,"CCD image centered & rotated at arbitrary");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgR),G__defined_typename("vector<PixelTrace>"),-1,4,"traceV=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgR),G__defined_typename("vector<PixelCorrel>"),-1,4,"correlV=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"h2GarbCol=",0,"garbage collector  for event images");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"mxH=16LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH1),-1,-1,4,"hA[16]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_bin2mm_4shutter_1x1=",0,"never changes");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_fixRawHistDims=",0,"jan's swithc to rescale axis, add padding, etc");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_userRebin=",0,"additional rebinning ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"hPedAvr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"hPedStat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"h2Dtempl=",0,"templet of raw input spectrum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* M3ImageCluster */
static void G__setup_memvarM3ImageCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster));
   { M3ImageCluster *p; p=(M3ImageCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->type)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"type=",0,"classification scheme : 0=good,   or rejected");
   G__memvar_setup((void*)((long)(&p->cellV)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_vectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgR),G__defined_typename("vector<M3ImageCell>"),-1,1,"cellV=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nBody)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nBody=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nSkin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nSkin=",0,"nBody cells are stored as first");
   G__memvar_setup((void*)((long)(&p->jxL)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"jxL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jyL)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"jyL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jxH)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"jxH=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jyH)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"jyH=",0,"box containing whole cluster body");
   G__memvar_setup((void*)((long)(&p->bin2mm)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"bin2mm=",0,"calibration: x(mm)= jx(bin)/bin2mm");
   G__memvar_setup((void*)((long)(&p->cmJx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cmJx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cmJy)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"cmJy=",0,"Light-weighed CM, in bin-units");
   G__memvar_setup((void*)((long)(&p->light)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"light=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Imin)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Imin=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Imax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Imax=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ialpha)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Ialpha=",0,"princiapl inertia moments (PCA) and axis rotation");
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType),-1,-2,1,G__FastAllocString(2048).Format("cluGood=%lldLL",(long long)M3ImageCluster::cluGood).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType),-1,-2,1,G__FastAllocString(2048).Format("cluTiny=%lldLL",(long long)M3ImageCluster::cluTiny).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType),-1,-2,1,G__FastAllocString(2048).Format("cluLight=%lldLL",(long long)M3ImageCluster::cluLight).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType),-1,-2,1,G__FastAllocString(2048).Format("cluDiag=%lldLL",(long long)M3ImageCluster::cluDiag).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType),-1,-2,1,G__FastAllocString(2048).Format("cluPca=%lldLL",(long long)M3ImageCluster::cluPca).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType),-1,-2,1,G__FastAllocString(2048).Format("cluCam3Edge=%lldLL",(long long)M3ImageCluster::cluCam3Edge).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType),-1,-2,1,G__FastAllocString(2048).Format("cluFidu=%lldLL",(long long)M3ImageCluster::cluFidu).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType),-1,-2,1,G__FastAllocString(2048).Format("cluHadrRec=%lldLL",(long long)M3ImageCluster::cluHadrRec).data(),0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* M3ImageCell */
static void G__setup_memvarM3ImageCell(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCell));
   { M3ImageCell *p; p=(M3ImageCell*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCellcLcLCellType),-1,-2,1,G__FastAllocString(2048).Format("celTrig=%lldLL",(long long)M3ImageCell::celTrig).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCellcLcLCellType),-1,-2,1,G__FastAllocString(2048).Format("celBody=%lldLL",(long long)M3ImageCell::celBody).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCellcLcLCellType),-1,-2,1,G__FastAllocString(2048).Format("celSkin=%lldLL",(long long)M3ImageCell::celSkin).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jx)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"jx=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->jy)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"jy=",0,"in TH2");
   G__memvar_setup((void*)((long)(&p->light)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"light=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->sigLight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"sigLight=",0,"(ADU) signal");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::ped::M3CcdImageUtil */
static void G__setup_memvardmtpccLcLpedcLcLM3CcdImageUtil(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil));
   { dmtpc::ped::M3CcdImageUtil *p; p=(dmtpc::ped::M3CcdImageUtil*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* dmtpc::ped::M3CcdPedMaker */
static void G__setup_memvardmtpccLcLpedcLcLM3CcdPedMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker));
   { dmtpc::ped::M3CcdPedMaker *p; p=(dmtpc::ped::M3CcdPedMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NtotEve=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"runId=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"coreName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"camSN=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nchX=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nchY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"camId=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"camSrc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"maxMbin=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"nReb=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fullNumPix=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"mxH=32LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH1),-1,-1,4,"hA[32]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2S),-1,-1,4,"hBigPed=",0,"the accumulator of ped spectra");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"h2Dtempl=",0,"templet of raw input spectrum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH1D),-1,-1,4,"h1Dped=",0,"full range ADU spectrum for 0-th frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I),-1,-1,4,"h2GarbCol=",0,"garbage collector  for event images");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"par_fixRawHistDims=",0,"rescale axis to e.g. fix 3084/3085 binning ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH1),-1,-1,4,"hAvr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH1),-1,-1,4,"hStat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH1),-1,-1,4,"hRms=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMakercLcLActiveImageLimit1N),-1,-1,4,"actLim=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_pedWindowHalf=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"par_aduLo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cut_pedAvrHi=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cut_peakSum=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cut_pedRmsL=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cut_pedRmsH=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,4,"cut_pedValH=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,4,"mxPedStat=7LL",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TString),-1,-1,4,"pdfName[7]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"pdfFract[7]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->can)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TCanvas),-1,-1,1,"can=",0,"single canvas , servs also as a flag");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarJanAnalysis2016Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncM3JanEvent(void) {
   /* M3JanEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent));
   G__memfunc_setup("M3JanEvent",923,G__JanAnalysis2016Cint_189_0_1, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearFrame",1010,G__JanAnalysis2016Cint_189_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__JanAnalysis2016Cint_189_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JanAnalysis2016Cint_189_0_4, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&M3JanEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JanAnalysis2016Cint_189_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&M3JanEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JanAnalysis2016Cint_189_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&M3JanEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JanAnalysis2016Cint_189_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&M3JanEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JanAnalysis2016Cint_189_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JanAnalysis2016Cint_189_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&M3JanEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JanAnalysis2016Cint_189_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&M3JanEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JanAnalysis2016Cint_189_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&M3JanEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JanAnalysis2016Cint_189_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&M3JanEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("M3JanEvent", 923, G__JanAnalysis2016Cint_189_0_16, (int) ('i'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent), -1, 0, 1, 1, 1, 0, "u 'M3JanEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~M3JanEvent", 1049, G__JanAnalysis2016Cint_189_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JanAnalysis2016Cint_189_0_18, (int) ('u'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3JanEvent), -1, 1, 1, 1, 1, 0, "u 'M3JanEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpc(void) {
   /* dmtpc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpc));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLped(void) {
   /* dmtpc::ped */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLped));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLpedcLcLPixelTrace(void) {
   /* dmtpc::ped::PixelTrace */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace));
   G__memfunc_setup("PixelTrace",1009,G__JanAnalysis2016Cint_193_0_1, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace), -1, 0, 0, 1, 1, 0, "", "for CINT", (void*) NULL, 0);
   G__memfunc_setup("PixelTrace",1009,G__JanAnalysis2016Cint_193_0_2, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace), -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 - pixName i - - 0 - mBin "
"f - - 0 - valErr i - - 0 - numFrame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveHisto",950,G__JanAnalysis2016Cint_193_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillFrom",827,G__JanAnalysis2016Cint_193_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH2I' - 0 - h2Dlight i - - 0 - frameId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JanAnalysis2016Cint_193_0_5, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::ped::PixelTrace::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JanAnalysis2016Cint_193_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::PixelTrace::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JanAnalysis2016Cint_193_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::ped::PixelTrace::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JanAnalysis2016Cint_193_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::ped::PixelTrace::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JanAnalysis2016Cint_193_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JanAnalysis2016Cint_193_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::PixelTrace::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JanAnalysis2016Cint_193_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::PixelTrace::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JanAnalysis2016Cint_193_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::PixelTrace::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JanAnalysis2016Cint_193_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::PixelTrace::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PixelTrace", 1009, G__JanAnalysis2016Cint_193_0_17, (int) ('i'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace), -1, 0, 1, 1, 1, 0, "u 'dmtpc::ped::PixelTrace' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PixelTrace", 1135, G__JanAnalysis2016Cint_193_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JanAnalysis2016Cint_193_0_19, (int) ('u'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace), -1, 1, 1, 1, 1, 0, "u 'dmtpc::ped::PixelTrace' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLpedcLcLPixelCorrel(void) {
   /* dmtpc::ped::PixelCorrel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel));
   G__memfunc_setup("PixelCorrel",1129,G__JanAnalysis2016Cint_194_0_1, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel), -1, 0, 0, 1, 1, 0, "", "for CINT", (void*) NULL, 0);
   G__memfunc_setup("PixelCorrel",1129,G__JanAnalysis2016Cint_194_0_2, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - pixName i - - 0 - bin1 "
"f - - 0 - err1 i - - 0 - bin2 "
"f - - 0 - err2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveHisto",950,G__JanAnalysis2016Cint_194_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillFrom",827,G__JanAnalysis2016Cint_194_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2I' - 0 - h2Dlight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JanAnalysis2016Cint_194_0_5, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::ped::PixelCorrel::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JanAnalysis2016Cint_194_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::PixelCorrel::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JanAnalysis2016Cint_194_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::ped::PixelCorrel::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JanAnalysis2016Cint_194_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::ped::PixelCorrel::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JanAnalysis2016Cint_194_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JanAnalysis2016Cint_194_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::PixelCorrel::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JanAnalysis2016Cint_194_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::PixelCorrel::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JanAnalysis2016Cint_194_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::PixelCorrel::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JanAnalysis2016Cint_194_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::PixelCorrel::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PixelCorrel", 1129, G__JanAnalysis2016Cint_194_0_17, (int) ('i'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel), -1, 0, 1, 1, 1, 0, "u 'dmtpc::ped::PixelCorrel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PixelCorrel", 1255, G__JanAnalysis2016Cint_194_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JanAnalysis2016Cint_194_0_19, (int) ('u'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel), -1, 1, 1, 1, 1, 0, "u 'dmtpc::ped::PixelCorrel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLpedcLcLM3CcdClusterMaker(void) {
   /* dmtpc::ped::M3CcdClusterMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker));
   G__memfunc_setup("M3CcdClusterMaker",1628,G__JanAnalysis2016Cint_198_0_1, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveHisto",950,G__JanAnalysis2016Cint_198_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initHisto",955,G__JanAnalysis2016Cint_198_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findSeedClusters",1655,G__JanAnalysis2016Cint_198_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasPiSpark",1014,G__JanAnalysis2016Cint_198_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("measureClusters",1607,G__JanAnalysis2016Cint_198_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", "cell-count & diameter", (void*) NULL, 0);
   G__memfunc_setup("bestTrack",931,G__JanAnalysis2016Cint_198_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("display",758,G__JanAnalysis2016Cint_198_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isFiducial",1021,G__JanAnalysis2016Cint_198_0_9, 105, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - xPix f - - 0 - yPix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("attachSkinToClusters",2082,G__JanAnalysis2016Cint_198_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDebug",819,G__JanAnalysis2016Cint_198_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCuts",747,G__JanAnalysis2016Cint_198_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - - 0 - x f - - 0 - y "
"f - - 0 - z f - - 0 - u", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHadrRecCut",1297,G__JanAnalysis2016Cint_198_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDrawings",1163,G__JanAnalysis2016Cint_198_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TCanvas' - 0 - can u 'TString' - 0 - outPath", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCSVreport",1236,G__JanAnalysis2016Cint_198_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - outFname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setJanEve",901,G__JanAnalysis2016Cint_198_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'M3JanEvent' - 0 - x i - - 0 - iCam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNsigThres12",1350,G__JanAnalysis2016Cint_198_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x f - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFiducial",1133,G__JanAnalysis2016Cint_198_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - bandPix", ">0 in, <0 out, =0 off", (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createCluster",1366,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - jchX i - - 0 - jchY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addCell",681,(G__InterfaceMethod) NULL, 100, -1, -1, 0, 5, 1, 4, 0, 
"i - - 0 - jxi i - - 0 - jyi "
"U 'M3ImageCluster' - 0 - cluster i - - 0 - cellType "
"i - - 0 - clustId", "was M3ImageCell::CellType", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JanAnalysis2016Cint_198_0_22, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::ped::M3CcdClusterMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JanAnalysis2016Cint_198_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdClusterMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JanAnalysis2016Cint_198_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::ped::M3CcdClusterMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JanAnalysis2016Cint_198_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::ped::M3CcdClusterMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JanAnalysis2016Cint_198_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JanAnalysis2016Cint_198_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdClusterMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JanAnalysis2016Cint_198_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::M3CcdClusterMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JanAnalysis2016Cint_198_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdClusterMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JanAnalysis2016Cint_198_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::M3CcdClusterMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("M3CcdClusterMaker", 1628, G__JanAnalysis2016Cint_198_0_34, (int) ('i'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker), -1, 0, 1, 1, 1, 0, "u 'dmtpc::ped::M3CcdClusterMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~M3CcdClusterMaker", 1754, G__JanAnalysis2016Cint_198_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JanAnalysis2016Cint_198_0_36, (int) ('u'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker), -1, 1, 1, 1, 1, 0, "u 'dmtpc::ped::M3CcdClusterMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLpedcLcLM3CcdCalibMaker(void) {
   /* dmtpc::ped::M3CcdCalibMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker));
   G__memfunc_setup("M3CcdCalibMaker",1365,G__JanAnalysis2016Cint_199_0_1, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("load_pedStat",1236,G__JanAnalysis2016Cint_199_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calibrateImage",1418,G__JanAnalysis2016Cint_199_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'dmtpc::core::Event' - 10 - eve", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initDims",833,G__JanAnalysis2016Cint_199_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "U 'dmtpc::core::Dataset' - 10 - ds", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPixTrace",1097,G__JanAnalysis2016Cint_199_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - xPix i - - 0 - yPix "
"i - - 0 - numFrame", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPixCorrel",1217,G__JanAnalysis2016Cint_199_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - - 0 - xPix i - - 0 - yPix "
"i - - 0 - dx i - - 0 - dy", "mind rebinning", (void*) NULL, 0);
   G__memfunc_setup("saveHisto",950,G__JanAnalysis2016Cint_199_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUserRebin",1243,G__JanAnalysis2016Cint_199_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setJanEve",901,G__JanAnalysis2016Cint_199_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'M3JanEvent' - 0 - x i - - 0 - iCam "
"i - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initHisto",955,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JanAnalysis2016Cint_199_0_12, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::ped::M3CcdCalibMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JanAnalysis2016Cint_199_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdCalibMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JanAnalysis2016Cint_199_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::ped::M3CcdCalibMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JanAnalysis2016Cint_199_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::ped::M3CcdCalibMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JanAnalysis2016Cint_199_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JanAnalysis2016Cint_199_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdCalibMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JanAnalysis2016Cint_199_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::M3CcdCalibMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JanAnalysis2016Cint_199_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdCalibMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JanAnalysis2016Cint_199_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::M3CcdCalibMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("M3CcdCalibMaker", 1365, G__JanAnalysis2016Cint_199_0_24, (int) ('i'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker), -1, 0, 1, 1, 1, 0, "u 'dmtpc::ped::M3CcdCalibMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~M3CcdCalibMaker", 1491, G__JanAnalysis2016Cint_199_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JanAnalysis2016Cint_199_0_26, (int) ('u'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker), -1, 1, 1, 1, 1, 0, "u 'dmtpc::ped::M3CcdCalibMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncM3ImageCluster(void) {
   /* M3ImageCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster));
   G__memfunc_setup("M3ImageCluster",1349,G__JanAnalysis2016Cint_210_0_1, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster), -1, 0, 1, 1, 1, 0, "f - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("M3ImageCluster",1349,G__JanAnalysis2016Cint_210_0_2, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster), -1, 0, 0, 1, 1, 0, "", "cint want this constructor", (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__JanAnalysis2016Cint_210_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__JanAnalysis2016Cint_210_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiagonal_mm",1432,G__JanAnalysis2016Cint_210_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDiagonal_bin",1527,G__JanAnalysis2016Cint_210_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("log10CellCount",1324,G__JanAnalysis2016Cint_210_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("log10Light",923,G__JanAnalysis2016Cint_210_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JanAnalysis2016Cint_210_0_9, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&M3ImageCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JanAnalysis2016Cint_210_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&M3ImageCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JanAnalysis2016Cint_210_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&M3ImageCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JanAnalysis2016Cint_210_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&M3ImageCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JanAnalysis2016Cint_210_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JanAnalysis2016Cint_210_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&M3ImageCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JanAnalysis2016Cint_210_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&M3ImageCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JanAnalysis2016Cint_210_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&M3ImageCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JanAnalysis2016Cint_210_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&M3ImageCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("M3ImageCluster", 1349, G__JanAnalysis2016Cint_210_0_21, (int) ('i'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster), -1, 0, 1, 1, 1, 0, "u 'M3ImageCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~M3ImageCluster", 1475, G__JanAnalysis2016Cint_210_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JanAnalysis2016Cint_210_0_23, (int) ('u'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCluster), -1, 1, 1, 1, 1, 0, "u 'M3ImageCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncM3ImageCell(void) {
   /* M3ImageCell */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCell));
   G__memfunc_setup("M3ImageCell",995,G__JanAnalysis2016Cint_211_0_1, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCell), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__JanAnalysis2016Cint_211_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__JanAnalysis2016Cint_211_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 '0' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JanAnalysis2016Cint_211_0_4, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&M3ImageCell::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JanAnalysis2016Cint_211_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&M3ImageCell::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JanAnalysis2016Cint_211_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&M3ImageCell::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JanAnalysis2016Cint_211_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&M3ImageCell::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JanAnalysis2016Cint_211_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JanAnalysis2016Cint_211_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&M3ImageCell::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JanAnalysis2016Cint_211_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&M3ImageCell::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JanAnalysis2016Cint_211_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&M3ImageCell::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JanAnalysis2016Cint_211_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&M3ImageCell::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("M3ImageCell", 995, G__JanAnalysis2016Cint_211_0_16, (int) ('i'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCell), -1, 0, 1, 1, 1, 0, "u 'M3ImageCell' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~M3ImageCell", 1121, G__JanAnalysis2016Cint_211_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JanAnalysis2016Cint_211_0_18, (int) ('u'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_M3ImageCell), -1, 1, 1, 1, 1, 0, "u 'M3ImageCell' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLpedcLcLM3CcdImageUtil(void) {
   /* dmtpc::ped::M3CcdImageUtil */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil));
   G__memfunc_setup("M3CcdImageUtil",1291,G__JanAnalysis2016Cint_213_0_1, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("convert764toOS",1319,G__JanAnalysis2016Cint_213_0_2, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TH2I), -1, 0, 2, 3, 1, 0, 
"U 'TH2I' - 0 - h2raw i - - 0 - camId", (char*)NULL, (void*) G__func2void( (TH2I* (*)(TH2I*, int))(&dmtpc::ped::M3CcdImageUtil::convert764toOS) ), 0);
   G__memfunc_setup("Class",502,G__JanAnalysis2016Cint_213_0_3, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::ped::M3CcdImageUtil::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JanAnalysis2016Cint_213_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdImageUtil::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JanAnalysis2016Cint_213_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::ped::M3CcdImageUtil::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JanAnalysis2016Cint_213_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::ped::M3CcdImageUtil::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JanAnalysis2016Cint_213_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JanAnalysis2016Cint_213_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdImageUtil::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JanAnalysis2016Cint_213_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::M3CcdImageUtil::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JanAnalysis2016Cint_213_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdImageUtil::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JanAnalysis2016Cint_213_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::M3CcdImageUtil::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("M3CcdImageUtil", 1291, G__JanAnalysis2016Cint_213_0_15, (int) ('i'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil), -1, 0, 1, 1, 1, 0, "u 'dmtpc::ped::M3CcdImageUtil' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~M3CcdImageUtil", 1417, G__JanAnalysis2016Cint_213_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JanAnalysis2016Cint_213_0_17, (int) ('u'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil), -1, 1, 1, 1, 1, 0, "u 'dmtpc::ped::M3CcdImageUtil' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncdmtpccLcLpedcLcLM3CcdPedMaker(void) {
   /* dmtpc::ped::M3CcdPedMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker));
   G__memfunc_setup("M3CcdPedMaker",1171,G__JanAnalysis2016Cint_218_0_1, 105, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("accumulatePed",1341,G__JanAnalysis2016Cint_218_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'dmtpc::core::Event' - 10 - eve", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initDims",833,G__JanAnalysis2016Cint_218_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'dmtpc::core::Dataset' - 10 - ds i - - 0 - camId "
"i - - 0 - camSrc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveHisto",950,G__JanAnalysis2016Cint_218_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TFile' - 0 - - i - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ingest_pedSpecBig",1727,G__JanAnalysis2016Cint_218_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fName", "back door", (void*) NULL, 0);
   G__memfunc_setup("computePed",1046,G__JanAnalysis2016Cint_218_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPar",623,G__JanAnalysis2016Cint_218_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - - 0 - x f - - 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initHisto",955,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initMask",832,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("adjustCuts",1066,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findPedPeak",1083,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'TH2S' - 0 - h2 U 'dmtpc::ped::PedInfo' - 0 - item "
"i - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__JanAnalysis2016Cint_218_0_12, 85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&dmtpc::ped::M3CcdPedMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__JanAnalysis2016Cint_218_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdPedMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__JanAnalysis2016Cint_218_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&dmtpc::ped::M3CcdPedMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__JanAnalysis2016Cint_218_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&dmtpc::ped::M3CcdPedMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__JanAnalysis2016CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__JanAnalysis2016Cint_218_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__JanAnalysis2016Cint_218_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdPedMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__JanAnalysis2016Cint_218_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::M3CcdPedMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__JanAnalysis2016Cint_218_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&dmtpc::ped::M3CcdPedMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__JanAnalysis2016Cint_218_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&dmtpc::ped::M3CcdPedMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("M3CcdPedMaker", 1171, G__JanAnalysis2016Cint_218_0_24, (int) ('i'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker), -1, 0, 1, 1, 1, 0, "u 'dmtpc::ped::M3CcdPedMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~M3CcdPedMaker", 1297, G__JanAnalysis2016Cint_218_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__JanAnalysis2016Cint_218_0_26, (int) ('u'), G__get_linked_tagnum(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker), -1, 1, 1, 1, 1, 0, "u 'dmtpc::ped::M3CcdPedMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncJanAnalysis2016Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalJanAnalysis2016Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcJanAnalysis2016Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__JanAnalysis2016CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TH2I = { "TH2I" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_M3JanEvent = { "M3JanEvent" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TH1I = { "TH1I" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpc = { "dmtpc" , 110 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLped = { "dmtpc::ped" , 110 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace = { "dmtpc::ped::PixelTrace" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel = { "dmtpc::ped::PixelCorrel" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLcore = { "dmtpc::core" , 110 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLcorecLcLEvent = { "dmtpc::core::Event" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLcorecLcLDataset = { "dmtpc::core::Dataset" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker = { "dmtpc::ped::M3CcdClusterMaker" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker = { "dmtpc::ped::M3CcdCalibMaker" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgR = { "vector<dmtpc::ped::PixelTrace,allocator<dmtpc::ped::PixelTrace> >" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::ped::PixelTrace,allocator<dmtpc::ped::PixelTrace> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgR = { "vector<dmtpc::ped::PixelCorrel,allocator<dmtpc::ped::PixelCorrel> >" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<dmtpc::ped::PixelCorrel,allocator<dmtpc::ped::PixelCorrel> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_M3ImageCluster = { "M3ImageCluster" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_M3ImageCell = { "M3ImageCell" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMakercLcLFrameType = { "dmtpc::ped::M3CcdClusterMaker::FrameType" , 101 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil = { "dmtpc::ped::M3CcdImageUtil" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TH2S = { "TH2S" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPedInfo = { "dmtpc::ped::PedInfo" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLdA = { "dmtpc::ped::$" , 101 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker = { "dmtpc::ped::M3CcdPedMaker" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMakercLcLActiveImageLimit1N = { "dmtpc::ped::M3CcdPedMaker::ActiveImageLimit1N" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_M3ImageCellcLcLCellType = { "M3ImageCell::CellType" , 101 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_vectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgR = { "vector<M3ImageCell,allocator<M3ImageCell> >" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<M3ImageCell,allocator<M3ImageCell> >::iterator>" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType = { "M3ImageCluster::ClusterType" , 101 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_CcdLight = { "CcdLight" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_M3JanEventcLcLdA = { "M3JanEvent::$" , 101 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_vectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgR = { "vector<M3ImageCluster,allocator<M3ImageCluster> >" , 99 , -1 };
G__linked_taginfo G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<M3ImageCluster,allocator<M3ImageCluster> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableJanAnalysis2016Cint() {
  G__JanAnalysis2016CintLN_TClass.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TBuffer.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TMemberInspector.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TObject.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TString.tagnum = -1 ;
  G__JanAnalysis2016CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TH2I.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TH1.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TFile.tagnum = -1 ;
  G__JanAnalysis2016CintLN_M3JanEvent.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TH1I.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpc.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLped.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLcore.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLcorecLcLEvent.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLcorecLcLDataset.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker.tagnum = -1 ;
  G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TVector2.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TCanvas.tagnum = -1 ;
  G__JanAnalysis2016CintLN_M3ImageCluster.tagnum = -1 ;
  G__JanAnalysis2016CintLN_M3ImageCell.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMakercLcLFrameType.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TH2S.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TH1D.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPedInfo.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLdA.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker.tagnum = -1 ;
  G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMakercLcLActiveImageLimit1N.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_M3ImageCellcLcLCellType.tagnum = -1 ;
  G__JanAnalysis2016CintLN_vectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType.tagnum = -1 ;
  G__JanAnalysis2016CintLN_CcdLight.tagnum = -1 ;
  G__JanAnalysis2016CintLN_M3JanEventcLcLdA.tagnum = -1 ;
  G__JanAnalysis2016CintLN_vectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgR.tagnum = -1 ;
  G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableJanAnalysis2016Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TString);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TH2I);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TH1);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_M3JanEvent),sizeof(M3JanEvent),-1,292096,(char*)NULL,G__setup_memvarM3JanEvent,G__setup_memfuncM3JanEvent);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TH1I);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpc),0,-1,0,(char*)NULL,G__setup_memvardmtpc,G__setup_memfuncdmtpc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLped),0,-1,0,(char*)NULL,G__setup_memvardmtpccLcLped,G__setup_memfuncdmtpccLcLped);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelTrace),sizeof(dmtpc::ped::PixelTrace),-1,324864,(char*)NULL,G__setup_memvardmtpccLcLpedcLcLPixelTrace,G__setup_memfuncdmtpccLcLpedcLcLPixelTrace);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPixelCorrel),sizeof(dmtpc::ped::PixelCorrel),-1,324864,(char*)NULL,G__setup_memvardmtpccLcLpedcLcLPixelCorrel,G__setup_memfuncdmtpccLcLpedcLcLPixelCorrel);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLcore);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLcorecLcLEvent);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLcorecLcLDataset);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMaker),sizeof(dmtpc::ped::M3CcdClusterMaker),-1,292096,(char*)NULL,G__setup_memvardmtpccLcLpedcLcLM3CcdClusterMaker,G__setup_memfuncdmtpccLcLpedcLcLM3CcdClusterMaker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdCalibMaker),sizeof(dmtpc::ped::M3CcdCalibMaker),-1,292096,(char*)NULL,G__setup_memvardmtpccLcLpedcLcLM3CcdCalibMaker,G__setup_memfuncdmtpccLcLpedcLcLM3CcdCalibMaker);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelTracecOallocatorlEdmtpccLcLpedcLcLPixelTracegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_vectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEdmtpccLcLpedcLcLPixelCorrelcOallocatorlEdmtpccLcLpedcLcLPixelCorrelgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TVector2);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_M3ImageCluster),sizeof(M3ImageCluster),-1,323840,(char*)NULL,G__setup_memvarM3ImageCluster,G__setup_memfuncM3ImageCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_M3ImageCell),sizeof(M3ImageCell),-1,292096,(char*)NULL,G__setup_memvarM3ImageCell,G__setup_memfuncM3ImageCell);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdClusterMakercLcLFrameType);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdImageUtil),sizeof(dmtpc::ped::M3CcdImageUtil),-1,292096,(char*)NULL,G__setup_memvardmtpccLcLpedcLcLM3CcdImageUtil,G__setup_memfuncdmtpccLcLpedcLcLM3CcdImageUtil);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TH2S);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TH1D);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLPedInfo);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLdA);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMaker),sizeof(dmtpc::ped::M3CcdPedMaker),-1,292096,(char*)NULL,G__setup_memvardmtpccLcLpedcLcLM3CcdPedMaker,G__setup_memfuncdmtpccLcLpedcLcLM3CcdPedMaker);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_dmtpccLcLpedcLcLM3CcdPedMakercLcLActiveImageLimit1N);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_M3ImageCellcLcLCellType);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_vectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageCellcOallocatorlEM3ImageCellgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_M3ImageClustercLcLClusterType);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_CcdLight);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_M3JanEventcLcLdA);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_vectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgR);
   G__get_linked_tagnum_fwd(&G__JanAnalysis2016CintLN_reverse_iteratorlEvectorlEM3ImageClustercOallocatorlEM3ImageClustergRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupJanAnalysis2016Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupJanAnalysis2016Cint()");
  G__set_cpp_environmentJanAnalysis2016Cint();
  G__cpp_setup_tagtableJanAnalysis2016Cint();

  G__cpp_setup_inheritanceJanAnalysis2016Cint();

  G__cpp_setup_typetableJanAnalysis2016Cint();

  G__cpp_setup_memvarJanAnalysis2016Cint();

  G__cpp_setup_memfuncJanAnalysis2016Cint();
  G__cpp_setup_globalJanAnalysis2016Cint();
  G__cpp_setup_funcJanAnalysis2016Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncJanAnalysis2016Cint();
  return;
}
class G__cpp_setup_initJanAnalysis2016Cint {
  public:
    G__cpp_setup_initJanAnalysis2016Cint() { G__add_setup_func("JanAnalysis2016Cint",(G__incsetup)(&G__cpp_setupJanAnalysis2016Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initJanAnalysis2016Cint() { G__remove_setup_func("JanAnalysis2016Cint"); }
};
G__cpp_setup_initJanAnalysis2016Cint G__cpp_setup_initializerJanAnalysis2016Cint;

